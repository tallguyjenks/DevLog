{"pageProps":{"note":{"id":"u9cpqr3dpozpvae0rtykwvo","title":"The Interface Segregation Principle","desc":"","updated":1641268282124,"created":1641105063869,"stub":false,"isDir":false,"custom":{"stub":false,"isDir":false},"fname":"r.{.clean-code.the-interface-segregation-principle","type":"note","vault":{"fsPath":"DevLog"},"contentHash":"4b3d79d0ffc03532efccaa7c9f644a0f","links":[{"type":"wiki","from":{"fname":"r.{.clean-code.the-interface-segregation-principle","id":"u9cpqr3dpozpvae0rtykwvo","vaultName":"DevLog"},"value":"r.{.clean-code.the-single-responsibility-principle","alias":"the-single-responsibility-principle","position":{"start":{"line":7,"column":118,"offset":393},"end":{"line":7,"column":208,"offset":483},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"r.{.clean-code.the-single-responsibility-principle"}},{"type":"wiki","from":{"fname":"r.{.clean-code.the-interface-segregation-principle","id":"u9cpqr3dpozpvae0rtykwvo","vaultName":"DevLog"},"value":"r.(.2021.11.10.solid-coding-in-python","alias":"SOLID Coding in Python","position":{"start":{"line":91,"column":5,"offset":2162},"end":{"line":91,"column":69,"offset":2226},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"r.(.2021.11.10.solid-coding-in-python"}},{"type":"wiki","from":{"fname":"r.{.clean-code.the-interface-segregation-principle","id":"u9cpqr3dpozpvae0rtykwvo","vaultName":"DevLog"},"value":"s.l.python.oop.abstract-base-classes","alias":"Python Abstract Base Classes","position":{"start":{"line":93,"column":5,"offset":2242},"end":{"line":93,"column":74,"offset":2311},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"s.l.python.oop.abstract-base-classes"}},{"from":{"fname":"r.(.2021.11.10.solid-coding-in-python","vaultName":"DevLog"},"type":"backlink","position":{"start":{"line":14,"column":3,"offset":502},"end":{"line":14,"column":93,"offset":592},"indent":[]},"value":"r.{.clean-code.the-interface-segregation-principle","alias":"The Interface Segregation Principle"}],"anchors":{"tags":{"type":"header","text":"Tags:","value":"tags","line":97,"column":2,"depth":2}},"children":[],"parent":"hd44ccm50fsgfvavcptsfes","data":{}},"body":"<h1 id=\"the-interface-segregation-principle\"><a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#the-interface-segregation-principle\"></a>The Interface Segregation Principle</h1>\n<blockquote>\n<p>“Many client-specific interfaces are better than one general-purpose interface”\n<br>\nIn the contest of classes, an interface is considered, all the methods and properties “<strong>exposed</strong>”, thus, everything that a user can interact with that belongs to that class.\n<br>\nIn this sense, the The Interface Segregation Principle tell us that a class should only have the interface needed (<a href=\"/DevLog/notes/77as5fo1z0tumngaml2rxip\">the-single-responsibility-principle</a>) and avoid methods that won’t work or that have no reason to be part of that class.\n<br>\nThis problem arises, primarily, when, a subclass inherits methods from a base class that it does not need.</p>\n</blockquote>\n<pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">import</span> numpy <span class=\"token keyword\">as</span> np\n<span class=\"token keyword\">from</span> abc <span class=\"token keyword\">import</span> ABC<span class=\"token punctuation\">,</span> abstractmethod\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Mammals</span><span class=\"token punctuation\">(</span>ABC<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token decorator annotation punctuation\">@abstractmethod</span>\n    <span class=\"token keyword\">def</span> <span class=\"token function\">swim</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span> <span class=\"token builtin\">bool</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Can Swim\"</span><span class=\"token punctuation\">)</span> \n\n    <span class=\"token decorator annotation punctuation\">@abstractmethod</span>\n    <span class=\"token keyword\">def</span> <span class=\"token function\">walk</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span> <span class=\"token builtin\">bool</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Can Walk\"</span><span class=\"token punctuation\">)</span> \n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Human</span><span class=\"token punctuation\">(</span>Mammals<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">def</span> <span class=\"token function\">swim</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">return</span> <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Humans can swim\"</span><span class=\"token punctuation\">)</span> \n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">walk</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">return</span> <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Humans can walk\"</span><span class=\"token punctuation\">)</span> \n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Whale</span><span class=\"token punctuation\">(</span>Mammals<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">def</span> <span class=\"token function\">swim</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">return</span> <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Whales can swim\"</span><span class=\"token punctuation\">)</span> \n\t\n<span class=\"token comment\"># ========================================= #</span>\nHuman<span class=\"token punctuation\">.</span>swim<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\nHuman<span class=\"token punctuation\">.</span>walk<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\nWhale<span class=\"token punctuation\">.</span>swim<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\nWhale<span class=\"token punctuation\">.</span>walk<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># Humans can swim</span>\n<span class=\"token comment\"># Humans can walk</span>\n<span class=\"token comment\"># Whales can swim</span>\n<span class=\"token comment\"># Can Walk</span>\n</code></pre>\n<p>The sub-class whale can still invoke the method “walk” but it shouldn’t, and we must avoid it.</p>\n<p>The way suggested by <code>ISP</code> is to create more client-specific interfaces rather than one general-purpose interface. So, our code example becomes:</p>\n<pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">from</span> abc <span class=\"token keyword\">import</span> ABC<span class=\"token punctuation\">,</span> abstractmethod\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Walker</span><span class=\"token punctuation\">(</span>ABC<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n  <span class=\"token decorator annotation punctuation\">@abstractmethod</span>\n  <span class=\"token keyword\">def</span> <span class=\"token function\">walk</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span> <span class=\"token builtin\">bool</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">return</span> <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Can Walk\"</span><span class=\"token punctuation\">)</span> \n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Swimmer</span><span class=\"token punctuation\">(</span>ABC<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n  <span class=\"token decorator annotation punctuation\">@abstractmethod</span>\n  <span class=\"token keyword\">def</span> <span class=\"token function\">swim</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span> <span class=\"token builtin\">bool</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">return</span> <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Can Swim\"</span><span class=\"token punctuation\">)</span> \n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Human</span><span class=\"token punctuation\">(</span>Walker<span class=\"token punctuation\">,</span> Swimmer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n  <span class=\"token keyword\">def</span> <span class=\"token function\">walk</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">return</span> <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Humans can walk\"</span><span class=\"token punctuation\">)</span> \n  <span class=\"token keyword\">def</span> <span class=\"token function\">swim</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">return</span> <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Humans can swim\"</span><span class=\"token punctuation\">)</span> \n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Whale</span><span class=\"token punctuation\">(</span>Swimmer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n  <span class=\"token keyword\">def</span> <span class=\"token function\">swim</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">return</span> <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Whales can swim\"</span><span class=\"token punctuation\">)</span> \n\n<span class=\"token keyword\">if</span> __name__ <span class=\"token operator\">==</span> <span class=\"token string\">\"__main__\"</span><span class=\"token punctuation\">:</span>\n  Human<span class=\"token punctuation\">.</span>walk<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  Human<span class=\"token punctuation\">.</span>swim<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n  Whale<span class=\"token punctuation\">.</span>swim<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  Whale<span class=\"token punctuation\">.</span>walk<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># Humans can walk</span>\n<span class=\"token comment\"># Humans can swim</span>\n<span class=\"token comment\"># Whales can swim</span>\n</code></pre>\n<hr>\n<ul>\n<li>\n<h2 id=\"tags\"><a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#tags\"></a>Tags:</h2>\n</li>\n<li>Reference:\n<ul>\n<li><a href=\"/DevLog/notes/9knz69r6nooffoynnm56e9h\">SOLID Coding in Python</a></li>\n</ul>\n</li>\n<li>Related:\n<ul>\n<li><a href=\"/DevLog/notes/v7i96kp105u0du2q9tz97ta\">Python Abstract Base Classes</a></li>\n</ul>\n</li>\n</ul>\n<hr>\n<strong>Backlinks</strong>\n<ul>\n<li><a href=\"/DevLog/notes/9knz69r6nooffoynnm56e9h\">Solid Coding in Python (DevLog)</a></li>\n</ul>","noteIndex":{"id":"root","title":"root","desc":"","updated":1641013093667,"created":1595961348801,"stub":false,"custom":{"stub":false,"nav_order":0,"permalink":"/"},"fname":"root","type":"note","vault":{"fsPath":"DevLog"},"contentHash":"b0b26527a2962dbb8bd5fb9a53ad702f","links":[],"anchors":{},"children":["rzqe5mjn3q2zfscw1roxr20","Bl9NeJmftBQJyJA3X4a6u","inm1S24v2GcN3Quf7gzDb","fmx7cfcdzale0ezna61yq5z","q6tr8q7gahfijix2ktlhcu3","yah6spesmpstech2ue2k3lq","6pxwlugphnw6vm4t8kn0j5p","i17wi8y2hgivywe08h6q6it","1st35wikvph2aew8aana21u","mijr0wvj3qz0mt9pv9xo1jv","qaf8v120h0ffvbowysjxw50","sh4851li2rsrhx47wwsirgv","fwqjigvqyfxiyl3pbpjvgdw","pxdvvln974xhe8w0alh0hoy","n6yddb1smrac5ll3l1y6wbd","g5dllyqoqkenoiz3opalzu6","kbwt8ucy0yh6bo8fl0kv9iw","beykavbe22agsufmm03hu0c","2uvuqa3c15o5r4j7sqadqvr","yr6gzhx0bhzyec6f52y66vf","4no90tcdswtuwmjm0bxnetx"],"parent":null,"data":{},"body":"\nThe hyperfixated rabbit hole diving knowledge base that is my brain looking at technology.\n"},"collectionChildren":null,"customHeadContent":null,"config":{"version":5,"dev":{"enablePreviewV2":true},"commands":{"lookup":{"note":{"selectionMode":"extract","confirmVaultOnCreate":true,"leaveTrace":false,"bubbleUpCreateNew":true,"fuzzThreshold":0.2,"vaultSelectionModeOnCreate":"smart"}},"randomNote":{},"insertNote":{"initialValue":"templates"},"insertNoteLink":{"aliasMode":"none","enableMultiSelect":false},"insertNoteIndex":{"enableMarker":false},"copyNoteLink":{},"templateHierarchy":"template"},"workspace":{"vaults":[{"fsPath":"sterkere","visibility":"private"},{"fsPath":"Norsk","visibility":"private"},{"fsPath":"DevLog"}],"journal":{"dailyDomain":"log","name":"daily","dateFormat":"yyyy.MM.dd","addBehavior":"childOfCurrent"},"scratch":{"name":"scratch","dateFormat":"yyyy.MM.dd.HHmmss","addBehavior":"asOwnDomain"},"task":{"todoIntegration":true,"name":"task","dateFormat":"yyyy.MM.dd","addBehavior":"asOwnDomain","statusSymbols":{"":" ","wip":"wip","done":"x","assigned":"a","moved":"m","blocked":"b","delegated":"l","dropped":"d","pending":"y"},"prioritySymbols":{"H":"high","M":"medium","L":"low"},"createTaskSelectionType":"selection2link","taskCompleteStatus":["done","x"]},"graph":{"zoomSpeed":1,"createStub":false},"enableAutoCreateOnDefinition":false,"enableXVaultWikiLink":false,"enableRemoteVaultInit":true,"enableUserTags":true,"enableHashTags":true,"workspaceVaultSyncMode":"noCommit","enableAutoFoldFrontmatter":false,"enableEditorDecorations":true,"maxPreviewsCached":10,"maxNoteLength":204800,"dendronVersion":"0.95.1","enableFullHierarchyNoteTitle":false,"enableHandlebarTemplates":false,"templateHierarchy":"template","enableSmartRefs":false},"preview":{"enableFMTitle":true,"enableNoteTitleForLink":true,"enableMermaid":true,"enablePrettyRefs":true,"enableKatex":true,"automaticallyShowPreview":false,"enableFrontmatterTags":true,"enableHashesForFMTags":false},"publishing":{"theme":"custom","enableFMTitle":true,"enableNoteTitleForLink":true,"enableMermaid":true,"enablePrettyRefs":true,"enableKatex":true,"assetsPrefix":"/DevLog","copyAssets":true,"siteHierarchies":["root"],"enableSiteLastModified":true,"siteRootDir":"docs","siteUrl":"https://{GITHUB_USERNAME}.github.io","enableFrontmatterTags":true,"enableHashesForFMTags":false,"enableRandomlyColoredTags":true,"duplicateNoteBehavior":{"action":"useVault","payload":["DevLog"]},"writeStubs":false,"seo":{"title":"Dendron","description":"Personal knowledge space"},"github":{"enableEditLink":true,"editLinkText":"Edit this page on GitHub","editBranch":"master","editViewMode":"tree"},"enablePrettyLinks":true,"enableTaskNotes":true,"siteFaviconPath":"favicon.ico","siteIndex":"root"}}},"__N_SSG":true}