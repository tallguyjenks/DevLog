{"pageProps":{"note":{"id":"hb134d78yvqxwglmjt3v3o9","title":"Retry","desc":"","updated":1657052945102,"created":1657052695313,"custom":{},"fname":"s.l.python.libs.retry","type":"note","vault":{"fsPath":"DevLog"},"contentHash":"793db233409d7afb8db241e74cfb4d80","links":[{"type":"wiki","from":{"fname":"s.l.python.libs.retry","id":"hb134d78yvqxwglmjt3v3o9","vaultName":"DevLog"},"value":"s.l.python.libs.fastapi","alias":"s.l.python.libs.fastapi","position":{"start":{"line":4,"column":12,"offset":56},"end":{"line":4,"column":39,"offset":83},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"s.l.python.libs.fastapi"}}],"anchors":{"setup":{"type":"header","text":"Setup","value":"setup","line":14,"column":0,"depth":2},"usage":{"type":"header","text":"Usage","value":"usage","line":30,"column":0,"depth":2},"put-it-all-toether":{"type":"header","text":"Put it all toether","value":"put-it-all-toether","line":46,"column":0,"depth":2},"configuration":{"type":"header","text":"Configuration","value":"configuration","line":70,"column":0,"depth":2}},"children":[],"parent":"uf16h268w8q6iuscgzf5xuw","data":{}},"body":"<h1 id=\"retry\"><a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#retry\"></a>Retry</h1>\n<p><a href=\"https://calmcode.io/shorts/retry.py.html\">https://calmcode.io/shorts/retry.py.html</a></p>\n<p>Related to <a href=\"/DevLog/notes/s3z841ezl7wxwc8pmv7bmzz\">Fastapi</a></p>\n<blockquote>\n<p>The retry library has a single decorator that can tell the function to try again after failing. Here's how you can use it:</p>\n</blockquote>\n<h2 id=\"setup\"><a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#setup\"></a>Setup</h2>\n<pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">import</span> random\n<span class=\"token keyword\">from</span> requests<span class=\"token punctuation\">.</span>exceptions <span class=\"token keyword\">import</span> HTTPError\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">pretend_request</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">if</span> random<span class=\"token punctuation\">.</span>random<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&#x3C;</span> <span class=\"token number\">0.01</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">raise</span> HTTPError<span class=\"token punctuation\">(</span><span class=\"token string\">\"Something went wrong!\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span><span class=\"token string\">\"status\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"alive\"</span><span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\"># You'll likely hit an error</span>\n<span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">500</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    pretend_request<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<h2 id=\"usage\"><a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#usage\"></a>Usage</h2>\n<pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">from</span> retry <span class=\"token keyword\">import</span> retry\n\n<span class=\"token decorator annotation punctuation\">@retry</span><span class=\"token punctuation\">(</span>tries<span class=\"token operator\">=</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span> delay<span class=\"token operator\">=</span><span class=\"token number\">0.1</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">def</span> <span class=\"token function\">pretend_request</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">if</span> random<span class=\"token punctuation\">.</span>random<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&#x3C;</span> <span class=\"token number\">0.01</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">raise</span> HTTPError<span class=\"token punctuation\">(</span><span class=\"token string\">\"Something went wrong!\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span><span class=\"token string\">\"status\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"alive\"</span><span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\"># You'll likely hit an error</span>\n<span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">500</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    pretend_request<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<h2 id=\"put-it-all-toether\"><a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#put-it-all-toether\"></a>Put it all toether</h2>\n<pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">import</span> random\n<span class=\"token keyword\">import</span> logging\n<span class=\"token keyword\">from</span> requests<span class=\"token punctuation\">.</span>exceptions <span class=\"token keyword\">import</span> HTTPError\n<span class=\"token keyword\">from</span> retry <span class=\"token keyword\">import</span> retry\n\nlogging<span class=\"token punctuation\">.</span>basicConfig<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token decorator annotation punctuation\">@retry</span><span class=\"token punctuation\">(</span>HTTPError<span class=\"token punctuation\">,</span> tries<span class=\"token operator\">=</span><span class=\"token number\">10</span><span class=\"token punctuation\">,</span> delay<span class=\"token operator\">=</span><span class=\"token number\">0.1</span><span class=\"token punctuation\">,</span> backoff<span class=\"token operator\">=</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">def</span> <span class=\"token function\">pretend_request</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">if</span> random<span class=\"token punctuation\">.</span>random<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&#x3C;</span> <span class=\"token number\">0.1</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">raise</span> rq<span class=\"token punctuation\">.</span>exceptions<span class=\"token punctuation\">.</span>HTTPError<span class=\"token punctuation\">(</span><span class=\"token string\">\"Something went wrong!\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span><span class=\"token string\">\"status\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"alive\"</span><span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">100</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    pretend_request<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># >>> WARNING:retry.api:Something went wrong!, retrying in 0.1 seconds...</span>\n<span class=\"token comment\"># >>> WARNING:retry.api:Something went wrong!, retrying in 0.2 seconds...</span>\n<span class=\"token comment\"># >>> WARNING:retry.api:Something went wrong!, retrying in 0.4 seconds...</span>\n</code></pre>\n<h2 id=\"configuration\"><a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#configuration\"></a>Configuration</h2>\n<pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">import</span> random\n<span class=\"token keyword\">from</span> retry <span class=\"token keyword\">import</span> retry\n<span class=\"token keyword\">from</span> requests<span class=\"token punctuation\">.</span>exceptions <span class=\"token keyword\">import</span> HTTPError\n\n\n<span class=\"token decorator annotation punctuation\">@retry</span><span class=\"token punctuation\">(</span>HTTPError<span class=\"token punctuation\">,</span> tries<span class=\"token operator\">=</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span> delay<span class=\"token operator\">=</span><span class=\"token number\">0.1</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">def</span> <span class=\"token function\">pretend_request</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">if</span> random<span class=\"token punctuation\">.</span>random<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&#x3C;</span> <span class=\"token number\">0.01</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">raise</span> HTTPError<span class=\"token punctuation\">(</span><span class=\"token string\">\"Something went wrong!\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span><span class=\"token string\">\"status\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"alive\"</span><span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\"># Now, the function will only retry if detects a HTTPError. If you were to configure it to only respond to ValueError and TypeError then any other errors will be ignored.</span>\n\n<span class=\"token decorator annotation punctuation\">@retry</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>ValueError<span class=\"token punctuation\">,</span> TypeError<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> tries<span class=\"token operator\">=</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span> delay<span class=\"token operator\">=</span><span class=\"token number\">0.1</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">def</span> <span class=\"token function\">pretend_request</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">if</span> random<span class=\"token punctuation\">.</span>random<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&#x3C;</span> <span class=\"token number\">0.01</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">raise</span> HTTPError<span class=\"token punctuation\">(</span><span class=\"token string\">\"Something went wrong!\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span><span class=\"token string\">\"status\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"alive\"</span><span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\"># You'll likely hit an error again</span>\n<span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">500</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    pretend_request<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n</code></pre>","noteIndex":{"id":"root","title":"root","desc":"","updated":1641013093667,"created":1595961348801,"stub":false,"custom":{"stub":false,"nav_order":0,"permalink":"/"},"fname":"root","type":"note","vault":{"fsPath":"DevLog"},"contentHash":"b0b26527a2962dbb8bd5fb9a53ad702f","links":[],"anchors":{},"children":["rzqe5mjn3q2zfscw1roxr20","Bl9NeJmftBQJyJA3X4a6u","inm1S24v2GcN3Quf7gzDb","fmx7cfcdzale0ezna61yq5z","q6tr8q7gahfijix2ktlhcu3","yah6spesmpstech2ue2k3lq","6pxwlugphnw6vm4t8kn0j5p","i17wi8y2hgivywe08h6q6it","1st35wikvph2aew8aana21u","mijr0wvj3qz0mt9pv9xo1jv","qaf8v120h0ffvbowysjxw50","sh4851li2rsrhx47wwsirgv","fwqjigvqyfxiyl3pbpjvgdw","pxdvvln974xhe8w0alh0hoy","n6yddb1smrac5ll3l1y6wbd","g5dllyqoqkenoiz3opalzu6","kbwt8ucy0yh6bo8fl0kv9iw","beykavbe22agsufmm03hu0c","2uvuqa3c15o5r4j7sqadqvr","yr6gzhx0bhzyec6f52y66vf","4no90tcdswtuwmjm0bxnetx"],"parent":null,"data":{},"body":"\nThe hyperfixated rabbit hole diving knowledge base that is my brain looking at technology.\n"},"collectionChildren":null,"customHeadContent":null,"config":{"version":5,"dev":{"enablePreviewV2":true},"commands":{"lookup":{"note":{"selectionMode":"extract","confirmVaultOnCreate":true,"leaveTrace":false,"bubbleUpCreateNew":true,"fuzzThreshold":0.2,"vaultSelectionModeOnCreate":"smart"}},"randomNote":{},"insertNote":{"initialValue":"templates"},"insertNoteLink":{"aliasMode":"none","enableMultiSelect":false},"insertNoteIndex":{"enableMarker":false},"copyNoteLink":{},"templateHierarchy":"template"},"workspace":{"vaults":[{"fsPath":"sterkere","visibility":"private"},{"fsPath":"Norsk","visibility":"private"},{"fsPath":"DevLog"}],"journal":{"dailyDomain":"log","name":"daily","dateFormat":"yyyy.MM.dd","addBehavior":"childOfCurrent"},"scratch":{"name":"scratch","dateFormat":"yyyy.MM.dd.HHmmss","addBehavior":"asOwnDomain"},"task":{"todoIntegration":true,"name":"task","dateFormat":"yyyy.MM.dd","addBehavior":"asOwnDomain","statusSymbols":{"":" ","wip":"wip","done":"x","assigned":"a","moved":"m","blocked":"b","delegated":"l","dropped":"d","pending":"y"},"prioritySymbols":{"H":"high","M":"medium","L":"low"},"createTaskSelectionType":"selection2link","taskCompleteStatus":["done","x"]},"graph":{"zoomSpeed":1,"createStub":false},"enableAutoCreateOnDefinition":false,"enableXVaultWikiLink":false,"enableRemoteVaultInit":true,"enableUserTags":true,"enableHashTags":true,"workspaceVaultSyncMode":"noCommit","enableAutoFoldFrontmatter":false,"enableEditorDecorations":true,"maxPreviewsCached":10,"maxNoteLength":204800,"dendronVersion":"0.95.1","enableFullHierarchyNoteTitle":false,"enableHandlebarTemplates":false,"templateHierarchy":"template","enableSmartRefs":false},"preview":{"enableFMTitle":true,"enableNoteTitleForLink":true,"enableMermaid":true,"enablePrettyRefs":true,"enableKatex":true,"automaticallyShowPreview":false,"enableFrontmatterTags":true,"enableHashesForFMTags":false},"publishing":{"theme":"custom","enableFMTitle":true,"enableNoteTitleForLink":true,"enableMermaid":true,"enablePrettyRefs":true,"enableKatex":true,"assetsPrefix":"/DevLog","copyAssets":true,"siteHierarchies":["root"],"enableSiteLastModified":true,"siteRootDir":"docs","siteUrl":"https://{GITHUB_USERNAME}.github.io","enableFrontmatterTags":true,"enableHashesForFMTags":false,"enableRandomlyColoredTags":true,"duplicateNoteBehavior":{"action":"useVault","payload":["DevLog"]},"writeStubs":false,"seo":{"title":"Dendron","description":"Personal knowledge space"},"github":{"enableEditLink":true,"editLinkText":"Edit this page on GitHub","editBranch":"master","editViewMode":"tree"},"enablePrettyLinks":true,"enableTaskNotes":true,"siteFaviconPath":"favicon.ico","siteIndex":"root"}}},"__N_SSG":true}