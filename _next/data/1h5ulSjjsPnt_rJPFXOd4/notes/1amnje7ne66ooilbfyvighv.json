{"pageProps":{"note":{"id":"1amnje7ne66ooilbfyvighv","title":"The Open Closed Principle","desc":"","updated":1641268367489,"created":1641105063869,"stub":false,"isDir":false,"custom":{"stub":false,"isDir":false},"fname":"r.{.clean-code.the-open-closed-principle","type":"note","vault":{"fsPath":"DevLog"},"contentHash":"14b78e3a4ba5bc18c714b2d9a1f5ada5","links":[{"type":"wiki","from":{"fname":"r.{.clean-code.the-open-closed-principle","id":"1amnje7ne66ooilbfyvighv","vaultName":"DevLog"},"value":"r.(.2021.11.10.solid-coding-in-python","alias":"SOLID Coding in Python","position":{"start":{"line":47,"column":5,"offset":1045},"end":{"line":47,"column":69,"offset":1109},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"r.(.2021.11.10.solid-coding-in-python"}},{"type":"wiki","from":{"fname":"r.{.clean-code.the-open-closed-principle","id":"1amnje7ne66ooilbfyvighv","vaultName":"DevLog"},"value":"s.l.python.oop.abstract-base-classes","alias":"Python Abstract Base Classes","position":{"start":{"line":49,"column":5,"offset":1125},"end":{"line":49,"column":74,"offset":1194},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"s.l.python.oop.abstract-base-classes"}},{"from":{"fname":"r.(.2021.11.10.solid-coding-in-python","vaultName":"DevLog"},"type":"backlink","position":{"start":{"line":12,"column":3,"offset":324},"end":{"line":12,"column":73,"offset":394},"indent":[]},"value":"r.{.clean-code.the-open-closed-principle","alias":"The Open-Closed Principle"}],"anchors":{},"children":[],"parent":"hd44ccm50fsgfvavcptsfes","data":{}},"body":"<h1 id=\"the-open-closed-principle\"><a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#the-open-closed-principle\"></a>The Open Closed Principle</h1>\n<blockquote>\n<p>“Software entities … should be open for extension but closed for modification”</p>\n</blockquote>\n<p>In other words: You should not need to modify the code you have already written to accommodate new functionality, but simply add what you now need.</p>\n<p>Intention: Add a <code>Median</code> function</p>\n<pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">import</span> numpy <span class=\"token keyword\">as</span> np\n<span class=\"token keyword\">from</span> abc <span class=\"token keyword\">import</span> ABC<span class=\"token punctuation\">,</span> abstractmethod\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Operations</span><span class=\"token punctuation\">(</span>ABC<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token triple-quoted-string string\">'''Operations'''</span>\n    <span class=\"token decorator annotation punctuation\">@abstractmethod</span>\n    <span class=\"token keyword\">def</span> <span class=\"token function\">operation</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">pass</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Mean</span><span class=\"token punctuation\">(</span>Operations<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token triple-quoted-string string\">'''Compute Max'''</span>\n    <span class=\"token keyword\">def</span> <span class=\"token function\">operation</span><span class=\"token punctuation\">(</span>list_<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f\"The mean is </span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span>np<span class=\"token punctuation\">.</span>mean<span class=\"token punctuation\">(</span>list_<span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span></span><span class=\"token string\">\"</span></span><span class=\"token punctuation\">)</span> \n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Max</span><span class=\"token punctuation\">(</span>Operations<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token triple-quoted-string string\">'''Compute Max'''</span>\n    <span class=\"token keyword\">def</span> <span class=\"token function\">operation</span><span class=\"token punctuation\">(</span>list_<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f\"The max is </span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span>np<span class=\"token punctuation\">.</span><span class=\"token builtin\">max</span><span class=\"token punctuation\">(</span>list_<span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span></span><span class=\"token string\">\"</span></span><span class=\"token punctuation\">)</span> \n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Main</span><span class=\"token punctuation\">:</span>\n    <span class=\"token triple-quoted-string string\">'''Main'''</span>\n    <span class=\"token decorator annotation punctuation\">@abstractmethod</span>\n    <span class=\"token keyword\">def</span> <span class=\"token function\">get_operations</span><span class=\"token punctuation\">(</span>list_<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token comment\"># __subclasses__ will found all classes inheriting from Operations</span>\n        <span class=\"token keyword\">for</span> operation <span class=\"token keyword\">in</span> Operations<span class=\"token punctuation\">.</span>__subclasses__<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n            operation<span class=\"token punctuation\">.</span>operation<span class=\"token punctuation\">(</span>list_<span class=\"token punctuation\">)</span>\n\n\n<span class=\"token keyword\">if</span> __name__ <span class=\"token operator\">==</span> <span class=\"token string\">\"__main__\"</span><span class=\"token punctuation\">:</span>\n    Main<span class=\"token punctuation\">.</span>get_operations<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span><span class=\"token number\">5</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># The mean is 3.0</span>\n<span class=\"token comment\"># The max is 5</span>\n</code></pre>\n<hr>\n<ul>\n<li>Reference:\n<ul>\n<li><a href=\"/DevLog/notes/9knz69r6nooffoynnm56e9h\">SOLID Coding in Python</a></li>\n</ul>\n</li>\n<li>Related:\n<ul>\n<li><a href=\"/DevLog/notes/v7i96kp105u0du2q9tz97ta\">Python Abstract Base Classes</a></li>\n</ul>\n</li>\n</ul>\n<hr>\n<strong>Backlinks</strong>\n<ul>\n<li><a href=\"/DevLog/notes/9knz69r6nooffoynnm56e9h\">Solid Coding in Python (DevLog)</a></li>\n</ul>","noteIndex":{"id":"root","title":"root","desc":"","updated":1641013093667,"created":1595961348801,"stub":false,"custom":{"stub":false,"nav_order":0,"permalink":"/"},"fname":"root","type":"note","vault":{"fsPath":"DevLog"},"contentHash":"b0b26527a2962dbb8bd5fb9a53ad702f","links":[],"anchors":{},"children":["rzqe5mjn3q2zfscw1roxr20","Bl9NeJmftBQJyJA3X4a6u","inm1S24v2GcN3Quf7gzDb","fmx7cfcdzale0ezna61yq5z","q6tr8q7gahfijix2ktlhcu3","yah6spesmpstech2ue2k3lq","6pxwlugphnw6vm4t8kn0j5p","i17wi8y2hgivywe08h6q6it","1st35wikvph2aew8aana21u","mijr0wvj3qz0mt9pv9xo1jv","qaf8v120h0ffvbowysjxw50","sh4851li2rsrhx47wwsirgv","fwqjigvqyfxiyl3pbpjvgdw","pxdvvln974xhe8w0alh0hoy","n6yddb1smrac5ll3l1y6wbd","g5dllyqoqkenoiz3opalzu6","kbwt8ucy0yh6bo8fl0kv9iw","beykavbe22agsufmm03hu0c","2uvuqa3c15o5r4j7sqadqvr","yr6gzhx0bhzyec6f52y66vf","4no90tcdswtuwmjm0bxnetx"],"parent":null,"data":{},"body":"\nThe hyperfixated rabbit hole diving knowledge base that is my brain looking at technology.\n"},"collectionChildren":null,"customHeadContent":null,"config":{"version":5,"dev":{"enablePreviewV2":true},"commands":{"lookup":{"note":{"selectionMode":"extract","confirmVaultOnCreate":true,"leaveTrace":false,"bubbleUpCreateNew":true,"fuzzThreshold":0.2,"vaultSelectionModeOnCreate":"smart"}},"randomNote":{},"insertNote":{"initialValue":"templates"},"insertNoteLink":{"aliasMode":"none","enableMultiSelect":false},"insertNoteIndex":{"enableMarker":false},"copyNoteLink":{},"templateHierarchy":"template"},"workspace":{"vaults":[{"fsPath":"sterkere","visibility":"private"},{"fsPath":"Norsk","visibility":"private"},{"fsPath":"DevLog"}],"journal":{"dailyDomain":"log","name":"daily","dateFormat":"yyyy.MM.dd","addBehavior":"childOfCurrent"},"scratch":{"name":"scratch","dateFormat":"yyyy.MM.dd.HHmmss","addBehavior":"asOwnDomain"},"task":{"todoIntegration":true,"name":"task","dateFormat":"yyyy.MM.dd","addBehavior":"asOwnDomain","statusSymbols":{"":" ","wip":"wip","done":"x","assigned":"a","moved":"m","blocked":"b","delegated":"l","dropped":"d","pending":"y"},"prioritySymbols":{"H":"high","M":"medium","L":"low"},"createTaskSelectionType":"selection2link","taskCompleteStatus":["done","x"]},"graph":{"zoomSpeed":1,"createStub":false},"enableAutoCreateOnDefinition":false,"enableXVaultWikiLink":false,"enableRemoteVaultInit":true,"enableUserTags":true,"enableHashTags":true,"workspaceVaultSyncMode":"noCommit","enableAutoFoldFrontmatter":false,"enableEditorDecorations":true,"maxPreviewsCached":10,"maxNoteLength":204800,"dendronVersion":"0.95.1","enableFullHierarchyNoteTitle":false,"enableHandlebarTemplates":false,"templateHierarchy":"template","enableSmartRefs":false},"preview":{"enableFMTitle":true,"enableNoteTitleForLink":true,"enableMermaid":true,"enablePrettyRefs":true,"enableKatex":true,"automaticallyShowPreview":false,"enableFrontmatterTags":true,"enableHashesForFMTags":false},"publishing":{"theme":"custom","enableFMTitle":true,"enableNoteTitleForLink":true,"enableMermaid":true,"enablePrettyRefs":true,"enableKatex":true,"assetsPrefix":"/DevLog","copyAssets":true,"siteHierarchies":["root"],"enableSiteLastModified":true,"siteRootDir":"docs","siteUrl":"https://{GITHUB_USERNAME}.github.io","enableFrontmatterTags":true,"enableHashesForFMTags":false,"enableRandomlyColoredTags":true,"duplicateNoteBehavior":{"action":"useVault","payload":["DevLog"]},"writeStubs":false,"seo":{"title":"Dendron","description":"Personal knowledge space"},"github":{"enableEditLink":true,"editLinkText":"Edit this page on GitHub","editBranch":"master","editViewMode":"tree"},"enablePrettyLinks":true,"enableTaskNotes":true,"siteFaviconPath":"favicon.ico","siteIndex":"root"}}},"__N_SSG":true}