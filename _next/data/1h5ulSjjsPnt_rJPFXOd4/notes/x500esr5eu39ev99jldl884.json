{"pageProps":{"note":{"id":"x500esr5eu39ev99jldl884","title":"Docker File","desc":"","updated":1643322944597,"created":1641931387867,"custom":{},"fname":"s.containers.docker.docker-file","type":"note","vault":{"fsPath":"DevLog"},"contentHash":"80e6c7012a42850d076066d724e43d08","links":[{"type":"wiki","from":{"fname":"s.containers.docker.docker-file","id":"x500esr5eu39ev99jldl884","vaultName":"DevLog"},"value":"s.containers.docker.cmd.build","alias":"s.containers.docker.cmd.build","position":{"start":{"line":12,"column":60,"offset":332},"end":{"line":12,"column":93,"offset":365},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"s.containers.docker.cmd.build"}},{"type":"wiki","from":{"fname":"s.containers.docker.docker-file","id":"x500esr5eu39ev99jldl884","vaultName":"DevLog"},"value":"s.containers.docker.cmd.build","alias":"s.containers.docker.cmd.build","position":{"start":{"line":54,"column":50,"offset":2313},"end":{"line":54,"column":83,"offset":2346},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"s.containers.docker.cmd.build"}}],"anchors":{"tips":{"type":"header","text":"Tips","value":"tips","line":8,"column":0,"depth":2},"base-example-of-having-to-install-all-your-dependencies-and-everything":{"type":"header","text":"Base example of having to install all your dependencies and everything","value":"base-example-of-having-to-install-all-your-dependencies-and-everything","line":20,"column":0,"depth":2},"security":{"type":"header","text":"Security","value":"security","line":62,"column":0,"depth":2},"multi-stage":{"type":"header","text":"Multi-Stage","value":"multi-stage","line":66,"column":0,"depth":2},"dynamic-port-exposure":{"type":"header","text":"Dynamic Port exposure","value":"dynamic-port-exposure","line":87,"column":0,"depth":2}},"children":[],"parent":"nfd4qf0z5sqvuhzjkp42pfz","data":{}},"body":"<h1 id=\"docker-file\"><a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#docker-file\"></a>Docker File</h1>\n<h2 id=\"tips\"><a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#tips\"></a>Tips</h2>\n<ul>\n<li>consider each line of the docker a layer of the abstraction this comes into play in the next example.</li>\n<li>Docker files MUST start with <code>FROM</code> but after that you can also add data like:</li>\n</ul>\n<pre class=\"language-docker\"><code class=\"language-docker\"><span class=\"token instruction\"><span class=\"token keyword\">FROM</span> python:3.9.7</span>\n<span class=\"token instruction\"><span class=\"token keyword\">MAINTAINER</span> Bryan Jenks bryan@bryanjenks.dev</span>\n</code></pre>\n<ul>\n<li>When you build your docker image from a docker file with <a href=\"/DevLog/notes/wtaaf7vcd3pqwqxf9r6cwdr\">Build</a> each command in the file create a new image and the layers are plastered on top, but each layer is cached so when you change things iteratively, only the changed items onward get re-ran. Essentially lazy loading.</li>\n</ul>\n<h2 id=\"base-example-of-having-to-install-all-your-dependencies-and-everything\"><a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#base-example-of-having-to-install-all-your-dependencies-and-everything\"></a>Base example of having to install all your dependencies and everything</h2>\n<p>Negates the utility of docker if the image is not just \"good to go\" but here's how to do this</p>\n<hr>\n<pre class=\"language-docker\"><code class=\"language-docker\"><span class=\"token instruction\"><span class=\"token keyword\">FROM</span> python:3.9.7</span>\n<span class=\"token instruction\"><span class=\"token keyword\">WORKDIR</span> /usr/src/app</span>\n<span class=\"token instruction\"><span class=\"token keyword\">COPY</span> requirements.txt ./</span>\n<span class=\"token instruction\"><span class=\"token keyword\">RUN</span> pip install --no-cache-dir -r requirements.txt</span>\n<span class=\"token instruction\"><span class=\"token keyword\">COPY</span> . .</span>\n<span class=\"token instruction\"><span class=\"token keyword\">CMD</span> [<span class=\"token string\">\"uvicorn\"</span>, <span class=\"token string\">\"app.main:app\"</span>, <span class=\"token string\">\"--host\"</span>, <span class=\"token string\">\"0.0.0.0\"</span>, <span class=\"token string\">\"--port\"</span>, <span class=\"token string\">\"8000\"</span>]</span>\n</code></pre>\n<hr>\n<ul>\n<li><code>FROM python:3.9.7</code>\n<ul>\n<li>Specify what python version to run in the base image</li>\n<li>\"python\" is the image</li>\n<li>\"3.9.7\" is the version of that image</li>\n</ul>\n</li>\n<li><code>WORKDIR /usr/src/app</code>\n<ul>\n<li>\"/usr/src\" is a valid path in the image</li>\n<li>\"/app\" is the path we want to tack on and create for our app code</li>\n</ul>\n</li>\n<li><code>COPY requirements.txt ./</code>\n<ul>\n<li>Grab the requirements file into the image</li>\n</ul>\n</li>\n<li><code>RUN pip install --no-cache-dir -r requirements.txt</code>\n<ul>\n<li>Install dependencies</li>\n</ul>\n</li>\n<li><code>COPY . .</code>\n<ul>\n<li>\".\" first dot is current directory, second \".\" is <code>WORKDIR</code></li>\n<li>Move our source code into the image</li>\n<li>This is where layering comes into play, when you change source code files\n<ul>\n<li>The only thing that changed was source code so this step and below is what gets re-ran</li>\n</ul>\n</li>\n<li>Each layers results are cached, so when you change something it only re-runs steps where something has changed compared to the cached image layers.\n<ul>\n<li>Only changed source code? then only re-run the step where we copy over source code files</li>\n</ul>\n</li>\n</ul>\n</li>\n<li><code>CMD [\"uvicorn\", \"app.main:app\", \"--host\", \"0.0.0.0\", \"--port\", \"8000\"]</code>\n<ul>\n<li>The array of commands to run once the image is spun up</li>\n<li>each array items is either a switch or a param</li>\n<li>essentially any time you have a space between anything in the command that is when you make a separate item in the array for it.</li>\n</ul>\n</li>\n</ul>\n<p>At this point you can now create the image using <a href=\"/DevLog/notes/wtaaf7vcd3pqwqxf9r6cwdr\">Build</a></p>\n<h2 id=\"security\"><a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#security\"></a>Security</h2>\n<p>Specify a <code>USER</code> in the docker file like <code>USER 1000</code> so that processes do not run as root and prevent potential security risk</p>\n<h2 id=\"multi-stage\"><a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#multi-stage\"></a>Multi-Stage</h2>\n<p>Reduce container size by not building on top of a big image</p>\n<pre class=\"language-docker\"><code class=\"language-docker\"><span class=\"token instruction\"><span class=\"token keyword\">FROM</span> golang:1.14.2-alpine3.11 <span class=\"token keyword\">AS</span> builder</span>\n<span class=\"token instruction\"><span class=\"token keyword\">ENV</span> GOPATH /go</span>\n<span class=\"token instruction\"><span class=\"token keyword\">WORKDIR</span> /<span class=\"token variable\">$GOPATH</span>/src/croc-hunter/</span>\n<span class=\"token instruction\"><span class=\"token keyword\">COPY</span> croc-hunter.go /go/src/croc-hunter/</span>\n<span class=\"token instruction\"><span class=\"token keyword\">RUN</span> go get -d -v</span>\n<span class=\"token instruction\"><span class=\"token keyword\">RUN</span> go build -o /go/bin/croc-hunter</span>\n\n<span class=\"token instruction\"><span class=\"token keyword\">FROM</span> alpine:3.11 <span class=\"token keyword\">AS</span> runtime</span>\n<span class=\"token instruction\"><span class=\"token keyword\">USER</span> 1000</span>\n<span class=\"token instruction\"><span class=\"token keyword\">WORKDIR</span> /app</span>\n<span class=\"token instruction\"><span class=\"token keyword\">COPY</span> static/ static/</span>\n<span class=\"token instruction\"><span class=\"token keyword\">COPY</span> <span class=\"token options\"><span class=\"token property\">--from</span><span class=\"token punctuation\">=</span><span class=\"token string\">builder</span></span> /go/bin/croc-hunter /app/croc-hunter</span>\n<span class=\"token instruction\"><span class=\"token keyword\">EXPOSE</span> 8080</span>\n<span class=\"token instruction\"><span class=\"token keyword\">CMD</span> [ <span class=\"token string\">\"/app/croc-hunter\"</span> ]</span>\n</code></pre>\n<h2 id=\"dynamic-port-exposure\"><a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#dynamic-port-exposure\"></a>Dynamic Port exposure</h2>\n<p>you can set the docker file to use <code>EXPOSE ${PORT}</code> in the docker file and then pass in that value during the <code>docker run</code> command. It also helps to have the deployed code rely on the environmental variable as well so everything is dynamic based on the arguments fed to the container:</p>\n<pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">docker</span> run -e <span class=\"token assign-left variable\">PORT</span><span class=\"token operator\">=</span><span class=\"token number\">3000</span> -p <span class=\"token number\">3000</span>:3000 --name croc-hunter croc-hunter-port:1\n</code></pre>","noteIndex":{"id":"root","title":"root","desc":"","updated":1641013093667,"created":1595961348801,"stub":false,"custom":{"stub":false,"nav_order":0,"permalink":"/"},"fname":"root","type":"note","vault":{"fsPath":"DevLog"},"contentHash":"b0b26527a2962dbb8bd5fb9a53ad702f","links":[],"anchors":{},"children":["rzqe5mjn3q2zfscw1roxr20","Bl9NeJmftBQJyJA3X4a6u","inm1S24v2GcN3Quf7gzDb","fmx7cfcdzale0ezna61yq5z","q6tr8q7gahfijix2ktlhcu3","yah6spesmpstech2ue2k3lq","6pxwlugphnw6vm4t8kn0j5p","i17wi8y2hgivywe08h6q6it","1st35wikvph2aew8aana21u","mijr0wvj3qz0mt9pv9xo1jv","qaf8v120h0ffvbowysjxw50","sh4851li2rsrhx47wwsirgv","fwqjigvqyfxiyl3pbpjvgdw","pxdvvln974xhe8w0alh0hoy","n6yddb1smrac5ll3l1y6wbd","g5dllyqoqkenoiz3opalzu6","kbwt8ucy0yh6bo8fl0kv9iw","beykavbe22agsufmm03hu0c","2uvuqa3c15o5r4j7sqadqvr","yr6gzhx0bhzyec6f52y66vf","4no90tcdswtuwmjm0bxnetx"],"parent":null,"data":{},"body":"\nThe hyperfixated rabbit hole diving knowledge base that is my brain looking at technology.\n"},"collectionChildren":null,"customHeadContent":null,"config":{"version":5,"dev":{"enablePreviewV2":true},"commands":{"lookup":{"note":{"selectionMode":"extract","confirmVaultOnCreate":true,"leaveTrace":false,"bubbleUpCreateNew":true,"fuzzThreshold":0.2,"vaultSelectionModeOnCreate":"smart"}},"randomNote":{},"insertNote":{"initialValue":"templates"},"insertNoteLink":{"aliasMode":"none","enableMultiSelect":false},"insertNoteIndex":{"enableMarker":false},"copyNoteLink":{},"templateHierarchy":"template"},"workspace":{"vaults":[{"fsPath":"sterkere","visibility":"private"},{"fsPath":"Norsk","visibility":"private"},{"fsPath":"DevLog"}],"journal":{"dailyDomain":"log","name":"daily","dateFormat":"yyyy.MM.dd","addBehavior":"childOfCurrent"},"scratch":{"name":"scratch","dateFormat":"yyyy.MM.dd.HHmmss","addBehavior":"asOwnDomain"},"task":{"todoIntegration":true,"name":"task","dateFormat":"yyyy.MM.dd","addBehavior":"asOwnDomain","statusSymbols":{"":" ","wip":"wip","done":"x","assigned":"a","moved":"m","blocked":"b","delegated":"l","dropped":"d","pending":"y"},"prioritySymbols":{"H":"high","M":"medium","L":"low"},"createTaskSelectionType":"selection2link","taskCompleteStatus":["done","x"]},"graph":{"zoomSpeed":1,"createStub":false},"enableAutoCreateOnDefinition":false,"enableXVaultWikiLink":false,"enableRemoteVaultInit":true,"enableUserTags":true,"enableHashTags":true,"workspaceVaultSyncMode":"noCommit","enableAutoFoldFrontmatter":false,"enableEditorDecorations":true,"maxPreviewsCached":10,"maxNoteLength":204800,"dendronVersion":"0.95.1","enableFullHierarchyNoteTitle":false,"enableHandlebarTemplates":false,"templateHierarchy":"template","enableSmartRefs":false},"preview":{"enableFMTitle":true,"enableNoteTitleForLink":true,"enableMermaid":true,"enablePrettyRefs":true,"enableKatex":true,"automaticallyShowPreview":false,"enableFrontmatterTags":true,"enableHashesForFMTags":false},"publishing":{"theme":"custom","enableFMTitle":true,"enableNoteTitleForLink":true,"enableMermaid":true,"enablePrettyRefs":true,"enableKatex":true,"assetsPrefix":"/DevLog","copyAssets":true,"siteHierarchies":["root"],"enableSiteLastModified":true,"siteRootDir":"docs","siteUrl":"https://{GITHUB_USERNAME}.github.io","enableFrontmatterTags":true,"enableHashesForFMTags":false,"enableRandomlyColoredTags":true,"duplicateNoteBehavior":{"action":"useVault","payload":["DevLog"]},"writeStubs":false,"seo":{"title":"Dendron","description":"Personal knowledge space"},"github":{"enableEditLink":true,"editLinkText":"Edit this page on GitHub","editBranch":"master","editViewMode":"tree"},"enablePrettyLinks":true,"enableTaskNotes":true,"siteFaviconPath":"favicon.ico","siteIndex":"root"}}},"__N_SSG":true}