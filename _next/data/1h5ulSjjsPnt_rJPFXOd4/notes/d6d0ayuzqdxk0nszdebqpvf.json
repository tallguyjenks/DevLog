{"pageProps":{"note":{"id":"d6d0ayuzqdxk0nszdebqpvf","title":"Sp_executesql","desc":"","updated":1646348642033,"created":1646348250859,"custom":{},"fname":"s.q.tsql.system-resources.stored-procedure.master.sys.sp_executesql","type":"note","vault":{"fsPath":"DevLog"},"contentHash":"db6bede14278416194934d17cc0b8e61","links":[{"type":"ref","from":{"fname":"s.q.tsql.system-resources.stored-procedure.master.sys.sp_executesql","id":"d6d0ayuzqdxk0nszdebqpvf","vaultName":"DevLog"},"value":"r.(.2022.03.03.introduction-to-the-sp_executesql-stored-procedure-with-examples","position":{"start":{"line":2,"column":1,"offset":1},"end":{"line":2,"column":85,"offset":85},"indent":[]},"xvault":false,"to":{"fname":"r.(.2022.03.03.introduction-to-the-sp_executesql-stored-procedure-with-examples"}}],"anchors":{},"children":[],"parent":"e4ldoy7zkazpt4a7xaoef68","data":{}},"body":"<h1 id=\"sp_executesql\"><a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#sp_executesql\"></a>Sp_executesql</h1>\n<p></p><p></p><div class=\"portal-container\">\n<div class=\"portal-head\">\n<div class=\"portal-backlink\">\n<div class=\"portal-title\">From <span class=\"portal-text-title\">Introduction to the Sp_executesql Stored Procedure with Examples</span></div>\n<a href=\"/DevLog/notes/ocud51rffi6p77kkp4fhe9q\" class=\"portal-arrow\">Go to text <span class=\"right-arrow\">→</span></a>\n</div>\n</div>\n<div id=\"portal-parent-anchor\" class=\"portal-parent\" markdown=\"1\">\n<div class=\"portal-parent-fader-top\"></div>\n<div class=\"portal-parent-fader-bottom\"></div><h2 id=\"link\"><a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#link\"></a>Link</h2>\n<p><a href=\"https://www.sqlshack.com/introduction-to-sp_executesql-stored-procedure-with-examples/\">https://www.sqlshack.com/introduction-to-sp_executesql-stored-procedure-with-examples/</a></p>\n<h2 id=\"syntax\"><a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#syntax\"></a>Syntax</h2>\n<pre class=\"language-sql\"><code class=\"language-sql\">sp_executesql <span class=\"token variable\">@stmt</span> <span class=\"token punctuation\">,</span>N<span class=\"token string\">'@parametername1_datatype,@parametername2_datatype,@parameternameN_datatype'</span>\n<span class=\"token punctuation\">,</span><span class=\"token variable\">@parametername1</span><span class=\"token operator\">=</span><span class=\"token string\">'Value1'</span> <span class=\"token punctuation\">,</span><span class=\"token variable\">@parametername2</span><span class=\"token operator\">=</span><span class=\"token string\">'Value2'</span><span class=\"token punctuation\">,</span><span class=\"token variable\">@parameternameN</span><span class=\"token operator\">=</span><span class=\"token string\">'ValueN'</span>\n</code></pre>\n<ul>\n<li><code>@stmt</code> parameter is used to specify dynamically generated SQL statement or batch. The data type of this parameter must be Unicode strings, for this reason, we have to add N prefix for the direct text usage or have to use nvarchar or nchar data typed variables.</li>\n<li><code>@parameternameN_datatype</code> defines the parameter’s name and data type that has been used in the dynamically constructed SQL statements.</li>\n<li>With the help of the <code>@parameternameN=’ValueN’</code> expression, we can assign a value to the defined parameters which are placed in the SQL statement. In the following sections of the article, we will explore the usage details with examples from easy to difficult.</li>\n</ul>\n<h2 id=\"example\"><a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#example\"></a>Example</h2>\n<pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token keyword\">DECLARE</span>  <span class=\"token variable\">@SqlStatment</span> <span class=\"token keyword\">AS</span> NVARCHAR<span class=\"token punctuation\">(</span><span class=\"token number\">1000</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">DECLARE</span>  <span class=\"token variable\">@ColNames</span> <span class=\"token keyword\">AS</span> NVARCHAR<span class=\"token punctuation\">(</span><span class=\"token number\">100</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">SET</span> <span class=\"token variable\">@ColNames</span> <span class=\"token operator\">=</span> N<span class=\"token string\">'FirstName , MiddleName , LastName'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">SET</span> <span class=\"token variable\">@SqlStatment</span> <span class=\"token operator\">=</span> <span class=\"token string\">'SELECT '</span> <span class=\"token operator\">+</span> <span class=\"token variable\">@ColNames</span> <span class=\"token operator\">+</span> <span class=\"token string\">' FROM Person.Person WHERE Persontype=@PerType'</span>\n\n<span class=\"token keyword\">EXECUTE</span> sp_executesql <span class=\"token variable\">@SqlStatment</span> <span class=\"token punctuation\">,</span> N<span class=\"token string\">'@PerType nchar(2)'</span><span class=\"token punctuation\">,</span><span class=\"token variable\">@PerType</span><span class=\"token operator\">=</span><span class=\"token string\">'EM'</span>\n</code></pre>\n<h3 id=\"getting-sp_executesql-result-with-output-parameter\"><a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#getting-sp_executesql-result-with-output-parameter\"></a>Getting sp_executesql result with output parameter</h3>\n<blockquote>\n<p><code>sp_executesql</code> provides to return execution result of the dynamically constructed SQL statement or batch. The <code>OUTPUT</code> parameter plays a key role to resolve this case. In this example, we will count the row number of the PersonPhone table and then we will set the return value to a variable with the <code>OUTPUT</code> parameter. The trick of this usage is to indicate the <code>@RowNumber</code> parameter as an <code>OUTPUT</code> parameter and then we assigned this internal parameter value to the <code>@Result</code> parameter:</p>\n</blockquote>\n<pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token keyword\">DECLARE</span>  <span class=\"token variable\">@SqlStatment</span> <span class=\"token keyword\">AS</span> NVARCHAR<span class=\"token punctuation\">(</span><span class=\"token number\">1000</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">DECLARE</span>  <span class=\"token variable\">@PhoneIdType</span> <span class=\"token keyword\">AS</span> <span class=\"token keyword\">INT</span>\n<span class=\"token keyword\">DECLARE</span>  <span class=\"token variable\">@Result</span> <span class=\"token keyword\">AS</span> <span class=\"token keyword\">INT</span>\n\n<span class=\"token keyword\">SET</span> <span class=\"token variable\">@SqlStatment</span><span class=\"token operator\">=</span><span class=\"token string\">'SELECT @RowNumber= COUNT(PhoneNumber) from Person.PersonPhone WHERE PhoneNumberTypeID=@PhoneType'</span>\n<span class=\"token keyword\">SET</span> <span class=\"token variable\">@PhoneIdType</span><span class=\"token operator\">=</span><span class=\"token number\">1</span>\n<span class=\"token keyword\">EXEC</span> sp_executesql <span class=\"token variable\">@SqlStatment</span> <span class=\"token punctuation\">,</span> N<span class=\"token string\">'@PhoneType INT,@RowNumber INT OUTPUT'</span> <span class=\"token punctuation\">,</span> <span class=\"token variable\">@PhoneType</span><span class=\"token operator\">=</span><span class=\"token variable\">@PhoneIdType</span> <span class=\"token punctuation\">,</span><span class=\"token variable\">@RowNumber</span><span class=\"token operator\">=</span><span class=\"token variable\">@Result</span> OUTPUT\n\n<span class=\"token keyword\">SELECT</span> <span class=\"token variable\">@Result</span> <span class=\"token keyword\">AS</span> <span class=\"token punctuation\">[</span>TableRowNumber<span class=\"token punctuation\">]</span>\n</code></pre>\n<h2 id=\"sp_executesql-vs-exec-statement\"><a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#sp_executesql-vs-exec-statement\"></a>sp_executesql vs EXEC statement</h2>\n<p>Useful but <code>sp_executesql</code> has the ability to reuse the cached query plans</p>\n<pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token keyword\">DECLARE</span>  <span class=\"token variable\">@SqlStatment</span> <span class=\"token keyword\">AS</span> NVARCHAR<span class=\"token punctuation\">(</span><span class=\"token number\">1000</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">DECLARE</span>  <span class=\"token variable\">@ColNames</span> <span class=\"token keyword\">AS</span> NVARCHAR<span class=\"token punctuation\">(</span><span class=\"token number\">100</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">DECLARE</span> <span class=\"token variable\">@Persontype</span> <span class=\"token keyword\">AS</span> NVARCHAR<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token operator\">=</span> <span class=\"token string\">'EM'</span>\n    <span class=\"token keyword\">SET</span> <span class=\"token variable\">@ColNames</span> <span class=\"token operator\">=</span> N<span class=\"token string\">'FirstName , MiddleName , LastName'</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">SET</span> <span class=\"token variable\">@SqlStatment</span> <span class=\"token operator\">=</span> <span class=\"token string\">'SELECT '</span> <span class=\"token operator\">+</span> <span class=\"token variable\">@ColNames</span> <span class=\"token operator\">+</span> <span class=\"token string\">' FROM Person.Person WHERE Persontype=  '''</span> <span class=\"token operator\">+</span> <span class=\"token variable\">@Persontype</span> <span class=\"token operator\">+</span> <span class=\"token string\">''''</span>\n    <span class=\"token keyword\">EXEC</span><span class=\"token punctuation\">(</span><span class=\"token variable\">@SqlStatment</span><span class=\"token punctuation\">)</span>\n</code></pre></div></div><p></p><p></p>","noteIndex":{"id":"root","title":"root","desc":"","updated":1641013093667,"created":1595961348801,"stub":false,"custom":{"stub":false,"nav_order":0,"permalink":"/"},"fname":"root","type":"note","vault":{"fsPath":"DevLog"},"contentHash":"b0b26527a2962dbb8bd5fb9a53ad702f","links":[],"anchors":{},"children":["rzqe5mjn3q2zfscw1roxr20","Bl9NeJmftBQJyJA3X4a6u","inm1S24v2GcN3Quf7gzDb","fmx7cfcdzale0ezna61yq5z","q6tr8q7gahfijix2ktlhcu3","yah6spesmpstech2ue2k3lq","6pxwlugphnw6vm4t8kn0j5p","i17wi8y2hgivywe08h6q6it","1st35wikvph2aew8aana21u","mijr0wvj3qz0mt9pv9xo1jv","qaf8v120h0ffvbowysjxw50","sh4851li2rsrhx47wwsirgv","fwqjigvqyfxiyl3pbpjvgdw","pxdvvln974xhe8w0alh0hoy","n6yddb1smrac5ll3l1y6wbd","g5dllyqoqkenoiz3opalzu6","kbwt8ucy0yh6bo8fl0kv9iw","beykavbe22agsufmm03hu0c","2uvuqa3c15o5r4j7sqadqvr","yr6gzhx0bhzyec6f52y66vf","4no90tcdswtuwmjm0bxnetx"],"parent":null,"data":{},"body":"\nThe hyperfixated rabbit hole diving knowledge base that is my brain looking at technology.\n"},"collectionChildren":null,"customHeadContent":null,"config":{"version":5,"dev":{"enablePreviewV2":true},"commands":{"lookup":{"note":{"selectionMode":"extract","confirmVaultOnCreate":true,"leaveTrace":false,"bubbleUpCreateNew":true,"fuzzThreshold":0.2,"vaultSelectionModeOnCreate":"smart"}},"randomNote":{},"insertNote":{"initialValue":"templates"},"insertNoteLink":{"aliasMode":"none","enableMultiSelect":false},"insertNoteIndex":{"enableMarker":false},"copyNoteLink":{},"templateHierarchy":"template"},"workspace":{"vaults":[{"fsPath":"sterkere","visibility":"private"},{"fsPath":"Norsk","visibility":"private"},{"fsPath":"DevLog"}],"journal":{"dailyDomain":"log","name":"daily","dateFormat":"yyyy.MM.dd","addBehavior":"childOfCurrent"},"scratch":{"name":"scratch","dateFormat":"yyyy.MM.dd.HHmmss","addBehavior":"asOwnDomain"},"task":{"todoIntegration":true,"name":"task","dateFormat":"yyyy.MM.dd","addBehavior":"asOwnDomain","statusSymbols":{"":" ","wip":"wip","done":"x","assigned":"a","moved":"m","blocked":"b","delegated":"l","dropped":"d","pending":"y"},"prioritySymbols":{"H":"high","M":"medium","L":"low"},"createTaskSelectionType":"selection2link","taskCompleteStatus":["done","x"]},"graph":{"zoomSpeed":1,"createStub":false},"enableAutoCreateOnDefinition":false,"enableXVaultWikiLink":false,"enableRemoteVaultInit":true,"enableUserTags":true,"enableHashTags":true,"workspaceVaultSyncMode":"noCommit","enableAutoFoldFrontmatter":false,"enableEditorDecorations":true,"maxPreviewsCached":10,"maxNoteLength":204800,"dendronVersion":"0.95.1","enableFullHierarchyNoteTitle":false,"enableHandlebarTemplates":false,"templateHierarchy":"template","enableSmartRefs":false},"preview":{"enableFMTitle":true,"enableNoteTitleForLink":true,"enableMermaid":true,"enablePrettyRefs":true,"enableKatex":true,"automaticallyShowPreview":false,"enableFrontmatterTags":true,"enableHashesForFMTags":false},"publishing":{"theme":"custom","enableFMTitle":true,"enableNoteTitleForLink":true,"enableMermaid":true,"enablePrettyRefs":true,"enableKatex":true,"assetsPrefix":"/DevLog","copyAssets":true,"siteHierarchies":["root"],"enableSiteLastModified":true,"siteRootDir":"docs","siteUrl":"https://{GITHUB_USERNAME}.github.io","enableFrontmatterTags":true,"enableHashesForFMTags":false,"enableRandomlyColoredTags":true,"duplicateNoteBehavior":{"action":"useVault","payload":["DevLog"]},"writeStubs":false,"seo":{"title":"Dendron","description":"Personal knowledge space"},"github":{"enableEditLink":true,"editLinkText":"Edit this page on GitHub","editBranch":"master","editViewMode":"tree"},"enablePrettyLinks":true,"enableTaskNotes":true,"siteFaviconPath":"favicon.ico","siteIndex":"root"}}},"__N_SSG":true}