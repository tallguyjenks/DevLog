{"pageProps":{"note":{"id":"x1pe7g0d0wgazcl4oemzoy4","title":"In Oop","desc":"","updated":1641496601571,"created":1641421830492,"custom":{},"fname":"s.l.python.quirks.dunder-methods.in-oop","type":"note","vault":{"fsPath":"DevLog"},"contentHash":"3c1cbbd9981a1298b2ab25cc4ebe71a9","links":[{"type":"wiki","from":{"fname":"s.l.python.quirks.dunder-methods.in-oop","id":"x1pe7g0d0wgazcl4oemzoy4","vaultName":"DevLog"},"value":"s.l.python.quirks.dunder-methods.in-oop.__add__","alias":"s.l.python.quirks.dunder-methods.in-oop.__add__","position":{"start":{"line":7,"column":24,"offset":307},"end":{"line":7,"column":75,"offset":358},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"s.l.python.quirks.dunder-methods.in-oop.__add__"}},{"type":"wiki","from":{"fname":"s.l.python.quirks.dunder-methods.in-oop","id":"x1pe7g0d0wgazcl4oemzoy4","vaultName":"DevLog"},"value":"s.l.python.quirks.dunder-methods.in-oop.dictionary-dunders","alias":"s.l.python.quirks.dunder-methods.in-oop.dictionary-dunders","position":{"start":{"line":39,"column":3,"offset":1277},"end":{"line":39,"column":65,"offset":1339},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"s.l.python.quirks.dunder-methods.in-oop.dictionary-dunders"}},{"type":"wiki","from":{"fname":"s.l.python.quirks.dunder-methods.in-oop","id":"x1pe7g0d0wgazcl4oemzoy4","vaultName":"DevLog"},"value":"s.l.python.oop.data-classes","alias":"s.l.python.oop.data-classes","position":{"start":{"line":47,"column":27,"offset":1929},"end":{"line":47,"column":58,"offset":1960},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"s.l.python.oop.data-classes"}},{"type":"wiki","from":{"fname":"s.l.python.quirks.dunder-methods.in-oop","id":"x1pe7g0d0wgazcl4oemzoy4","vaultName":"DevLog"},"value":"s.l.python.quirks.dunder-methods.in-oop.__repr__","alias":"s.l.python.quirks.dunder-methods.in-oop.__repr__","position":{"start":{"line":64,"column":73,"offset":3596},"end":{"line":64,"column":125,"offset":3648},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"s.l.python.quirks.dunder-methods.in-oop.__repr__"}},{"type":"wiki","from":{"fname":"s.l.python.quirks.dunder-methods.in-oop","id":"x1pe7g0d0wgazcl4oemzoy4","vaultName":"DevLog"},"value":"s.l.python.quirks.dunder-methods.in-oop.__str__","alias":"s.l.python.quirks.dunder-methods.in-oop.__str__","position":{"start":{"line":65,"column":99,"offset":3747},"end":{"line":65,"column":150,"offset":3798},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"s.l.python.quirks.dunder-methods.in-oop.__str__"}}],"anchors":{"in-oop-code":{"type":"header","text":"In OOP Code","value":"in-oop-code","line":9,"column":0,"depth":3}},"children":["twkesp6sjz42887rxak1irq","lg4jt42uq8r0q47uok8w4kv","ld4pbjywez2frk1gs389ciy","clkz5qctm2lnzuxalz2hath","rxc3ivxk2vs6v6mv9tvgfio"],"parent":"1tiz3js7wxwksmefwo9wjhj","data":{}},"body":"<h1 id=\"in-oop\"><a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#in-oop\"></a>In Oop</h1>\n<h3 id=\"in-oop-code\"><a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#in-oop-code\"></a>In OOP Code</h3>\n<blockquote>\n<p>items can have their operations, <code>__add__</code> == <code>( + )</code> have their operations of arithmatic assignments <code>__iadd__</code> == <code>( += )</code> and If one of those methods does not support the operation with the supplied arguments, it should return <code>NotImplemented</code> == <code>__radd__</code>.</p>\n</blockquote>\n<ul>\n<li><code>__add__</code> == <code>( + )</code> <a href=\"/DevLog/notes/twkesp6sjz42887rxak1irq\">__add__</a></li>\n<li><code>__sub__</code> == <code>( - )</code></li>\n<li><code>__mul__</code> == <code>( * )</code></li>\n<li><code>__matmul__</code> == <code>( @ )</code></li>\n<li><code>__truediv__</code> == <code>( \\ )</code></li>\n<li><code>__floordiv__</code> == <code>( \\\\ )</code></li>\n<li><code>__mod__</code> == <code>( % )</code></li>\n<li><code>__divmod__</code> == <code>divmod()</code></li>\n<li><code>__pow__</code> == <code>( ** )</code></li>\n<li><code>__lshift__</code> == <code>( &#x3C;&#x3C; )</code></li>\n<li><code>__rshift__</code> == <code>( >> )</code></li>\n<li><code>__and__</code> == <code>( &#x26; )</code></li>\n<li><code>__xor__</code> == <code>( ^ )</code></li>\n<li><code>__or__</code> == <code>( | )</code></li>\n<li><code>__lt__</code> == <code>( &#x3C; )</code></li>\n<li><code>__le__</code> == <code>( &#x3C;= )</code></li>\n<li><code>__eq__</code> == <code>( == )</code></li>\n<li><code>__ne__</code> == <code>( != )</code></li>\n<li><code>__gt__</code> == <code>( > )</code></li>\n<li><code>__ge__</code> == <code>( >= )</code></li>\n<li><code>__neg__</code> == <code>( - )</code></li>\n<li><code>__pos__</code> == <code>( + )</code></li>\n<li><code>__abs__</code> == <code>abs()</code></li>\n<li><code>__invert__</code> == <code>( ~ )</code></li>\n<li><code>__complex__</code> == <code>complex()</code></li>\n<li><code>__int__</code> == <code>int()</code></li>\n<li><code>__float__</code> == <code>float()</code></li>\n<li><code>__index__</code> <a href=\"https://docs.python.org/3/reference/datamodel.html#object.__index__\">https://docs.python.org/3/reference/datamodel.html#object.__index__</a></li>\n<li><code>__round__</code> == <code>round()</code></li>\n<li><code>__trunc__</code> == <code>math.trunc()</code></li>\n<li><code>__floor__</code> == <code>math.floor()</code></li>\n<li><code>__ceil__</code> == <code>math.ceil()</code></li>\n<li><a href=\"/DevLog/notes/rxc3ivxk2vs6v6mv9tvgfio\">Dictionary Dunders</a>\n<ul>\n<li><code>__setitem__</code> When assigning values in a dictionary</li>\n<li><code>__getitem__</code> Executed when we run the <code>dict['key']</code> type of operation</li>\n<li><code>__delitem__</code> ran when deleting a dictionary value <code>del dict['key']</code></li>\n<li><code>__contains__</code> Executed when we run the <code>in</code> operator <code>if item in class_instance:</code></li>\n<li><code>__len__</code> Is called if we ran a <code>len()</code> operation on our class instance </li>\n</ul>\n</li>\n<li><code>__call__</code> if <code>instance = Class()</code> then <code>__call__</code> is ran when we do: <code>instance()</code> right after</li>\n<li><code>__init__</code> init function is run as soon as a class instance is generated. It's the constructor.</li>\n<li><code>__post_init__</code> used in <a href=\"/DevLog/notes/z8z79s4uyfj2a9glnx3903p\">Data Classes</a> for after <code>__init__</code> as thats overwritten by data class</li>\n<li><code>__getattr__</code> Called when the default attribute access fails with an AttributeError</li>\n<li><code>__getattribute__</code> Called unconditionally to implement attribute accesses for instances of the class. \n<ul>\n<li>If the class also defines <code>__getattr__()</code>, the latter will not be called unless \n<ul>\n<li><code>__getattribute__()</code> either calls it explicitly or raises an AttributeError.</li>\n</ul>\n</li>\n</ul>\n</li>\n<li><code>__setattr__</code> Called when an attribute assignment is attempted. \n<ul>\n<li>This is called instead of the normal mechanism (i.e. store the value in the instance dictionary).</li>\n</ul>\n</li>\n<li><code>__delattr__</code> Like <code>__setattr__()</code> but for attribute deletion instead of assignment. \n<ul>\n<li>This should only be implemented if <code>del obj.name</code> is meaningful for the object.</li>\n</ul>\n</li>\n<li><code>__dir__</code> Called when <code>dir()</code> is called on the object. A sequence must be returned. \n<ul>\n<li>dir() converts the returned sequence to a list and sorts it.</li>\n</ul>\n</li>\n<li><code>__format__</code> when the class is being formatted in an fstring for with <code>.format()</code></li>\n<li><code>__bool__</code> <a href=\"https://docs.python.org/3/reference/datamodel.html#object.__bool__\">https://docs.python.org/3/reference/datamodel.html#object.__bool__</a></li>\n<li><code>__del__</code> The destructor of the class and what runs when attempting to <code>del instance</code></li>\n<li><code>__bytes__</code> Computes a byte-string representation of an object. This should return a bytes object.</li>\n<li><code>__format__</code> produces a “formatted” string representation of an object.</li>\n<li><code>__hash__</code> <a href=\"https://docs.python.org/3/reference/datamodel.html#object.__hash__\">https://docs.python.org/3/reference/datamodel.html#object.__hash__</a></li>\n<li><code>__repr__</code> Returns a representation of an object instance as a string <a href=\"/DevLog/notes/ld4pbjywez2frk1gs389ciy\">__repr__</a></li>\n<li><code>__str__</code> when not defined it calls <code>__repr__</code> by default to represent the instance as a string <a href=\"/DevLog/notes/clkz5qctm2lnzuxalz2hath\">__str__</a></li>\n<li><code>__unicode__</code> New preferred method compared to <code>__str__</code> in python 2\n<ul>\n<li>Python 3 uses unicode and therefore defaults to the <code>__str__</code> method </li>\n</ul>\n</li>\n<li><code>__enter__</code> Enter the runtime context related to this object using the <code>with</code> statement</li>\n<li><code>__exit__</code> Exit the runtime context related to this object</li>\n<li><code>__reversed__</code> not used with slice <code>[::-1]</code> but rather with <code>reversed()</code></li>\n<li><code>__slots__</code> <a href=\"https://medium.com/@stephenjayakar/a-quick-dive-into-pythons-slots-72cdc2d334e\">https://medium.com/@stephenjayakar/a-quick-dive-into-pythons-slots-72cdc2d334e</a></li>\n</ul>\n<hr>\n<strong>Children</strong>\n<ol>\n<li><a href=\"/DevLog/notes/rxc3ivxk2vs6v6mv9tvgfio\">Dictionary Dunders</a></li>\n<li><a href=\"/DevLog/notes/twkesp6sjz42887rxak1irq\">__add__</a></li>\n<li><a href=\"/DevLog/notes/lg4jt42uq8r0q47uok8w4kv\">__new__</a></li>\n<li><a href=\"/DevLog/notes/ld4pbjywez2frk1gs389ciy\">__repr__</a></li>\n<li><a href=\"/DevLog/notes/clkz5qctm2lnzuxalz2hath\">__str__</a></li>\n</ol>","noteIndex":{"id":"root","title":"root","desc":"","updated":1641013093667,"created":1595961348801,"stub":false,"custom":{"stub":false,"nav_order":0,"permalink":"/"},"fname":"root","type":"note","vault":{"fsPath":"DevLog"},"contentHash":"b0b26527a2962dbb8bd5fb9a53ad702f","links":[],"anchors":{},"children":["rzqe5mjn3q2zfscw1roxr20","Bl9NeJmftBQJyJA3X4a6u","inm1S24v2GcN3Quf7gzDb","fmx7cfcdzale0ezna61yq5z","q6tr8q7gahfijix2ktlhcu3","yah6spesmpstech2ue2k3lq","6pxwlugphnw6vm4t8kn0j5p","i17wi8y2hgivywe08h6q6it","1st35wikvph2aew8aana21u","mijr0wvj3qz0mt9pv9xo1jv","qaf8v120h0ffvbowysjxw50","sh4851li2rsrhx47wwsirgv","fwqjigvqyfxiyl3pbpjvgdw","pxdvvln974xhe8w0alh0hoy","n6yddb1smrac5ll3l1y6wbd","g5dllyqoqkenoiz3opalzu6","kbwt8ucy0yh6bo8fl0kv9iw","beykavbe22agsufmm03hu0c","2uvuqa3c15o5r4j7sqadqvr","yr6gzhx0bhzyec6f52y66vf","4no90tcdswtuwmjm0bxnetx"],"parent":null,"data":{},"body":"\nThe hyperfixated rabbit hole diving knowledge base that is my brain looking at technology.\n"},"collectionChildren":null,"customHeadContent":null,"config":{"version":5,"dev":{"enablePreviewV2":true},"commands":{"lookup":{"note":{"selectionMode":"extract","confirmVaultOnCreate":true,"leaveTrace":false,"bubbleUpCreateNew":true,"fuzzThreshold":0.2,"vaultSelectionModeOnCreate":"smart"}},"randomNote":{},"insertNote":{"initialValue":"templates"},"insertNoteLink":{"aliasMode":"none","enableMultiSelect":false},"insertNoteIndex":{"enableMarker":false},"copyNoteLink":{},"templateHierarchy":"template"},"workspace":{"vaults":[{"fsPath":"sterkere","visibility":"private"},{"fsPath":"Norsk","visibility":"private"},{"fsPath":"DevLog"}],"journal":{"dailyDomain":"log","name":"daily","dateFormat":"yyyy.MM.dd","addBehavior":"childOfCurrent"},"scratch":{"name":"scratch","dateFormat":"yyyy.MM.dd.HHmmss","addBehavior":"asOwnDomain"},"task":{"todoIntegration":true,"name":"task","dateFormat":"yyyy.MM.dd","addBehavior":"asOwnDomain","statusSymbols":{"":" ","wip":"wip","done":"x","assigned":"a","moved":"m","blocked":"b","delegated":"l","dropped":"d","pending":"y"},"prioritySymbols":{"H":"high","M":"medium","L":"low"},"createTaskSelectionType":"selection2link","taskCompleteStatus":["done","x"]},"graph":{"zoomSpeed":1,"createStub":false},"enableAutoCreateOnDefinition":false,"enableXVaultWikiLink":false,"enableRemoteVaultInit":true,"enableUserTags":true,"enableHashTags":true,"workspaceVaultSyncMode":"noCommit","enableAutoFoldFrontmatter":false,"enableEditorDecorations":true,"maxPreviewsCached":10,"maxNoteLength":204800,"dendronVersion":"0.95.1","enableFullHierarchyNoteTitle":false,"enableHandlebarTemplates":false,"templateHierarchy":"template","enableSmartRefs":false},"preview":{"enableFMTitle":true,"enableNoteTitleForLink":true,"enableMermaid":true,"enablePrettyRefs":true,"enableKatex":true,"automaticallyShowPreview":false,"enableFrontmatterTags":true,"enableHashesForFMTags":false},"publishing":{"theme":"custom","enableFMTitle":true,"enableNoteTitleForLink":true,"enableMermaid":true,"enablePrettyRefs":true,"enableKatex":true,"assetsPrefix":"/DevLog","copyAssets":true,"siteHierarchies":["root"],"enableSiteLastModified":true,"siteRootDir":"docs","siteUrl":"https://{GITHUB_USERNAME}.github.io","enableFrontmatterTags":true,"enableHashesForFMTags":false,"enableRandomlyColoredTags":true,"duplicateNoteBehavior":{"action":"useVault","payload":["DevLog"]},"writeStubs":false,"seo":{"title":"Dendron","description":"Personal knowledge space"},"github":{"enableEditLink":true,"editLinkText":"Edit this page on GitHub","editBranch":"master","editViewMode":"tree"},"enablePrettyLinks":true,"enableTaskNotes":true,"siteFaviconPath":"favicon.ico","siteIndex":"root"}}},"__N_SSG":true}