{"pageProps":{"note":{"id":"i4z0y0kkgnt8q7htpwocawl","title":"Linux Shell Tricks","desc":"","updated":1641271386112,"created":1641105063990,"stub":false,"isDir":false,"custom":{"stub":false,"isDir":false},"fname":"r.(.2021.12.20.linux-shell-tricks","type":"note","vault":{"fsPath":"DevLog"},"contentHash":"0f6365d2a45ecaf598666845c4e22f7e","links":[{"type":"wiki","from":{"fname":"r.(.2021.12.20.linux-shell-tricks","id":"i4z0y0kkgnt8q7htpwocawl","vaultName":"DevLog"},"value":"log.daily.2021.12.20","alias":"log.daily.2021.12.20","position":{"start":{"line":6,"column":20,"offset":172},"end":{"line":6,"column":44,"offset":196},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"log.daily.2021.12.20"}},{"from":{"fname":"log.daily.2021.12.20","vaultName":"DevLog"},"type":"backlink","position":{"start":{"line":5,"column":3,"offset":17},"end":{"line":5,"column":40,"offset":54},"indent":[]},"value":"r.(.2021.12.20.linux-shell-tricks","alias":"r.(.2021.12.20.linux-shell-tricks"}],"anchors":{"stdin-as-a-file-argument":{"type":"header","text":"Stdin as a file argument","value":"stdin-as-a-file-argument","line":18,"column":0,"depth":2},"use-the-output-of-another-command-as-a-file-argument":{"type":"header","text":"Use the output of another command as a file argument","value":"use-the-output-of-another-command-as-a-file-argument","line":28,"column":0,"depth":2},"avoid-conflicts-with-filenames-that-start-with-a-dash":{"type":"header","text":"Avoid conflicts with filenames that start with a dash","value":"avoid-conflicts-with-filenames-that-start-with-a-dash","line":36,"column":0,"depth":2},"re-run-commands":{"type":"header","text":"Re-run commands","value":"re-run-commands","line":44,"column":0,"depth":2},"re-use-command-arguments":{"type":"header","text":"Re-use command arguments","value":"re-use-command-arguments","line":55,"column":0,"depth":2},"ignore-the-first-n-lines":{"type":"header","text":"Ignore the first N lines","value":"ignore-the-first-n-lines","line":65,"column":0,"depth":2},"track-the-content-of-a-log-file":{"type":"header","text":"Track the content of a log file","value":"track-the-content-of-a-log-file","line":74,"column":0,"depth":2}},"children":[],"parent":"0sefpbff8jvjvvb706hot86","data":{}},"body":"<h1 id=\"linux-shell-tricks\"><a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#linux-shell-tricks\"></a>Linux Shell Tricks</h1>\n<ul>\n<li><code>Author:</code> Sergio Daniel Cortez Chavez</li>\n<li><code>Link:</code> <a href=\"https://sergiocortez-37830.medium.com/linux-shell-tricks-2f34c5935b89\">https://sergiocortez-37830.medium.com/linux-shell-tricks-2f34c5935b89</a></li>\n<li><code>Publish Date:</code> 2021.11.29</li>\n<li><code>Reviewed Date:</code> <a href=\"/DevLog/notes/g7nabkltbq6i1mowm945isw\">On This Day...</a></li>\n</ul>\n<hr>\n<h2 id=\"stdin-as-a-file-argument\"><a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#stdin-as-a-file-argument\"></a>Stdin as a file argument</h2>\n<pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token comment\"># Command expects a file:</span>\n<span class=\"token function\">wc</span> file1 file2\n<span class=\"token comment\"># Instead of making a temp file to read in a little text use this to pass in</span>\n<span class=\"token comment\"># text as a temp file to STDIN</span>\n<span class=\"token function\">wc</span> file1 - file2 <span class=\"token comment\"># waits for you to type input and you complete this process by using `CTRL+D` which inserts the EOF character</span>\n</code></pre>\n<h2 id=\"use-the-output-of-another-command-as-a-file-argument\"><a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#use-the-output-of-another-command-as-a-file-argument\"></a>Use the output of another command as a file argument</h2>\n<pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">wc</span> file1 <span class=\"token operator\">&#x3C;</span><span class=\"token punctuation\">(</span><span class=\"token builtin class-name\">echo</span> “hello world”<span class=\"token punctuation\">)</span> file2\n</code></pre>\n<blockquote>\n<p>When you wrap a command with <code>&#x3C;(...)</code> bash generate a temporal file in a path like <code>/dev/fd/64</code>, then execute your wrapped command, put the output in this temporal file, and finally replace <code>&#x3C;(...)</code> with the filename of the temporal file, in this case, <code>/dev/fd/64</code></p>\n</blockquote>\n<h2 id=\"avoid-conflicts-with-filenames-that-start-with-a-dash\"><a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#avoid-conflicts-with-filenames-that-start-with-a-dash\"></a>Avoid conflicts with filenames that start with a dash</h2>\n<pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token comment\"># -- indicates the end of the options section</span>\n<span class=\"token comment\"># -myFile.txt uses a dash after the options section to avoid conflicts</span>\n<span class=\"token function\">cat</span> -- -myFile.txt\n</code></pre>\n<h2 id=\"re-run-commands\"><a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#re-run-commands\"></a>Re-run commands</h2>\n<pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token comment\"># of course there's</span>\n<span class=\"token function\">sudo</span> <span class=\"token operator\">!</span><span class=\"token operator\">!</span>\n<span class=\"token comment\"># but you can also do</span>\n<span class=\"token operator\">!</span>-N <span class=\"token comment\"># where N is the Nth command (Relative)</span>\n<span class=\"token comment\"># or</span>\n<span class=\"token operator\">!</span>N <span class=\"token comment\"># for the N command in your history (Absolute)</span>\n</code></pre>\n<h2 id=\"re-use-command-arguments\"><a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#re-use-command-arguments\"></a>Re-use command arguments</h2>\n<pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">mkdir</span> very-large-directory-name\n<span class=\"token builtin class-name\">cd</span> very-large-directory-name\n<span class=\"token comment\"># Instead of duplicating the argument of the mkdir command, you can use !$ for retrieve the last argument of the last command, the result is:</span>\n<span class=\"token function\">mkdir</span> very-large-directory-name\n<span class=\"token builtin class-name\">cd</span> <span class=\"token operator\">!</span>$ <span class=\"token comment\"># == cd very-large-directory-name</span>\n</code></pre>\n<h2 id=\"ignore-the-first-n-lines\"><a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#ignore-the-first-n-lines\"></a>Ignore the first N lines</h2>\n<blockquote>\n<p>By default, the tail command will show the last n rows, but if you specified the option -n with a number that starts with the + symbol, like +5 , the first 5 lines are going to be skipped.</p>\n</blockquote>\n<pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token comment\"># In this example, the tail command is going to skip the first 10 lines and print the rest of the file content.</span>\n<span class=\"token function\">tail</span> -n +10 dataset.csv\n</code></pre>\n<h2 id=\"track-the-content-of-a-log-file\"><a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#track-the-content-of-a-log-file\"></a>Track the content of a log file</h2>\n<blockquote>\n<p>See the contents of a file in real time</p>\n</blockquote>\n<pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">watch</span> <span class=\"token function\">cat</span> log.txt\n</code></pre>\n<blockquote>\n<p>Although this command does the job, it is not the best option. You can use the tail command with the -f option to track only the new lines that are appended to the file,</p>\n</blockquote>\n<hr>\n<strong>Backlinks</strong>\n<ul>\n<li><a href=\"/DevLog/notes/g7nabkltbq6i1mowm945isw\">On This Day... (DevLog)</a></li>\n</ul>","noteIndex":{"id":"root","title":"root","desc":"","updated":1641013093667,"created":1595961348801,"stub":false,"custom":{"stub":false,"nav_order":0,"permalink":"/"},"fname":"root","type":"note","vault":{"fsPath":"DevLog"},"contentHash":"b0b26527a2962dbb8bd5fb9a53ad702f","links":[],"anchors":{},"children":["rzqe5mjn3q2zfscw1roxr20","Bl9NeJmftBQJyJA3X4a6u","inm1S24v2GcN3Quf7gzDb","fmx7cfcdzale0ezna61yq5z","q6tr8q7gahfijix2ktlhcu3","yah6spesmpstech2ue2k3lq","6pxwlugphnw6vm4t8kn0j5p","i17wi8y2hgivywe08h6q6it","1st35wikvph2aew8aana21u","mijr0wvj3qz0mt9pv9xo1jv","qaf8v120h0ffvbowysjxw50","sh4851li2rsrhx47wwsirgv","fwqjigvqyfxiyl3pbpjvgdw","pxdvvln974xhe8w0alh0hoy","n6yddb1smrac5ll3l1y6wbd","g5dllyqoqkenoiz3opalzu6","kbwt8ucy0yh6bo8fl0kv9iw","beykavbe22agsufmm03hu0c","2uvuqa3c15o5r4j7sqadqvr","yr6gzhx0bhzyec6f52y66vf","4no90tcdswtuwmjm0bxnetx"],"parent":null,"data":{},"body":"\nThe hyperfixated rabbit hole diving knowledge base that is my brain looking at technology.\n"},"collectionChildren":null,"customHeadContent":null,"config":{"version":5,"dev":{"enablePreviewV2":true},"commands":{"lookup":{"note":{"selectionMode":"extract","confirmVaultOnCreate":true,"leaveTrace":false,"bubbleUpCreateNew":true,"fuzzThreshold":0.2,"vaultSelectionModeOnCreate":"smart"}},"randomNote":{},"insertNote":{"initialValue":"templates"},"insertNoteLink":{"aliasMode":"none","enableMultiSelect":false},"insertNoteIndex":{"enableMarker":false},"copyNoteLink":{},"templateHierarchy":"template"},"workspace":{"vaults":[{"fsPath":"sterkere","visibility":"private"},{"fsPath":"Norsk","visibility":"private"},{"fsPath":"DevLog"}],"journal":{"dailyDomain":"log","name":"daily","dateFormat":"yyyy.MM.dd","addBehavior":"childOfCurrent"},"scratch":{"name":"scratch","dateFormat":"yyyy.MM.dd.HHmmss","addBehavior":"asOwnDomain"},"task":{"todoIntegration":true,"name":"task","dateFormat":"yyyy.MM.dd","addBehavior":"asOwnDomain","statusSymbols":{"":" ","wip":"wip","done":"x","assigned":"a","moved":"m","blocked":"b","delegated":"l","dropped":"d","pending":"y"},"prioritySymbols":{"H":"high","M":"medium","L":"low"},"createTaskSelectionType":"selection2link","taskCompleteStatus":["done","x"]},"graph":{"zoomSpeed":1,"createStub":false},"enableAutoCreateOnDefinition":false,"enableXVaultWikiLink":false,"enableRemoteVaultInit":true,"enableUserTags":true,"enableHashTags":true,"workspaceVaultSyncMode":"noCommit","enableAutoFoldFrontmatter":false,"enableEditorDecorations":true,"maxPreviewsCached":10,"maxNoteLength":204800,"dendronVersion":"0.95.1","enableFullHierarchyNoteTitle":false,"enableHandlebarTemplates":false,"templateHierarchy":"template","enableSmartRefs":false},"preview":{"enableFMTitle":true,"enableNoteTitleForLink":true,"enableMermaid":true,"enablePrettyRefs":true,"enableKatex":true,"automaticallyShowPreview":false,"enableFrontmatterTags":true,"enableHashesForFMTags":false},"publishing":{"theme":"custom","enableFMTitle":true,"enableNoteTitleForLink":true,"enableMermaid":true,"enablePrettyRefs":true,"enableKatex":true,"assetsPrefix":"/DevLog","copyAssets":true,"siteHierarchies":["root"],"enableSiteLastModified":true,"siteRootDir":"docs","siteUrl":"https://{GITHUB_USERNAME}.github.io","enableFrontmatterTags":true,"enableHashesForFMTags":false,"enableRandomlyColoredTags":true,"duplicateNoteBehavior":{"action":"useVault","payload":["DevLog"]},"writeStubs":false,"seo":{"title":"Dendron","description":"Personal knowledge space"},"github":{"enableEditLink":true,"editLinkText":"Edit this page on GitHub","editBranch":"master","editViewMode":"tree"},"enablePrettyLinks":true,"enableTaskNotes":true,"siteFaviconPath":"favicon.ico","siteIndex":"root"}}},"__N_SSG":true}