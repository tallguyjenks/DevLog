{"pageProps":{"note":{"id":"ad6l5tf0fj06bfl5sdi9e0p","title":"Before and after Example","desc":"","updated":1647150103432,"created":1641202817827,"custom":{},"fname":"s.l.python.libs.prefect.before-and-after-example","type":"note","vault":{"fsPath":"DevLog"},"contentHash":"f901cf263d6f75ce6bce44460b6d694b","links":[],"anchors":{"before-etl-process":{"type":"header","text":"Before ETL Process:","value":"before-etl-process","line":9,"column":0,"depth":2},"after-prefect-turning-functions-into-tasks-and-making-sure-they-retry-and-on-intervals-for-success":{"type":"header","text":"After prefect, turning functions into tasks and making sure they retry and on intervals for success:","value":"after-prefect-turning-functions-into-tasks-and-making-sure-they-retry-and-on-intervals-for-success","line":57,"column":0,"depth":2}},"children":[],"parent":"1xgy4ro2buxol8dad54tm4j","data":{}},"body":"<h1 id=\"before-and-after-example\"><a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#before-and-after-example\"></a>Before and after Example</h1>\n<h2 id=\"before-etl-process\"><a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#before-etl-process\"></a>Before ETL Process:</h2>\n<pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">import</span> requests\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">extract</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span> <span class=\"token builtin\">dict</span><span class=\"token punctuation\">:</span>\n  <span class=\"token triple-quoted-string string\">\"\"\"Use the Open Weather Map API to fetch Boston weather data.\n  Returns:\n\t  dict: a JSON response of many wheather measurements.\n  \"\"\"</span>\n\n  url <span class=\"token operator\">=</span> <span class=\"token string\">\"https://api.openweathermap.org/data/2.5/weather\"</span>\n\n  <span class=\"token comment\">#  Use a real API key. You can get a free one from https://openweathermap.org/</span>\n  response <span class=\"token operator\">=</span> requests<span class=\"token punctuation\">.</span>request<span class=\"token punctuation\">(</span>\n\t  <span class=\"token string\">\"GET\"</span><span class=\"token punctuation\">,</span> url<span class=\"token punctuation\">,</span> params<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token string\">\"q\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"Boston\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"appid\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"e5ecbcc49e3debeead24d0fe012fb46e\"</span><span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">)</span>\n\n  <span class=\"token keyword\">return</span> response<span class=\"token punctuation\">.</span>json<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">transform</span><span class=\"token punctuation\">(</span>response<span class=\"token punctuation\">:</span> <span class=\"token builtin\">dict</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span> <span class=\"token builtin\">float</span><span class=\"token punctuation\">:</span>\n  <span class=\"token triple-quoted-string string\">\"\"\"Process the response and extract windspeed information\n  Args:\n\t  response (dict): Response JSON from extract task\n  Returns:\n\t  float: Current wind speed\n  \"\"\"</span>\n  <span class=\"token keyword\">return</span> response<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span><span class=\"token string\">\"wind\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span><span class=\"token string\">\"speed\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.0</span><span class=\"token punctuation\">)</span>\n\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">load</span><span class=\"token punctuation\">(</span>speed<span class=\"token punctuation\">:</span> <span class=\"token builtin\">float</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n  <span class=\"token triple-quoted-string string\">\"\"\"Append data to file\n  Args:\n\t  speed (float): Windspeed from transform task\n  \"\"\"</span>\n\n  <span class=\"token keyword\">with</span> <span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"windspeed.txt\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"a\"</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> f<span class=\"token punctuation\">:</span>\n\t  f<span class=\"token punctuation\">.</span>write<span class=\"token punctuation\">(</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>speed<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">\"\\n\"</span><span class=\"token punctuation\">)</span>\n\n\n<span class=\"token keyword\">if</span> __name__ <span class=\"token operator\">==</span> <span class=\"token string\">\"__main__\"</span><span class=\"token punctuation\">:</span>\n  <span class=\"token comment\"># Execute tasks in the right order.</span>\n  response <span class=\"token operator\">=</span> extract<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  windspeed <span class=\"token operator\">=</span> transform<span class=\"token punctuation\">(</span>response<span class=\"token punctuation\">)</span>\n  load<span class=\"token punctuation\">(</span>windspeed<span class=\"token punctuation\">)</span>\n</code></pre>\n<h2 id=\"after-prefect-turning-functions-into-tasks-and-making-sure-they-retry-and-on-intervals-for-success\"><a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#after-prefect-turning-functions-into-tasks-and-making-sure-they-retry-and-on-intervals-for-success\"></a>After prefect, turning functions into tasks and making sure they retry and on intervals for success:</h2>\n<pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">import</span> requests\n\n<span class=\"token comment\"># Importing Prefect task, Flow and Python timdelta</span>\n<span class=\"token keyword\">from</span> prefect <span class=\"token keyword\">import</span> task<span class=\"token punctuation\">,</span> Flow\n<span class=\"token keyword\">from</span> datetime <span class=\"token keyword\">import</span> timedelta\n\n<span class=\"token comment\"># decorater specifying how many times to retry and it's iterval.</span>\n<span class=\"token decorator annotation punctuation\">@task</span><span class=\"token punctuation\">(</span>max_retries<span class=\"token operator\">=</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span> retry_delay<span class=\"token operator\">=</span>timedelta<span class=\"token punctuation\">(</span>minutes<span class=\"token operator\">=</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">def</span> <span class=\"token function\">extract</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span> <span class=\"token builtin\">dict</span><span class=\"token punctuation\">:</span>\n  <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n\n\n<span class=\"token decorator annotation punctuation\">@task</span>\n<span class=\"token keyword\">def</span> <span class=\"token function\">transform</span><span class=\"token punctuation\">(</span>response<span class=\"token punctuation\">:</span> <span class=\"token builtin\">dict</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span> <span class=\"token builtin\">float</span><span class=\"token punctuation\">:</span>\n  <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n\n<span class=\"token decorator annotation punctuation\">@task</span><span class=\"token punctuation\">(</span>max_retries<span class=\"token operator\">=</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span> retry_delay<span class=\"token operator\">=</span>timedelta<span class=\"token punctuation\">(</span><span class=\"token number\">5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">def</span> <span class=\"token function\">load</span><span class=\"token punctuation\">(</span>speed<span class=\"token punctuation\">:</span> <span class=\"token builtin\">float</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n  <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n\n\n<span class=\"token comment\"># Create a Prefect flow</span>\n<span class=\"token keyword\">with</span> Flow<span class=\"token punctuation\">(</span><span class=\"token string\">\"Windspeed Tracker\"</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> flow<span class=\"token punctuation\">:</span>\n  <span class=\"token comment\"># Execute tasks in the right order.</span>\n  response <span class=\"token operator\">=</span> extract<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  windspeed <span class=\"token operator\">=</span> transform<span class=\"token punctuation\">(</span>response<span class=\"token punctuation\">)</span>\n  load<span class=\"token punctuation\">(</span>windspeed<span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">if</span> __name__ <span class=\"token operator\">==</span> <span class=\"token string\">\"__main__\"</span><span class=\"token punctuation\">:</span>\n  <span class=\"token comment\"># Execute the flow</span>\n  flow<span class=\"token punctuation\">.</span>run<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n</code></pre>","noteIndex":{"id":"root","title":"root","desc":"","updated":1641013093667,"created":1595961348801,"stub":false,"custom":{"stub":false,"nav_order":0,"permalink":"/"},"fname":"root","type":"note","vault":{"fsPath":"DevLog"},"contentHash":"b0b26527a2962dbb8bd5fb9a53ad702f","links":[],"anchors":{},"children":["rzqe5mjn3q2zfscw1roxr20","Bl9NeJmftBQJyJA3X4a6u","inm1S24v2GcN3Quf7gzDb","fmx7cfcdzale0ezna61yq5z","q6tr8q7gahfijix2ktlhcu3","yah6spesmpstech2ue2k3lq","6pxwlugphnw6vm4t8kn0j5p","i17wi8y2hgivywe08h6q6it","1st35wikvph2aew8aana21u","mijr0wvj3qz0mt9pv9xo1jv","qaf8v120h0ffvbowysjxw50","sh4851li2rsrhx47wwsirgv","fwqjigvqyfxiyl3pbpjvgdw","pxdvvln974xhe8w0alh0hoy","n6yddb1smrac5ll3l1y6wbd","g5dllyqoqkenoiz3opalzu6","kbwt8ucy0yh6bo8fl0kv9iw","beykavbe22agsufmm03hu0c","2uvuqa3c15o5r4j7sqadqvr","yr6gzhx0bhzyec6f52y66vf","4no90tcdswtuwmjm0bxnetx"],"parent":null,"data":{},"body":"\nThe hyperfixated rabbit hole diving knowledge base that is my brain looking at technology.\n"},"collectionChildren":null,"customHeadContent":null,"config":{"version":5,"dev":{"enablePreviewV2":true},"commands":{"lookup":{"note":{"selectionMode":"extract","confirmVaultOnCreate":true,"leaveTrace":false,"bubbleUpCreateNew":true,"fuzzThreshold":0.2,"vaultSelectionModeOnCreate":"smart"}},"randomNote":{},"insertNote":{"initialValue":"templates"},"insertNoteLink":{"aliasMode":"none","enableMultiSelect":false},"insertNoteIndex":{"enableMarker":false},"copyNoteLink":{},"templateHierarchy":"template"},"workspace":{"vaults":[{"fsPath":"sterkere","visibility":"private"},{"fsPath":"Norsk","visibility":"private"},{"fsPath":"DevLog"}],"journal":{"dailyDomain":"log","name":"daily","dateFormat":"yyyy.MM.dd","addBehavior":"childOfCurrent"},"scratch":{"name":"scratch","dateFormat":"yyyy.MM.dd.HHmmss","addBehavior":"asOwnDomain"},"task":{"todoIntegration":true,"name":"task","dateFormat":"yyyy.MM.dd","addBehavior":"asOwnDomain","statusSymbols":{"":" ","wip":"wip","done":"x","assigned":"a","moved":"m","blocked":"b","delegated":"l","dropped":"d","pending":"y"},"prioritySymbols":{"H":"high","M":"medium","L":"low"},"createTaskSelectionType":"selection2link","taskCompleteStatus":["done","x"]},"graph":{"zoomSpeed":1,"createStub":false},"enableAutoCreateOnDefinition":false,"enableXVaultWikiLink":false,"enableRemoteVaultInit":true,"enableUserTags":true,"enableHashTags":true,"workspaceVaultSyncMode":"noCommit","enableAutoFoldFrontmatter":false,"enableEditorDecorations":true,"maxPreviewsCached":10,"maxNoteLength":204800,"dendronVersion":"0.95.1","enableFullHierarchyNoteTitle":false,"enableHandlebarTemplates":false,"templateHierarchy":"template","enableSmartRefs":false},"preview":{"enableFMTitle":true,"enableNoteTitleForLink":true,"enableMermaid":true,"enablePrettyRefs":true,"enableKatex":true,"automaticallyShowPreview":false,"enableFrontmatterTags":true,"enableHashesForFMTags":false},"publishing":{"theme":"custom","enableFMTitle":true,"enableNoteTitleForLink":true,"enableMermaid":true,"enablePrettyRefs":true,"enableKatex":true,"assetsPrefix":"/DevLog","copyAssets":true,"siteHierarchies":["root"],"enableSiteLastModified":true,"siteRootDir":"docs","siteUrl":"https://{GITHUB_USERNAME}.github.io","enableFrontmatterTags":true,"enableHashesForFMTags":false,"enableRandomlyColoredTags":true,"duplicateNoteBehavior":{"action":"useVault","payload":["DevLog"]},"writeStubs":false,"seo":{"title":"Dendron","description":"Personal knowledge space"},"github":{"enableEditLink":true,"editLinkText":"Edit this page on GitHub","editBranch":"master","editViewMode":"tree"},"enablePrettyLinks":true,"enableTaskNotes":true,"siteFaviconPath":"favicon.ico","siteIndex":"root"}}},"__N_SSG":true}