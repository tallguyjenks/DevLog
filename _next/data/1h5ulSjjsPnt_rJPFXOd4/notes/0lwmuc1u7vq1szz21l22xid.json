{"pageProps":{"note":{"id":"0lwmuc1u7vq1szz21l22xid","title":"Python Typing Type Hints and Annotations","desc":"","updated":1641271089790,"created":1641105063991,"stub":false,"isDir":false,"custom":{"stub":false,"isDir":false},"fname":"r.+.2021.12.15.python-typing-type-hints-and-annotations","type":"note","vault":{"fsPath":"DevLog"},"contentHash":"567aca9a609fba221deae0f91f55590a","links":[{"type":"wiki","from":{"fname":"r.+.2021.12.15.python-typing-type-hints-and-annotations","id":"0lwmuc1u7vq1szz21l22xid","vaultName":"DevLog"},"value":"s.l.python.libs.typing","alias":"Typing","position":{"start":{"line":5,"column":16,"offset":89},"end":{"line":5,"column":49,"offset":122},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"s.l.python.libs.typing"}},{"type":"wiki","from":{"fname":"r.+.2021.12.15.python-typing-type-hints-and-annotations","id":"0lwmuc1u7vq1szz21l22xid","vaultName":"DevLog"},"value":"log.daily.2021.12.15","alias":"log.daily.2021.12.15","position":{"start":{"line":7,"column":20,"offset":171},"end":{"line":7,"column":44,"offset":195},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"log.daily.2021.12.15"}},{"from":{"fname":"log.daily.2021.09.29","vaultName":"DevLog"},"type":"backlink","position":{"start":{"line":5,"column":7,"offset":21},"end":{"line":5,"column":66,"offset":80},"indent":[]},"value":"r.+.2021.12.15.python-typing-type-hints-and-annotations","alias":"r.+.2021.12.15.python-typing-type-hints-and-annotations"},{"from":{"fname":"s.l.python.libs.typing","vaultName":"DevLog"},"type":"backlink","position":{"start":{"line":15,"column":5,"offset":596},"end":{"line":15,"column":64,"offset":655},"indent":[]},"value":"r.+.2021.12.15.python-typing-type-hints-and-annotations","alias":"r.+.2021.12.15.python-typing-type-hints-and-annotations"}],"anchors":{},"children":[],"parent":"5z7a9IG2przI9DjKkQKB1","data":{}},"body":"<h1 id=\"python-typing-type-hints-and-annotations\"><a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#python-typing-type-hints-and-annotations\"></a>Python Typing Type Hints and Annotations</h1>\n<ul>\n<li><code>URL:</code> <a href=\"https://youtu.be/QORvB-_mbZ0\">https://youtu.be/QORvB-_mbZ0</a></li>\n<li><code>Channel/Host:</code> Tech With Tim</li>\n<li><code>Reference:</code> <a href=\"/DevLog/notes/mathec967jfiul5dfe2uf6k\">Typing</a></li>\n<li><code>Publish Date:</code> 2021.09.29</li>\n<li><code>Reviewed Date:</code> <a href=\"/DevLog/notes/kvu5aw79e46db2w3fwtw0c2\">15</a></li>\n</ul>\n<hr>\n<center><iframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/QORvB-_mbZ0\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe></center>\n<hr>\n<ul>\n<li>\n<p><a href=\"https://youtu.be/QORvB-_mbZ0#t=560.036194\">09:20</a> </p>\n<ul>\n<li>To do a type annotation for items in a list (a vector basically) you can pass the type like <code>list[int]</code> but this can also be used to pass things like a list of int lists: <code>list[list[int]]</code></li>\n<li>To use <code>List</code> as a type you need to <code>from typing import List</code> : <code>List[List[int]]</code></li>\n</ul>\n</li>\n<li>\n<p><a href=\"https://youtu.be/QORvB-_mbZ0#t=631.544946\">10:31</a></p>\n<ul>\n<li><code>from typing import Dict</code></li>\n<li>Dictionary typing: <code>x: Dict[str, str] = {\"a\": \"b\"}</code></li>\n</ul>\n</li>\n<li>\n<p><a href=\"https://youtu.be/QORvB-_mbZ0#t=656.309631835968\">10:56</a></p>\n<ul>\n<li><code>from typing import Set</code></li>\n<li>Set typing: <code>x: Set[str] = {\"a\", \"b\"}</code></li>\n</ul>\n</li>\n<li>\n<p><a href=\"https://youtu.be/QORvB-_mbZ0#t=702.2289898435974\">11:42</a>`</p>\n<ul>\n<li>\n<p>Custom Typing:</p>\n</li>\n<li>\n<pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">from</span> typing <span class=\"token keyword\">import</span> List\n\nVector <span class=\"token operator\">=</span> List<span class=\"token punctuation\">[</span><span class=\"token builtin\">float</span><span class=\"token punctuation\">]</span>\t\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">foo</span><span class=\"token punctuation\">(</span>v<span class=\"token punctuation\">:</span> Vector<span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span> Vector<span class=\"token punctuation\">:</span>\n\t<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>v<span class=\"token punctuation\">)</span>\n</code></pre>\n</li>\n<li>\n<p><img src=\"/DevLog/assets/images/Pasted_image_20211215085306.png\" alt=\"alt\"></p>\n</li>\n<li>\n<p>Can also use our own custom types like this: </p>\n</li>\n<li>\n<pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">from</span> typing <span class=\"token keyword\">import</span> List\n\nVector <span class=\"token operator\">=</span> List<span class=\"token punctuation\">[</span><span class=\"token builtin\">float</span><span class=\"token punctuation\">]</span>\nVectors <span class=\"token operator\">=</span> List<span class=\"token punctuation\">[</span>Vector<span class=\"token punctuation\">]</span>\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">foo</span><span class=\"token punctuation\">(</span>v<span class=\"token punctuation\">:</span> Vectors<span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span> Vectors<span class=\"token punctuation\">:</span>\n\t<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>v<span class=\"token punctuation\">)</span>\n</code></pre>\n</li>\n</ul>\n</li>\n<li>\n<p><a href=\"https://youtu.be/QORvB-_mbZ0#t=862.292403\">14:22</a></p>\n<ul>\n<li>\n<p>Optional typing</p>\n</li>\n<li>\n<pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">from</span> typing <span class=\"token keyword\">import</span> Optional\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">foo</span><span class=\"token punctuation\">(</span>output<span class=\"token punctuation\">:</span> Optional<span class=\"token punctuation\">[</span><span class=\"token builtin\">bool</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token boolean\">False</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n\t<span class=\"token keyword\">pass</span>\nfoo<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n</code></pre>\n</li>\n</ul>\n</li>\n<li>\n<p><a href=\"https://youtu.be/QORvB-_mbZ0#t=873.880233\">14:33</a></p>\n<ul>\n<li>\n<p>Any Type is the same as not adding an annotation but more explicit</p>\n</li>\n<li>\n<pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">from</span> typing <span class=\"token keyword\">import</span> Any\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">foo</span><span class=\"token punctuation\">(</span>output<span class=\"token punctuation\">:</span> Any<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n\t<span class=\"token keyword\">pass</span>\n</code></pre>\n</li>\n</ul>\n</li>\n<li>\n<p><a href=\"https://youtu.be/QORvB-_mbZ0#t=925.293389\">15:25</a></p>\n<ul>\n<li>\n<p>Sequence Type</p>\n</li>\n<li>\n<pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">from</span> typing <span class=\"token keyword\">import</span> Sequence\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">foo</span><span class=\"token punctuation\">(</span>seq<span class=\"token punctuation\">:</span> Sequence<span class=\"token punctuation\">[</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n\t<span class=\"token keyword\">pass</span>\nfoo<span class=\"token punctuation\">(</span><span class=\"token string\">\"Hello\"</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># This is fine because a string is a sequence of characters</span>\nfoo<span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"a\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"b\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"c\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># a Tuple is an ordered and immutable indexed Object</span>\nfoo<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token string\">\"a\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"b\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"c\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># A list is an ordered and indexed object </span>\nfoo<span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># A set is hashed and not indexed or ordered so it cannot be a sequence</span>\nfoo<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\">#>>> Last one throws an error because static analysis determines that it is an incompabile type</span>\n</code></pre>\n</li>\n</ul>\n</li>\n<li>\n<p><a href=\"https://youtu.be/QORvB-_mbZ0#t=1031.02662\">17:11</a></p>\n<ul>\n<li>\n<p>Tuple Type:</p>\n</li>\n<li>\n<pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">from</span> typing <span class=\"token keyword\">import</span> Tuple\n\n<span class=\"token comment\"># This is an error because the tuple can contain items of differing types </span>\n<span class=\"token comment\"># so you need to specify the type of each item within it</span>\nx<span class=\"token punctuation\">:</span> Tuple<span class=\"token punctuation\">[</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span> \n\nx<span class=\"token punctuation\">:</span> Tuple<span class=\"token punctuation\">[</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span>\n</code></pre>\n</li>\n</ul>\n</li>\n<li>\n<p><a href=\"https://youtu.be/QORvB-_mbZ0#t=1096.941175\">18:16</a></p>\n<ul>\n<li>\n<p>Callable Type:</p>\n</li>\n<li>\n<pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">from</span> typing <span class=\"token keyword\">import</span> <span class=\"token builtin\">callable</span><span class=\"token punctuation\">,</span> Optional\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">foo</span><span class=\"token punctuation\">(</span>func<span class=\"token punctuation\">:</span> Callable<span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">,</span> Optional<span class=\"token punctuation\">[</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span> <span class=\"token boolean\">None</span><span class=\"token punctuation\">:</span>\n\tfunc<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">add</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">:</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">:</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">:</span>\n\t<span class=\"token keyword\">return</span> x <span class=\"token operator\">+</span> y\n\nfoo<span class=\"token punctuation\">(</span>add<span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\">#=================================================================#</span>\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">foo</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span> Callable<span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">,</span> Optional<span class=\"token punctuation\">[</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n\t<span class=\"token keyword\">def</span> <span class=\"token function\">add</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">:</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">:</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">:</span>\n\t\t<span class=\"token keyword\">return</span> x <span class=\"token operator\">+</span> y\n\t<span class=\"token keyword\">return</span> add\n\nfoo<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\">#=================================================================#</span>\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">foo</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span> Callable<span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n\tfunc<span class=\"token punctuation\">:</span> Callable<span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> Lambda x<span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">:</span> x <span class=\"token operator\">+</span> y\n\t<span class=\"token keyword\">return</span> func\n\nfoo<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n</code></pre>\n</li>\n</ul>\n</li>\n<li>\n<p><a href=\"https://youtu.be/QORvB-_mbZ0#t=1300.829273\">21:40</a></p>\n<ul>\n<li>\n<p>Generics:</p>\n</li>\n<li>\n<pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">from</span> typing <span class=\"token keyword\">import</span> TypeVar<span class=\"token punctuation\">,</span> List\n\nT <span class=\"token operator\">=</span> TypeVar<span class=\"token punctuation\">(</span><span class=\"token string\">'T'</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">get_item</span><span class=\"token punctuation\">(</span>lst<span class=\"token punctuation\">:</span> List<span class=\"token punctuation\">[</span>T<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> index<span class=\"token punctuation\">:</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span> T<span class=\"token punctuation\">:</span>\n\t<span class=\"token keyword\">return</span> lst<span class=\"token punctuation\">[</span>index<span class=\"token punctuation\">]</span>\n</code></pre>\n</li>\n</ul>\n</li>\n</ul>\n<hr>\n<strong>Backlinks</strong>\n<ul>\n<li><a href=\"/DevLog/notes/274q60euyipf63is3kcuidc\">29 (DevLog)</a></li>\n<li><a href=\"/DevLog/notes/mathec967jfiul5dfe2uf6k\">Typing (DevLog)</a></li>\n</ul>","noteIndex":{"id":"root","title":"root","desc":"","updated":1641013093667,"created":1595961348801,"stub":false,"custom":{"stub":false,"nav_order":0,"permalink":"/"},"fname":"root","type":"note","vault":{"fsPath":"DevLog"},"contentHash":"b0b26527a2962dbb8bd5fb9a53ad702f","links":[],"anchors":{},"children":["rzqe5mjn3q2zfscw1roxr20","Bl9NeJmftBQJyJA3X4a6u","inm1S24v2GcN3Quf7gzDb","fmx7cfcdzale0ezna61yq5z","q6tr8q7gahfijix2ktlhcu3","yah6spesmpstech2ue2k3lq","6pxwlugphnw6vm4t8kn0j5p","i17wi8y2hgivywe08h6q6it","1st35wikvph2aew8aana21u","mijr0wvj3qz0mt9pv9xo1jv","qaf8v120h0ffvbowysjxw50","sh4851li2rsrhx47wwsirgv","fwqjigvqyfxiyl3pbpjvgdw","pxdvvln974xhe8w0alh0hoy","n6yddb1smrac5ll3l1y6wbd","g5dllyqoqkenoiz3opalzu6","kbwt8ucy0yh6bo8fl0kv9iw","beykavbe22agsufmm03hu0c","2uvuqa3c15o5r4j7sqadqvr","yr6gzhx0bhzyec6f52y66vf","4no90tcdswtuwmjm0bxnetx"],"parent":null,"data":{},"body":"\nThe hyperfixated rabbit hole diving knowledge base that is my brain looking at technology.\n"},"collectionChildren":null,"customHeadContent":null,"config":{"version":5,"dev":{"enablePreviewV2":true},"commands":{"lookup":{"note":{"selectionMode":"extract","confirmVaultOnCreate":true,"leaveTrace":false,"bubbleUpCreateNew":true,"fuzzThreshold":0.2,"vaultSelectionModeOnCreate":"smart"}},"randomNote":{},"insertNote":{"initialValue":"templates"},"insertNoteLink":{"aliasMode":"none","enableMultiSelect":false},"insertNoteIndex":{"enableMarker":false},"copyNoteLink":{},"templateHierarchy":"template"},"workspace":{"vaults":[{"fsPath":"sterkere","visibility":"private"},{"fsPath":"Norsk","visibility":"private"},{"fsPath":"DevLog"}],"journal":{"dailyDomain":"log","name":"daily","dateFormat":"yyyy.MM.dd","addBehavior":"childOfCurrent"},"scratch":{"name":"scratch","dateFormat":"yyyy.MM.dd.HHmmss","addBehavior":"asOwnDomain"},"task":{"todoIntegration":true,"name":"task","dateFormat":"yyyy.MM.dd","addBehavior":"asOwnDomain","statusSymbols":{"":" ","wip":"wip","done":"x","assigned":"a","moved":"m","blocked":"b","delegated":"l","dropped":"d","pending":"y"},"prioritySymbols":{"H":"high","M":"medium","L":"low"},"createTaskSelectionType":"selection2link","taskCompleteStatus":["done","x"]},"graph":{"zoomSpeed":1,"createStub":false},"enableAutoCreateOnDefinition":false,"enableXVaultWikiLink":false,"enableRemoteVaultInit":true,"enableUserTags":true,"enableHashTags":true,"workspaceVaultSyncMode":"noCommit","enableAutoFoldFrontmatter":false,"enableEditorDecorations":true,"maxPreviewsCached":10,"maxNoteLength":204800,"dendronVersion":"0.95.1","enableFullHierarchyNoteTitle":false,"enableHandlebarTemplates":false,"templateHierarchy":"template","enableSmartRefs":false},"preview":{"enableFMTitle":true,"enableNoteTitleForLink":true,"enableMermaid":true,"enablePrettyRefs":true,"enableKatex":true,"automaticallyShowPreview":false,"enableFrontmatterTags":true,"enableHashesForFMTags":false},"publishing":{"theme":"custom","enableFMTitle":true,"enableNoteTitleForLink":true,"enableMermaid":true,"enablePrettyRefs":true,"enableKatex":true,"assetsPrefix":"/DevLog","copyAssets":true,"siteHierarchies":["root"],"enableSiteLastModified":true,"siteRootDir":"docs","siteUrl":"https://{GITHUB_USERNAME}.github.io","enableFrontmatterTags":true,"enableHashesForFMTags":false,"enableRandomlyColoredTags":true,"duplicateNoteBehavior":{"action":"useVault","payload":["DevLog"]},"writeStubs":false,"seo":{"title":"Dendron","description":"Personal knowledge space"},"github":{"enableEditLink":true,"editLinkText":"Edit this page on GitHub","editBranch":"master","editViewMode":"tree"},"enablePrettyLinks":true,"enableTaskNotes":true,"siteFaviconPath":"favicon.ico","siteIndex":"root"}}},"__N_SSG":true}