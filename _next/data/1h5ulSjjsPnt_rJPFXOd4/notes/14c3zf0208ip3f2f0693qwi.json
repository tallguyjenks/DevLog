{"pageProps":{"note":{"id":"14c3zf0208ip3f2f0693qwi","title":"Input and Output","desc":"","updated":1641377557341,"created":1641377557341,"custom":{},"fname":"s.l.cpp.streams.input-and-output","type":"note","vault":{"fsPath":"DevLog"},"contentHash":"e2ea49524f2ac33aed3832f929f6a286","links":[{"type":"wiki","from":{"fname":"s.l.cpp.streams.input-and-output","id":"14c3zf0208ip3f2f0693qwi","vaultName":"DevLog"},"value":"s.l.cpp.libs.iostream","alias":"s.l.cpp.libs.iostream","position":{"start":{"line":7,"column":77,"offset":118},"end":{"line":7,"column":102,"offset":143},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"s.l.cpp.libs.iostream"}}],"anchors":{"input--output":{"type":"header","text":"Input / Output","value":"input--output","line":9,"column":0,"depth":3},"output-stream":{"type":"header","text":"Output Stream","value":"output-stream","line":11,"column":0,"depth":4},"input-stream":{"type":"header","text":"Input Stream","value":"input-stream","line":31,"column":0,"depth":4}},"children":[],"parent":"q4a2jfvzx2wrd6evvnfx4fa","data":{}},"body":"<h1 id=\"input-and-output\"><a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#input-and-output\"></a>Input and Output</h1>\n<h3 id=\"input--output\"><a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#input--output\"></a>Input / Output</h3>\n<h4 id=\"output-stream\"><a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#output-stream\"></a>Output Stream</h4>\n<p>or <code>ostream</code> for short is a class that supports output. It is included from <a href=\"/DevLog/notes/qihqrlu7hnsxholhiqo4xfm\">Iostream</a></p>\n<p><code>&#x3C;iostream></code> provides the <code>&#x3C;&#x3C;</code> operator known as the <strong>insertion operator</strong>.</p>\n<p><code>cout</code> is a predefined <code>ostream</code> object (e.g., you can think of it as declared as <code>ostream cout;</code></p>\n<blockquote>\n<p>The <code>&#x3C;&#x3C;</code> operator is overloaded with functions to support the various standard data types, such as int, bool, float, etc., each function converting that data type to a sequence of characters. The operator may be further overloaded by the string library from <code>#include &#x3C;string></code> or by the programmer for programmer-created classes.\n.\nThe <code>&#x3C;&#x3C;</code> operator returns a reference to the <code>ostream</code> that called it, and is evaluated from left to right like most operators, so <code>&#x3C;&#x3C;</code> operators can appear in series.</p>\n</blockquote>\n<pre class=\"language-cpp\"><code class=\"language-cpp\">cout <span class=\"token operator\">&#x3C;&#x3C;</span> <span class=\"token string\">\"Num\"</span> <span class=\"token operator\">&#x3C;&#x3C;</span> myInt<span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// can be thought of as:</span>\n\n<span class=\"token punctuation\">(</span> cout<span class=\"token punctuation\">.</span><span class=\"token keyword\">operator</span><span class=\"token operator\">&#x3C;&#x3C;</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Num\"</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">operator</span><span class=\"token operator\">&#x3C;&#x3C;</span><span class=\"token punctuation\">(</span>myInt<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<h4 id=\"input-stream\"><a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#input-stream\"></a>Input Stream</h4>\n<p>Or <code>istream</code>, provides the <code>>></code> operator known as the <strong>extraction operator</strong>. To extract data from a data buffer and write the data into different types of variables.</p>\n<blockquote>\n<p><code>cin</code> is a predefined istream pre-associated with a system's standard input, usually a computer keyboard. The system automatically puts the standard input into a data buffer associated with <code>cin</code>. The <code>>></code> operator <u>skips leading whitespace</u>, extracts as many characters as possible consistent with the target variable's type and <u>stopping at the next whitespace</u>, converts the extracted characters to the target variable's type, and stores the result into the variable.</p>\n</blockquote>","noteIndex":{"id":"root","title":"root","desc":"","updated":1641013093667,"created":1595961348801,"stub":false,"custom":{"stub":false,"nav_order":0,"permalink":"/"},"fname":"root","type":"note","vault":{"fsPath":"DevLog"},"contentHash":"b0b26527a2962dbb8bd5fb9a53ad702f","links":[],"anchors":{},"children":["rzqe5mjn3q2zfscw1roxr20","Bl9NeJmftBQJyJA3X4a6u","inm1S24v2GcN3Quf7gzDb","fmx7cfcdzale0ezna61yq5z","q6tr8q7gahfijix2ktlhcu3","yah6spesmpstech2ue2k3lq","6pxwlugphnw6vm4t8kn0j5p","i17wi8y2hgivywe08h6q6it","1st35wikvph2aew8aana21u","mijr0wvj3qz0mt9pv9xo1jv","qaf8v120h0ffvbowysjxw50","sh4851li2rsrhx47wwsirgv","fwqjigvqyfxiyl3pbpjvgdw","pxdvvln974xhe8w0alh0hoy","n6yddb1smrac5ll3l1y6wbd","g5dllyqoqkenoiz3opalzu6","kbwt8ucy0yh6bo8fl0kv9iw","beykavbe22agsufmm03hu0c","2uvuqa3c15o5r4j7sqadqvr","yr6gzhx0bhzyec6f52y66vf","4no90tcdswtuwmjm0bxnetx"],"parent":null,"data":{},"body":"\nThe hyperfixated rabbit hole diving knowledge base that is my brain looking at technology.\n"},"collectionChildren":null,"customHeadContent":null,"config":{"version":5,"dev":{"enablePreviewV2":true},"commands":{"lookup":{"note":{"selectionMode":"extract","confirmVaultOnCreate":true,"leaveTrace":false,"bubbleUpCreateNew":true,"fuzzThreshold":0.2,"vaultSelectionModeOnCreate":"smart"}},"randomNote":{},"insertNote":{"initialValue":"templates"},"insertNoteLink":{"aliasMode":"none","enableMultiSelect":false},"insertNoteIndex":{"enableMarker":false},"copyNoteLink":{},"templateHierarchy":"template"},"workspace":{"vaults":[{"fsPath":"sterkere","visibility":"private"},{"fsPath":"Norsk","visibility":"private"},{"fsPath":"DevLog"}],"journal":{"dailyDomain":"log","name":"daily","dateFormat":"yyyy.MM.dd","addBehavior":"childOfCurrent"},"scratch":{"name":"scratch","dateFormat":"yyyy.MM.dd.HHmmss","addBehavior":"asOwnDomain"},"task":{"todoIntegration":true,"name":"task","dateFormat":"yyyy.MM.dd","addBehavior":"asOwnDomain","statusSymbols":{"":" ","wip":"wip","done":"x","assigned":"a","moved":"m","blocked":"b","delegated":"l","dropped":"d","pending":"y"},"prioritySymbols":{"H":"high","M":"medium","L":"low"},"createTaskSelectionType":"selection2link","taskCompleteStatus":["done","x"]},"graph":{"zoomSpeed":1,"createStub":false},"enableAutoCreateOnDefinition":false,"enableXVaultWikiLink":false,"enableRemoteVaultInit":true,"enableUserTags":true,"enableHashTags":true,"workspaceVaultSyncMode":"noCommit","enableAutoFoldFrontmatter":false,"enableEditorDecorations":true,"maxPreviewsCached":10,"maxNoteLength":204800,"dendronVersion":"0.95.1","enableFullHierarchyNoteTitle":false,"enableHandlebarTemplates":false,"templateHierarchy":"template","enableSmartRefs":false},"preview":{"enableFMTitle":true,"enableNoteTitleForLink":true,"enableMermaid":true,"enablePrettyRefs":true,"enableKatex":true,"automaticallyShowPreview":false,"enableFrontmatterTags":true,"enableHashesForFMTags":false},"publishing":{"theme":"custom","enableFMTitle":true,"enableNoteTitleForLink":true,"enableMermaid":true,"enablePrettyRefs":true,"enableKatex":true,"assetsPrefix":"/DevLog","copyAssets":true,"siteHierarchies":["root"],"enableSiteLastModified":true,"siteRootDir":"docs","siteUrl":"https://{GITHUB_USERNAME}.github.io","enableFrontmatterTags":true,"enableHashesForFMTags":false,"enableRandomlyColoredTags":true,"duplicateNoteBehavior":{"action":"useVault","payload":["DevLog"]},"writeStubs":false,"seo":{"title":"Dendron","description":"Personal knowledge space"},"github":{"enableEditLink":true,"editLinkText":"Edit this page on GitHub","editBranch":"master","editViewMode":"tree"},"enablePrettyLinks":true,"enableTaskNotes":true,"siteFaviconPath":"favicon.ico","siteIndex":"root"}}},"__N_SSG":true}