{"pageProps":{"note":{"id":"yow8sjda933r6vtjc0p33if","title":"Header File","desc":"","updated":1641924888173,"created":1641373455831,"custom":{},"fname":"s.l.cpp.funcs.header-file","type":"note","vault":{"fsPath":"DevLog"},"contentHash":"32413c69c601b9fbd7c0d06ce4f5de56","links":[{"type":"ref","from":{"fname":"s.l.cpp.funcs.header-file","id":"yow8sjda933r6vtjc0p33if","vaultName":"DevLog"},"value":"s.l.cpp.preprocessor-directives","position":{"start":{"line":2,"column":1,"offset":1},"end":{"line":2,"column":37,"offset":37},"indent":[]},"xvault":false,"to":{"fname":"s.l.cpp.preprocessor-directives"}},{"from":{"fname":"s.l.python.libs.fastapi.funcs.router","vaultName":"DevLog"},"type":"backlink","position":{"start":{"line":34,"column":16,"offset":477},"end":{"line":34,"column":45,"offset":506},"indent":[]},"value":"s.l.cpp.funcs.header-file","alias":"s.l.cpp.funcs.header-file"}],"anchors":{},"children":[],"parent":"9pbfl810rt62zbyvrp20xmh","data":{}},"body":"<h1 id=\"header-file\"><a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#header-file\"></a>Header File</h1>\n<p></p><p></p><div class=\"portal-container\">\n<div class=\"portal-head\">\n<div class=\"portal-backlink\">\n<div class=\"portal-title\">From <span class=\"portal-text-title\">Preprocessor Directives</span></div>\n<a href=\"/DevLog/notes/cnrg8jpu8cm8gdkb6yk8w3r\" class=\"portal-arrow\">Go to text <span class=\"right-arrow\">â†’</span></a>\n</div>\n</div>\n<div id=\"portal-parent-anchor\" class=\"portal-parent\" markdown=\"1\">\n<div class=\"portal-parent-fader-top\"></div>\n<div class=\"portal-parent-fader-bottom\"></div><blockquote>\n<p>The <strong>preprocessor</strong> is a tool that scans the file from top to bottom looking for any lines that begin with #, known as a <strong>hash symbol</strong>. Each such line is not a program statement, but rather directs the <strong>preprocessor</strong> to modify the file in some way before compilation continues, each such line being known as a <strong>preprocessor directive</strong>. The directive ends at the end of the line, no semicolon is used at the end of the line.</p>\n</blockquote>\n<h2 id=\"include\"><a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#include\"></a>Include</h2>\n<blockquote>\n<p>Perhaps the most commonly-used preprocessor directive is <strong><a title=\"Private\" href=\"https://wiki.dendron.so/notes/hfyvYGJZQiUwQaaxQO27q.html\" target=\"_blank\" class=\"private\">#include (Private)</a></strong>, known as an include directive. <strong><a title=\"Private\" href=\"https://wiki.dendron.so/notes/hfyvYGJZQiUwQaaxQO27q.html\" target=\"_blank\" class=\"private\">#include (Private)</a></strong> directs the compiler to replace that line by the contents of the given filename.</p>\n</blockquote>\n<pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">\"filename\"</span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&#x3C;filename></span></span>\n</code></pre>\n<h2 id=\"header-files\"><a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#header-files\"></a>Header Files</h2>\n<p>Header files are included through Pre-Processor Directives.</p>\n<p>Header files contain code such as groups of related functions &#x26; their <a title=\"Private\" href=\"https://wiki.dendron.so/notes/hfyvYGJZQiUwQaaxQO27q.html\" target=\"_blank\" class=\"private\">C++ Functions (Private)</a>'s and <a title=\"Private\" href=\"https://wiki.dendron.so/notes/hfyvYGJZQiUwQaaxQO27q.html\" target=\"_blank\" class=\"private\">C++ Functions (Private)</a>'s', as well as <a title=\"Private\" href=\"https://wiki.dendron.so/notes/hfyvYGJZQiUwQaaxQO27q.html\" target=\"_blank\" class=\"private\">C++ Classes (Private)</a>. </p>\n<p>When you input a header file with an <code>#include</code> statement its basically like copy/pasting all the code where the file is included. sometimes this can lead to duplication and errors if included multiple times so to prevent this we use <a title=\"Private\" href=\"https://wiki.dendron.so/notes/hfyvYGJZQiUwQaaxQO27q.html\" target=\"_blank\" class=\"private\">import.software.language.cpp.preprocessor-directives (Private)</a>.</p>\n<h3 id=\"header-file-guards\"><a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#header-file-guards\"></a>Header File Guards</h3>\n<p>These guards look like this:</p>\n<pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">ifndef</span> <span class=\"token expression\">FILENAME_H</span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">FILENAME_H</span></span>\n\n<span class=\"token comment\">// Header file contents</span>\n\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">endif</span></span>\n</code></pre>\n<blockquote>\n<p><code>#define FILENAME_H</code> defines the symbol <code>FILENAME_H</code> to the preprocessor. The <code>#ifndef FILENAME_H</code> and <code>#endif</code> form a pair that instructs the preprocessor to process the code between the pair only if FILENAME_H is not defined (\"ifndef\" is short for \"if not defined\"). Thus, if the preprocessor includes encounter the header more than once, the code in the file during the second and any subsequent encounters will be skipped because <code>FILENAME_H</code> was already defined.\n.\n<u>Good practice</u> is to guard every header file. The following shows the <code>threeintsfcts.h</code> file with the guarding code added:</p>\n</blockquote>\n<pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">ifndef</span> <span class=\"token expression\">THREEINTSFCT_H</span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">THREEINTSFCT_H</span></span>\n\n<span class=\"token keyword\">int</span> <span class=\"token function\">ThreeIntsSum</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> num1<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> num2<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> num3<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">int</span> <span class=\"token function\">ThreeIntsAvg</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> num1<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> num2<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> num3<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">endif</span></span>\n</code></pre>\n<p>Another example from <a href=\"https://youtu.be/9RJTQmK0YPI?list=PLlrATfBNZ98dudnM48yfGUldqGD0S4FFb\">This video by The Cherno</a> is instead of <code>ifndef</code> and all that, using instead <code>#pragma once</code> which says to include the file only once per translation unit. </p>\n<p>To be safe and make sure all compilers will support portability and the use the fastest option you can use both:</p>\n<pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">pragma</span> <span class=\"token expression\">once</span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">ifndef</span> <span class=\"token expression\">_HEADER_H_</span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">_HEADER_H_</span></span>\n\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">endif</span></span>\n</code></pre></div></div><p></p><p></p>\n<hr>\n<strong>Backlinks</strong>\n<ul>\n<li><a href=\"/DevLog/notes/ufxzayfz68160unpras33uh\">Router (DevLog)</a></li>\n</ul>","noteIndex":{"id":"root","title":"root","desc":"","updated":1641013093667,"created":1595961348801,"stub":false,"custom":{"stub":false,"nav_order":0,"permalink":"/"},"fname":"root","type":"note","vault":{"fsPath":"DevLog"},"contentHash":"b0b26527a2962dbb8bd5fb9a53ad702f","links":[],"anchors":{},"children":["rzqe5mjn3q2zfscw1roxr20","Bl9NeJmftBQJyJA3X4a6u","inm1S24v2GcN3Quf7gzDb","fmx7cfcdzale0ezna61yq5z","q6tr8q7gahfijix2ktlhcu3","yah6spesmpstech2ue2k3lq","6pxwlugphnw6vm4t8kn0j5p","i17wi8y2hgivywe08h6q6it","1st35wikvph2aew8aana21u","mijr0wvj3qz0mt9pv9xo1jv","qaf8v120h0ffvbowysjxw50","sh4851li2rsrhx47wwsirgv","fwqjigvqyfxiyl3pbpjvgdw","pxdvvln974xhe8w0alh0hoy","n6yddb1smrac5ll3l1y6wbd","g5dllyqoqkenoiz3opalzu6","kbwt8ucy0yh6bo8fl0kv9iw","beykavbe22agsufmm03hu0c","2uvuqa3c15o5r4j7sqadqvr","yr6gzhx0bhzyec6f52y66vf","4no90tcdswtuwmjm0bxnetx"],"parent":null,"data":{},"body":"\nThe hyperfixated rabbit hole diving knowledge base that is my brain looking at technology.\n"},"collectionChildren":null,"customHeadContent":null,"config":{"version":5,"dev":{"enablePreviewV2":true},"commands":{"lookup":{"note":{"selectionMode":"extract","confirmVaultOnCreate":true,"leaveTrace":false,"bubbleUpCreateNew":true,"fuzzThreshold":0.2,"vaultSelectionModeOnCreate":"smart"}},"randomNote":{},"insertNote":{"initialValue":"templates"},"insertNoteLink":{"aliasMode":"none","enableMultiSelect":false},"insertNoteIndex":{"enableMarker":false},"copyNoteLink":{},"templateHierarchy":"template"},"workspace":{"vaults":[{"fsPath":"sterkere","visibility":"private"},{"fsPath":"Norsk","visibility":"private"},{"fsPath":"DevLog"}],"journal":{"dailyDomain":"log","name":"daily","dateFormat":"yyyy.MM.dd","addBehavior":"childOfCurrent"},"scratch":{"name":"scratch","dateFormat":"yyyy.MM.dd.HHmmss","addBehavior":"asOwnDomain"},"task":{"todoIntegration":true,"name":"task","dateFormat":"yyyy.MM.dd","addBehavior":"asOwnDomain","statusSymbols":{"":" ","wip":"wip","done":"x","assigned":"a","moved":"m","blocked":"b","delegated":"l","dropped":"d","pending":"y"},"prioritySymbols":{"H":"high","M":"medium","L":"low"},"createTaskSelectionType":"selection2link","taskCompleteStatus":["done","x"]},"graph":{"zoomSpeed":1,"createStub":false},"enableAutoCreateOnDefinition":false,"enableXVaultWikiLink":false,"enableRemoteVaultInit":true,"enableUserTags":true,"enableHashTags":true,"workspaceVaultSyncMode":"noCommit","enableAutoFoldFrontmatter":false,"enableEditorDecorations":true,"maxPreviewsCached":10,"maxNoteLength":204800,"dendronVersion":"0.95.1","enableFullHierarchyNoteTitle":false,"enableHandlebarTemplates":false,"templateHierarchy":"template","enableSmartRefs":false},"preview":{"enableFMTitle":true,"enableNoteTitleForLink":true,"enableMermaid":true,"enablePrettyRefs":true,"enableKatex":true,"automaticallyShowPreview":false,"enableFrontmatterTags":true,"enableHashesForFMTags":false},"publishing":{"theme":"custom","enableFMTitle":true,"enableNoteTitleForLink":true,"enableMermaid":true,"enablePrettyRefs":true,"enableKatex":true,"assetsPrefix":"/DevLog","copyAssets":true,"siteHierarchies":["root"],"enableSiteLastModified":true,"siteRootDir":"docs","siteUrl":"https://{GITHUB_USERNAME}.github.io","enableFrontmatterTags":true,"enableHashesForFMTags":false,"enableRandomlyColoredTags":true,"duplicateNoteBehavior":{"action":"useVault","payload":["DevLog"]},"writeStubs":false,"seo":{"title":"Dendron","description":"Personal knowledge space"},"github":{"enableEditLink":true,"editLinkText":"Edit this page on GitHub","editBranch":"master","editViewMode":"tree"},"enablePrettyLinks":true,"enableTaskNotes":true,"siteFaviconPath":"favicon.ico","siteIndex":"root"}}},"__N_SSG":true}