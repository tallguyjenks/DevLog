{"pageProps":{"note":{"id":"fvjp3k8cyciowzz8fkn855b","title":"Write Data This Alternative Is 7 Times Faster","desc":"","updated":1641269061613,"created":1641105063988,"stub":false,"isDir":false,"custom":{"stub":false,"isDir":false},"fname":"r.(.2021.11.01.write-data-this-alternative-is-7-times-faster","type":"note","vault":{"fsPath":"DevLog"},"contentHash":"d1d1513e574ab0a2630a505a09b49f5e","links":[{"type":"wiki","from":{"fname":"r.(.2021.11.01.write-data-this-alternative-is-7-times-faster","id":"fvjp3k8cyciowzz8fkn855b","vaultName":"DevLog"},"value":"log.daily.2021.11.01","alias":"log.daily.2021.11.01","position":{"start":{"line":6,"column":20,"offset":204},"end":{"line":6,"column":44,"offset":228},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"log.daily.2021.11.01"}},{"from":{"fname":"log.daily.2021.11.01","vaultName":"DevLog"},"type":"backlink","position":{"start":{"line":5,"column":3,"offset":17},"end":{"line":5,"column":67,"offset":81},"indent":[]},"value":"r.(.2021.11.01.write-data-this-alternative-is-7-times-faster","alias":"r.(.2021.11.01.write-data-this-alternative-is-7-times-faster"},{"from":{"fname":"s.l.python.libs.pyarrow","vaultName":"DevLog"},"type":"backlink","position":{"start":{"line":83,"column":5,"offset":2148},"end":{"line":83,"column":69,"offset":2212},"indent":[]},"value":"r.(.2021.11.01.write-data-this-alternative-is-7-times-faster","alias":"r.(.2021.11.01.write-data-this-alternative-is-7-times-faster"}],"anchors":{},"children":[],"parent":"uhe9o8rnqlamn2rrshziqqg","data":{}},"body":"<h1 id=\"write-data-this-alternative-is-7-times-faster\"><a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#write-data-this-alternative-is-7-times-faster\"></a>Write Data This Alternative Is 7 Times Faster</h1>\n<ul>\n<li><code>Author:</code> dario-radečić</li>\n<li><code>Link:</code> <a href=\"https://towardsdatascience.com/stop-using-pandas-to-read-write-data-this-alternative-is-7-times-faster-893301633475\">https://towardsdatascience.com/stop-using-pandas-to-read-write-data-this-alternative-is-7-times-faster-893301633475</a></li>\n<li><code>Publish Date:</code> 2021-10-22</li>\n<li><code>Reviewed Date:</code> <a href=\"/DevLog/notes/g6s9moek11ceml84gub56t1\">01</a></li>\n</ul>\n<hr>\n<ul>\n<li>Pyarrow for faster data reads\n<ul>\n<li><code>pip install pyarrow</code></li>\n</ul>\n</li>\n<li>video format of this article <a href=\"https://youtu.be/gFd4I1oXG8E\">https://youtu.be/gFd4I1oXG8E</a></li>\n</ul>\n<p><img src=\"/DevLog/assets/images/Pasted_image_20211101091818.png\" alt=\"alt\">\n<img src=\"/DevLog/assets/images/Pasted_image_20211101091826.png\" alt=\"alt\">\n<img src=\"/DevLog/assets/images/Pasted_image_20211101091836.png\" alt=\"alt\"></p>\n<pre class=\"language-python\"><code class=\"language-python\"><span class=\"token comment\"># Create a dummy dataset:</span>\n<span class=\"token keyword\">import</span> random\n<span class=\"token keyword\">import</span> string\n<span class=\"token keyword\">import</span> numpy <span class=\"token keyword\">as</span> np\n<span class=\"token keyword\">import</span> pandas <span class=\"token keyword\">as</span> pd\n<span class=\"token keyword\">import</span> pyarrow <span class=\"token keyword\">as</span> pa\n<span class=\"token keyword\">import</span> pyarrow<span class=\"token punctuation\">.</span>csv <span class=\"token keyword\">as</span> csv\n<span class=\"token keyword\">from</span> datetime <span class=\"token keyword\">import</span> datetime\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">gen_random_string</span><span class=\"token punctuation\">(</span>length<span class=\"token punctuation\">:</span> <span class=\"token builtin\">int</span> <span class=\"token operator\">=</span> <span class=\"token number\">32</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">return</span> <span class=\"token string\">''</span><span class=\"token punctuation\">.</span>join<span class=\"token punctuation\">(</span>random<span class=\"token punctuation\">.</span>choices<span class=\"token punctuation\">(</span>\n        string<span class=\"token punctuation\">.</span>ascii_uppercase <span class=\"token operator\">+</span> string<span class=\"token punctuation\">.</span>digits<span class=\"token punctuation\">,</span> k<span class=\"token operator\">=</span>length<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">)</span>\n\ndt <span class=\"token operator\">=</span> pd<span class=\"token punctuation\">.</span>date_range<span class=\"token punctuation\">(</span>\n    start<span class=\"token operator\">=</span>datetime<span class=\"token punctuation\">(</span><span class=\"token number\">2000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    end<span class=\"token operator\">=</span>datetime<span class=\"token punctuation\">(</span><span class=\"token number\">2021</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    freq<span class=\"token operator\">=</span><span class=\"token string\">'min'</span>\n<span class=\"token punctuation\">)</span>\n\nnp<span class=\"token punctuation\">.</span>random<span class=\"token punctuation\">.</span>seed <span class=\"token operator\">=</span> <span class=\"token number\">42</span>\ndf_size <span class=\"token operator\">=</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>dt<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f'Dataset length: </span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span>df_size<span class=\"token punctuation\">}</span></span><span class=\"token string\">'</span></span><span class=\"token punctuation\">)</span>\n\n\ndf <span class=\"token operator\">=</span> pd<span class=\"token punctuation\">.</span>DataFrame<span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n    <span class=\"token string\">'date'</span><span class=\"token punctuation\">:</span> dt<span class=\"token punctuation\">,</span>\n    <span class=\"token string\">'a'</span><span class=\"token punctuation\">:</span> np<span class=\"token punctuation\">.</span>random<span class=\"token punctuation\">.</span>rand<span class=\"token punctuation\">(</span>df_size<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">'b'</span><span class=\"token punctuation\">:</span> np<span class=\"token punctuation\">.</span>random<span class=\"token punctuation\">.</span>rand<span class=\"token punctuation\">(</span>df_size<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">'c'</span><span class=\"token punctuation\">:</span> np<span class=\"token punctuation\">.</span>random<span class=\"token punctuation\">.</span>rand<span class=\"token punctuation\">(</span>df_size<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">'d'</span><span class=\"token punctuation\">:</span> np<span class=\"token punctuation\">.</span>random<span class=\"token punctuation\">.</span>rand<span class=\"token punctuation\">(</span>df_size<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">'e'</span><span class=\"token punctuation\">:</span> np<span class=\"token punctuation\">.</span>random<span class=\"token punctuation\">.</span>rand<span class=\"token punctuation\">(</span>df_size<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">'str1'</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>gen_random_string<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">for</span> x <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>df_size<span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">'str2'</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>gen_random_string<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">for</span> x <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>df_size<span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># 1 test baseline speed of pandas</span>\n<span class=\"token comment\">## even being kind by using the compression parameter</span>\n\ndf<span class=\"token punctuation\">.</span>to_csv<span class=\"token punctuation\">(</span><span class=\"token string\">'csv_pandas.csv.gz'</span><span class=\"token punctuation\">,</span> index<span class=\"token operator\">=</span><span class=\"token boolean\">False</span><span class=\"token punctuation\">,</span> compression<span class=\"token operator\">=</span><span class=\"token string\">'gzip'</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># Check read times</span>\n\ndf1 <span class=\"token operator\">=</span> pd<span class=\"token punctuation\">.</span>read_csv<span class=\"token punctuation\">(</span><span class=\"token string\">'csv_pandas.csv'</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># **NOTE:** Here’s a thing you should know about PyArrow — it can’t handle datetime columns. You’ll have to convert the date attribute to a timestamp. Here’s how:</span>\n\ndf_pa <span class=\"token operator\">=</span> df<span class=\"token punctuation\">.</span>copy<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\ndf_pa<span class=\"token punctuation\">[</span><span class=\"token string\">'date'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> df_pa<span class=\"token punctuation\">[</span><span class=\"token string\">'date'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>values<span class=\"token punctuation\">.</span>astype<span class=\"token punctuation\">(</span>np<span class=\"token punctuation\">.</span>int64<span class=\"token punctuation\">)</span> <span class=\"token operator\">//</span> <span class=\"token number\">10</span> <span class=\"token operator\">**</span> <span class=\"token number\">9</span>\ndf_pa_table <span class=\"token operator\">=</span> pa<span class=\"token punctuation\">.</span>Table<span class=\"token punctuation\">.</span>from_pandas<span class=\"token punctuation\">(</span>df_pa<span class=\"token punctuation\">)</span>\ncsv<span class=\"token punctuation\">.</span>write_csv<span class=\"token punctuation\">(</span>df_pa_table<span class=\"token punctuation\">,</span> <span class=\"token string\">'csv_pyarrow.csv'</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># Adding compression</span>\n\n<span class=\"token keyword\">with</span> pa<span class=\"token punctuation\">.</span>CompressedOutputStream<span class=\"token punctuation\">(</span><span class=\"token string\">'csv_pyarrow.csv.gz'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'gzip'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> out<span class=\"token punctuation\">:</span>\n    csv<span class=\"token punctuation\">.</span>write_csv<span class=\"token punctuation\">(</span>df_pa_table<span class=\"token punctuation\">,</span> out<span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># You can read both compressed and uncompressed dataset with the csv.read_csv() function:</span>\n\ndf_pa_1 <span class=\"token operator\">=</span> csv<span class=\"token punctuation\">.</span>read_csv<span class=\"token punctuation\">(</span><span class=\"token string\">'csv_pyarrow.csv'</span><span class=\"token punctuation\">)</span>\ndf_pa_2 <span class=\"token operator\">=</span> csv<span class=\"token punctuation\">.</span>read_csv<span class=\"token punctuation\">(</span><span class=\"token string\">'csv_pyarrow.csv.gz'</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># Both will be read in the pyarrow.Table format, so use the following command to convert them to a Pandas DataFrame:</span>\n\ndf_pa_1 <span class=\"token operator\">=</span> df_pa_1<span class=\"token punctuation\">.</span>to_pandas<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<hr>\n<strong>Backlinks</strong>\n<ul>\n<li><a href=\"/DevLog/notes/g6s9moek11ceml84gub56t1\">01 (DevLog)</a></li>\n<li><a href=\"/DevLog/notes/78ds38sxy5phfhbmynb1phx\">Pyarrow (DevLog)</a></li>\n</ul>","noteIndex":{"id":"root","title":"root","desc":"","updated":1641013093667,"created":1595961348801,"stub":false,"custom":{"stub":false,"nav_order":0,"permalink":"/"},"fname":"root","type":"note","vault":{"fsPath":"DevLog"},"contentHash":"b0b26527a2962dbb8bd5fb9a53ad702f","links":[],"anchors":{},"children":["rzqe5mjn3q2zfscw1roxr20","Bl9NeJmftBQJyJA3X4a6u","inm1S24v2GcN3Quf7gzDb","fmx7cfcdzale0ezna61yq5z","q6tr8q7gahfijix2ktlhcu3","yah6spesmpstech2ue2k3lq","6pxwlugphnw6vm4t8kn0j5p","i17wi8y2hgivywe08h6q6it","1st35wikvph2aew8aana21u","mijr0wvj3qz0mt9pv9xo1jv","qaf8v120h0ffvbowysjxw50","sh4851li2rsrhx47wwsirgv","fwqjigvqyfxiyl3pbpjvgdw","pxdvvln974xhe8w0alh0hoy","n6yddb1smrac5ll3l1y6wbd","g5dllyqoqkenoiz3opalzu6","kbwt8ucy0yh6bo8fl0kv9iw","beykavbe22agsufmm03hu0c","2uvuqa3c15o5r4j7sqadqvr","yr6gzhx0bhzyec6f52y66vf","4no90tcdswtuwmjm0bxnetx"],"parent":null,"data":{},"body":"\nThe hyperfixated rabbit hole diving knowledge base that is my brain looking at technology.\n"},"collectionChildren":null,"customHeadContent":null,"config":{"version":5,"dev":{"enablePreviewV2":true},"commands":{"lookup":{"note":{"selectionMode":"extract","confirmVaultOnCreate":true,"leaveTrace":false,"bubbleUpCreateNew":true,"fuzzThreshold":0.2,"vaultSelectionModeOnCreate":"smart"}},"randomNote":{},"insertNote":{"initialValue":"templates"},"insertNoteLink":{"aliasMode":"none","enableMultiSelect":false},"insertNoteIndex":{"enableMarker":false},"copyNoteLink":{},"templateHierarchy":"template"},"workspace":{"vaults":[{"fsPath":"sterkere","visibility":"private"},{"fsPath":"Norsk","visibility":"private"},{"fsPath":"DevLog"}],"journal":{"dailyDomain":"log","name":"daily","dateFormat":"yyyy.MM.dd","addBehavior":"childOfCurrent"},"scratch":{"name":"scratch","dateFormat":"yyyy.MM.dd.HHmmss","addBehavior":"asOwnDomain"},"task":{"todoIntegration":true,"name":"task","dateFormat":"yyyy.MM.dd","addBehavior":"asOwnDomain","statusSymbols":{"":" ","wip":"wip","done":"x","assigned":"a","moved":"m","blocked":"b","delegated":"l","dropped":"d","pending":"y"},"prioritySymbols":{"H":"high","M":"medium","L":"low"},"createTaskSelectionType":"selection2link","taskCompleteStatus":["done","x"]},"graph":{"zoomSpeed":1,"createStub":false},"enableAutoCreateOnDefinition":false,"enableXVaultWikiLink":false,"enableRemoteVaultInit":true,"enableUserTags":true,"enableHashTags":true,"workspaceVaultSyncMode":"noCommit","enableAutoFoldFrontmatter":false,"enableEditorDecorations":true,"maxPreviewsCached":10,"maxNoteLength":204800,"dendronVersion":"0.95.1","enableFullHierarchyNoteTitle":false,"enableHandlebarTemplates":false,"templateHierarchy":"template","enableSmartRefs":false},"preview":{"enableFMTitle":true,"enableNoteTitleForLink":true,"enableMermaid":true,"enablePrettyRefs":true,"enableKatex":true,"automaticallyShowPreview":false,"enableFrontmatterTags":true,"enableHashesForFMTags":false},"publishing":{"theme":"custom","enableFMTitle":true,"enableNoteTitleForLink":true,"enableMermaid":true,"enablePrettyRefs":true,"enableKatex":true,"assetsPrefix":"/DevLog","copyAssets":true,"siteHierarchies":["root"],"enableSiteLastModified":true,"siteRootDir":"docs","siteUrl":"https://{GITHUB_USERNAME}.github.io","enableFrontmatterTags":true,"enableHashesForFMTags":false,"enableRandomlyColoredTags":true,"duplicateNoteBehavior":{"action":"useVault","payload":["DevLog"]},"writeStubs":false,"seo":{"title":"Dendron","description":"Personal knowledge space"},"github":{"enableEditLink":true,"editLinkText":"Edit this page on GitHub","editBranch":"master","editViewMode":"tree"},"enablePrettyLinks":true,"enableTaskNotes":true,"siteFaviconPath":"favicon.ico","siteIndex":"root"}}},"__N_SSG":true}