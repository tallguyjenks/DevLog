{"pageProps":{"note":{"id":"70j7252gj1kl4k4cpssywpv","title":"Dataframe","desc":"","updated":1641409958601,"created":1641409958601,"custom":{},"fname":"s.l.r.data-types.dataframe","type":"note","vault":{"fsPath":"DevLog"},"contentHash":"039faa5d39b9d2e78ba220e65f477218","links":[],"anchors":{"data-frame":{"type":"header","text":"Data Frame","value":"data-frame","line":9,"column":0,"depth":2}},"children":[],"parent":"1x9vhyty58bgg10n0tg6a4a","data":{}},"body":"<h1 id=\"dataframe\"><a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#dataframe\"></a>Dataframe</h1>\n<h2 id=\"data-frame\"><a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#data-frame\"></a>Data Frame</h2>\n<pre class=\"language-r\"><code class=\"language-r\"><span class=\"token comment\"># PART 1 ----</span>\n\n<span class=\"token comment\"># Data Frames</span>\n<span class=\"token comment\"># A Table or a 2-dimensional array-like structure in which each column contains </span>\n<span class=\"token comment\"># values of one variable and each row contains one set of values from each column</span>\n<span class=\"token comment\"># Syntax: data.frame(data)</span>\n\n<span class=\"token comment\">#============#</span>\n<span class=\"token comment\">#  EXAMPLES  #</span>\n<span class=\"token comment\">#============#</span>\n\nRowCount <span class=\"token operator\">=</span> c<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token operator\">:</span><span class=\"token number\">5</span><span class=\"token punctuation\">)</span>\nPeopleNames <span class=\"token operator\">=</span> c<span class=\"token punctuation\">(</span><span class=\"token string\">\"Bryan\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"Jude\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"kelly\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"janelle\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"Rosa\"</span><span class=\"token punctuation\">)</span>\nValues <span class=\"token operator\">=</span> c<span class=\"token punctuation\">(</span><span class=\"token number\">15</span><span class=\"token punctuation\">,</span><span class=\"token number\">25</span><span class=\"token punctuation\">,</span><span class=\"token number\">65</span><span class=\"token punctuation\">,</span><span class=\"token number\">145</span><span class=\"token punctuation\">,</span><span class=\"token number\">74</span><span class=\"token punctuation\">)</span>\n\ndf <span class=\"token operator\">&#x3C;-</span> data.frame<span class=\"token punctuation\">(</span>RowCount<span class=\"token punctuation\">,</span>PeopleNames<span class=\"token punctuation\">,</span>Values<span class=\"token punctuation\">)</span>\ndf\n<span class=\"token comment\"># This alone will display the valeus of the data frame each vector in the frame</span>\n<span class=\"token comment\"># represents a vertical column of values that each contibue a value to each row</span>\n\ndata.frame<span class=\"token punctuation\">(</span>airquality<span class=\"token punctuation\">)</span> \n<span class=\"token comment\"># Built in sample data table, can also import Excel files</span>\n\n\n<span class=\"token comment\"># PART 2 ----</span>\n\nmyDataFrame <span class=\"token operator\">&#x3C;-</span> read.csv<span class=\"token punctuation\">(</span><span class=\"token string\">\"20190208 RC Registry.csv\"</span><span class=\"token punctuation\">)</span>\nmyDataFrame <span class=\"token operator\">&#x3C;-</span> myDataFrame<span class=\"token punctuation\">[</span>myDataFrame<span class=\"token operator\">$</span>Medical..Screening.Due.Date <span class=\"token operator\">&#x3C;</span>date<span class=\"token punctuation\">,</span> c<span class=\"token punctuation\">(</span><span class=\"token string\">\"CDCR\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Medical..Screening.Due.Date\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span>\nmyDataFrame\n\n\n<span class=\"token comment\"># PART 3 ----</span>\n\n<span class=\"token comment\"># setting up the data frame vectors</span>\nid <span class=\"token operator\">&#x3C;-</span> <span class=\"token number\">1</span><span class=\"token operator\">:</span><span class=\"token number\">200</span>\ngroup <span class=\"token operator\">&#x3C;-</span> c<span class=\"token punctuation\">(</span>rep<span class=\"token punctuation\">(</span><span class=\"token string\">\"Vehicle\"</span><span class=\"token punctuation\">,</span><span class=\"token number\">100</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\t   rep<span class=\"token punctuation\">(</span><span class=\"token string\">\"Drug\"</span><span class=\"token punctuation\">,</span><span class=\"token number\">100</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\nresponse <span class=\"token operator\">&#x3C;-</span> c<span class=\"token punctuation\">(</span>rnorm<span class=\"token punctuation\">(</span><span class=\"token number\">100</span><span class=\"token punctuation\">,</span>mean <span class=\"token operator\">=</span> <span class=\"token number\">25</span><span class=\"token punctuation\">,</span> sd <span class=\"token operator\">=</span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\t\t  rnorm<span class=\"token punctuation\">(</span><span class=\"token number\">100</span><span class=\"token punctuation\">,</span>mean <span class=\"token operator\">=</span> <span class=\"token number\">23</span><span class=\"token punctuation\">,</span> sd<span class=\"token operator\">=</span><span class=\"token number\">5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\nage <span class=\"token operator\">&#x3C;-</span> round<span class=\"token punctuation\">(</span>rnorm<span class=\"token punctuation\">(</span><span class=\"token number\">200</span><span class=\"token punctuation\">,</span><span class=\"token number\">40</span><span class=\"token punctuation\">,</span><span class=\"token number\">20</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\">#compiling the data frame</span>\nmyData <span class=\"token operator\">&#x3C;-</span> data.frame<span class=\"token punctuation\">(</span>Patient <span class=\"token operator\">=</span> id<span class=\"token punctuation\">,</span>\n\t\t\t\t Patient.Age <span class=\"token operator\">=</span> age<span class=\"token punctuation\">,</span>\n\t\t\t\t Treatment <span class=\"token operator\">=</span> group<span class=\"token punctuation\">,</span>\n\t\t\t\t Response <span class=\"token operator\">=</span> response<span class=\"token punctuation\">)</span>\n\nmyData\nhead<span class=\"token punctuation\">(</span>myData<span class=\"token punctuation\">,</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span>\ntail<span class=\"token punctuation\">(</span>myData<span class=\"token punctuation\">,</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span>\ndim<span class=\"token punctuation\">(</span>myData<span class=\"token punctuation\">)</span>\nstr<span class=\"token punctuation\">(</span>myData<span class=\"token punctuation\">)</span>\nsummary<span class=\"token punctuation\">(</span>myData<span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># subsetting Data.frames ----</span>\n\nmyData<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span>\nmyData<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span>\nmyData<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token operator\">:</span><span class=\"token number\">20</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token operator\">:</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span> <span class=\"token comment\"># first 20 rows with columns 2 &#x26; 3 present</span>\nmyData<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token operator\">:</span><span class=\"token number\">20</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">]</span> <span class=\"token comment\"># returns 20 rows and all columns if left blank</span>\nmyData<span class=\"token punctuation\">[</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token comment\"># returns everythingh in the first column only</span>\nmyData<span class=\"token punctuation\">[</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"Response\"</span><span class=\"token punctuation\">]</span> <span class=\"token comment\"># returns just the columns values for the column named \"Response\"</span>\nmyData<span class=\"token operator\">$</span>Response <span class=\"token comment\">#the Dollar sign $ after the name of the data frame will return the entire column without quotes or brackets</span>\n\nmyData<span class=\"token punctuation\">[</span>myData<span class=\"token operator\">$</span>Response<span class=\"token operator\">></span><span class=\"token number\">26</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">]</span> <span class=\"token comment\"># give me the rows and all columns for every row that meets the criteria</span>\n<span class=\"token comment\"># of Response > 26</span>\n\n<span class=\"token comment\">#perform a calculation and then add values to a new column of the data frame</span>\nmyData<span class=\"token operator\">$</span>Positive <span class=\"token operator\">&#x3C;-</span> myData<span class=\"token operator\">$</span>Response<span class=\"token operator\">&#x3C;</span><span class=\"token number\">26</span>\nwrite.csv<span class=\"token punctuation\">(</span>myData<span class=\"token punctuation\">[</span>myData<span class=\"token operator\">$</span>Response<span class=\"token operator\">></span><span class=\"token number\">26</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>file <span class=\"token operator\">=</span> <span class=\"token string\">\"testData.csv\"</span><span class=\"token punctuation\">,</span> row.names <span class=\"token operator\">=</span> F<span class=\"token punctuation\">)</span> <span class=\"token comment\"># write a CSV file to the current working directory</span>\n\n<span class=\"token comment\"># multiple filter criteria and then assigned</span>\n<span class=\"token comment\"># to a new object for ease of exporting to CSV</span>\nCSVMyData <span class=\"token operator\">&#x3C;-</span> myData<span class=\"token punctuation\">[</span>myData<span class=\"token operator\">$</span>Treatment <span class=\"token operator\">==</span> <span class=\"token string\">\"Vehicle\"</span>\n\t\t\t\t<span class=\"token operator\">&#x26;</span> myData<span class=\"token operator\">$</span>Response<span class=\"token operator\">></span><span class=\"token number\">26</span> <span class=\"token operator\">&#x26;</span>\n\t\t\t\t\tmyData<span class=\"token operator\">$</span>Patient.Age <span class=\"token operator\">></span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">]</span> \n\n\nwrite.csv<span class=\"token punctuation\">(</span>CSVMyData<span class=\"token punctuation\">,</span>file <span class=\"token operator\">=</span> <span class=\"token string\">\"testData.csv\"</span><span class=\"token punctuation\">,</span> row.names <span class=\"token operator\">=</span> F<span class=\"token punctuation\">)</span>\n\nhead<span class=\"token punctuation\">(</span>CSVMyData<span class=\"token punctuation\">)</span>\n\n</code></pre>","noteIndex":{"id":"root","title":"root","desc":"","updated":1641013093667,"created":1595961348801,"stub":false,"custom":{"stub":false,"nav_order":0,"permalink":"/"},"fname":"root","type":"note","vault":{"fsPath":"DevLog"},"contentHash":"b0b26527a2962dbb8bd5fb9a53ad702f","links":[],"anchors":{},"children":["rzqe5mjn3q2zfscw1roxr20","Bl9NeJmftBQJyJA3X4a6u","inm1S24v2GcN3Quf7gzDb","fmx7cfcdzale0ezna61yq5z","q6tr8q7gahfijix2ktlhcu3","yah6spesmpstech2ue2k3lq","6pxwlugphnw6vm4t8kn0j5p","i17wi8y2hgivywe08h6q6it","1st35wikvph2aew8aana21u","mijr0wvj3qz0mt9pv9xo1jv","qaf8v120h0ffvbowysjxw50","sh4851li2rsrhx47wwsirgv","fwqjigvqyfxiyl3pbpjvgdw","pxdvvln974xhe8w0alh0hoy","n6yddb1smrac5ll3l1y6wbd","g5dllyqoqkenoiz3opalzu6","kbwt8ucy0yh6bo8fl0kv9iw","beykavbe22agsufmm03hu0c","2uvuqa3c15o5r4j7sqadqvr","yr6gzhx0bhzyec6f52y66vf","4no90tcdswtuwmjm0bxnetx"],"parent":null,"data":{},"body":"\nThe hyperfixated rabbit hole diving knowledge base that is my brain looking at technology.\n"},"collectionChildren":null,"customHeadContent":null,"config":{"version":5,"dev":{"enablePreviewV2":true},"commands":{"lookup":{"note":{"selectionMode":"extract","confirmVaultOnCreate":true,"leaveTrace":false,"bubbleUpCreateNew":true,"fuzzThreshold":0.2,"vaultSelectionModeOnCreate":"smart"}},"randomNote":{},"insertNote":{"initialValue":"templates"},"insertNoteLink":{"aliasMode":"none","enableMultiSelect":false},"insertNoteIndex":{"enableMarker":false},"copyNoteLink":{},"templateHierarchy":"template"},"workspace":{"vaults":[{"fsPath":"sterkere","visibility":"private"},{"fsPath":"Norsk","visibility":"private"},{"fsPath":"DevLog"}],"journal":{"dailyDomain":"log","name":"daily","dateFormat":"yyyy.MM.dd","addBehavior":"childOfCurrent"},"scratch":{"name":"scratch","dateFormat":"yyyy.MM.dd.HHmmss","addBehavior":"asOwnDomain"},"task":{"todoIntegration":true,"name":"task","dateFormat":"yyyy.MM.dd","addBehavior":"asOwnDomain","statusSymbols":{"":" ","wip":"wip","done":"x","assigned":"a","moved":"m","blocked":"b","delegated":"l","dropped":"d","pending":"y"},"prioritySymbols":{"H":"high","M":"medium","L":"low"},"createTaskSelectionType":"selection2link","taskCompleteStatus":["done","x"]},"graph":{"zoomSpeed":1,"createStub":false},"enableAutoCreateOnDefinition":false,"enableXVaultWikiLink":false,"enableRemoteVaultInit":true,"enableUserTags":true,"enableHashTags":true,"workspaceVaultSyncMode":"noCommit","enableAutoFoldFrontmatter":false,"enableEditorDecorations":true,"maxPreviewsCached":10,"maxNoteLength":204800,"dendronVersion":"0.95.1","enableFullHierarchyNoteTitle":false,"enableHandlebarTemplates":false,"templateHierarchy":"template","enableSmartRefs":false},"preview":{"enableFMTitle":true,"enableNoteTitleForLink":true,"enableMermaid":true,"enablePrettyRefs":true,"enableKatex":true,"automaticallyShowPreview":false,"enableFrontmatterTags":true,"enableHashesForFMTags":false},"publishing":{"theme":"custom","enableFMTitle":true,"enableNoteTitleForLink":true,"enableMermaid":true,"enablePrettyRefs":true,"enableKatex":true,"assetsPrefix":"/DevLog","copyAssets":true,"siteHierarchies":["root"],"enableSiteLastModified":true,"siteRootDir":"docs","siteUrl":"https://{GITHUB_USERNAME}.github.io","enableFrontmatterTags":true,"enableHashesForFMTags":false,"enableRandomlyColoredTags":true,"duplicateNoteBehavior":{"action":"useVault","payload":["DevLog"]},"writeStubs":false,"seo":{"title":"Dendron","description":"Personal knowledge space"},"github":{"enableEditLink":true,"editLinkText":"Edit this page on GitHub","editBranch":"master","editViewMode":"tree"},"enablePrettyLinks":true,"enableTaskNotes":true,"siteFaviconPath":"favicon.ico","siteIndex":"root"}}},"__N_SSG":true}