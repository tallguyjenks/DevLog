{"pageProps":{"note":{"id":"pxnm2wtg8sqtiw5pdxf0mma","title":"Examples","desc":"","updated":1641426281071,"created":1641426281071,"custom":{},"fname":"s.l.python.libs.pandas.examples","type":"note","vault":{"fsPath":"DevLog"},"contentHash":"7e48871b685ae720af4b461f6241c9ab","links":[],"anchors":{"examples":{"type":"header","text":"Examples","value":"examples","line":9,"column":0,"depth":2}},"children":[],"parent":"pt6olz4xmnsfaf16lebsbid","data":{}},"body":"<h1 id=\"examples\"><a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#examples\"></a>Examples</h1>\n<h2 id=\"examples-1\"><a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#examples-1\"></a>Examples</h2>\n<hr>\n<pre class=\"language-python\"><code class=\"language-python\"><span class=\"token comment\"># Libs</span>\n<span class=\"token keyword\">import</span> pandas <span class=\"token keyword\">as</span> pd\n\n<span class=\"token comment\"># Instead of using CSV module this can make a dataframe out of your csv file</span>\ndf <span class=\"token operator\">=</span> pd<span class=\"token punctuation\">.</span>read_csv<span class=\"token punctuation\">(</span><span class=\"token string\">'data.csv'</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># kind of like the skimr function in R to describe the dataset with common statistics</span>\ndf<span class=\"token punctuation\">.</span>describe<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># Preview of our data</span>\ndf<span class=\"token punctuation\">.</span>head<span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># Preview of our data</span>\ndf<span class=\"token punctuation\">.</span>tail<span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># Get the shape of the data frame (Rows, Columns)</span>\n<span class=\"token comment\"># Attribute not a method so no parens needed</span>\ndf<span class=\"token punctuation\">.</span>shape\n\n<span class=\"token comment\"># Get info about the data frame fields</span>\n<span class=\"token comment\"># This is a method so parens are needed</span>\n<span class=\"token comment\"># Object types are usually strings</span>\ndf<span class=\"token punctuation\">.</span>info<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># makes is so the printed dataframe above with the `df` call cell displays 85 total columns</span>\npd<span class=\"token punctuation\">.</span>set_option<span class=\"token punctuation\">(</span><span class=\"token string\">'display.max_columns'</span><span class=\"token punctuation\">,</span><span class=\"token number\">85</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># makes is so the printed dataframe above with the `df` call cell displays 85 total rows</span>\npd<span class=\"token punctuation\">.</span>set_option<span class=\"token punctuation\">(</span><span class=\"token string\">'display.max_rows'</span><span class=\"token punctuation\">,</span><span class=\"token number\">85</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># Load csv schema</span>\nschema_df <span class=\"token operator\">=</span> pd<span class=\"token punctuation\">.</span>read_csv<span class=\"token punctuation\">(</span><span class=\"token string\">'data_schema.csv'</span><span class=\"token punctuation\">)</span>\n\nschema_df\n</code></pre>\n<pre class=\"language-python\"><code class=\"language-python\"><span class=\"token comment\">#!/usr/bin/env python</span>\n<span class=\"token comment\"># coding: utf-8</span>\n\n<span class=\"token comment\"># # Pandas tutorial with Stackoverflow data</span>\n<span class=\"token comment\"># </span>\n<span class=\"token comment\"># > This tutorial is using data from the stack overflow developer survey that can be found at the following link:</span>\n<span class=\"token comment\"># [Developer Survey List](https://insights.stackoverflow.com/survey)</span>\n<span class=\"token comment\"># Libs</span>\n<span class=\"token keyword\">import</span> pandas <span class=\"token keyword\">as</span> pd\n<span class=\"token comment\"># Instead of using CSV module this can make a dataframe out of your csv file</span>\ndf <span class=\"token operator\">=</span> pd<span class=\"token punctuation\">.</span>read_csv<span class=\"token punctuation\">(</span><span class=\"token string\">'data.csv'</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># Preview of our data</span>\ndf<span class=\"token punctuation\">.</span>head<span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># Preview of our data</span>\ndf<span class=\"token punctuation\">.</span>tail<span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># Get the shape of the data frame (Rows, Columns)</span>\n<span class=\"token comment\"># Attribute not a method so no parens needed</span>\ndf<span class=\"token punctuation\">.</span>shape\n<span class=\"token comment\"># Get info about the data frame fields</span>\n<span class=\"token comment\"># This is a method so parens are needed</span>\n<span class=\"token comment\"># Object types are usually strings</span>\ndf<span class=\"token punctuation\">.</span>info<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># makes is so the printed dataframe above with the `df` call cell displays 85 total columns</span>\npd<span class=\"token punctuation\">.</span>set_option<span class=\"token punctuation\">(</span><span class=\"token string\">'display.max_columns'</span><span class=\"token punctuation\">,</span><span class=\"token number\">85</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># makes is so the printed dataframe above with the `df` call cell displays 85 total rows</span>\npd<span class=\"token punctuation\">.</span>set_option<span class=\"token punctuation\">(</span><span class=\"token string\">'display.max_rows'</span><span class=\"token punctuation\">,</span><span class=\"token number\">85</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># Load csv schema</span>\nschema_df <span class=\"token operator\">=</span> pd<span class=\"token punctuation\">.</span>read_csv<span class=\"token punctuation\">(</span><span class=\"token string\">'data_schema.csv'</span><span class=\"token punctuation\">)</span>\nschema_df\ndf<span class=\"token punctuation\">[</span><span class=\"token string\">'Hobbyist'</span><span class=\"token punctuation\">]</span>\npeople <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token string\">\"first\"</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"Corey\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Jane'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'John'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> \n  <span class=\"token string\">\"last\"</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"Schafer\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Doe'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Doe'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> \n  <span class=\"token string\">\"email\"</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"CoreyMSchafer@gmail.com\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'JaneDoe@email.com'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'JohnDoe@email.com'</span><span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">}</span>\npeople<span class=\"token punctuation\">[</span><span class=\"token string\">'email'</span><span class=\"token punctuation\">]</span>\npeeps <span class=\"token operator\">=</span> pd<span class=\"token punctuation\">.</span>DataFrame<span class=\"token punctuation\">(</span>people<span class=\"token punctuation\">)</span>\npeeps\npeeps<span class=\"token punctuation\">[</span><span class=\"token string\">'email'</span><span class=\"token punctuation\">]</span>\npeeps<span class=\"token punctuation\">.</span>email\npeeps<span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span><span class=\"token string\">'last'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'email'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span>\npeeps<span class=\"token punctuation\">.</span>columns\n<span class=\"token comment\"># loc = location</span>\n<span class=\"token comment\"># iloc = integer location</span>\npeeps<span class=\"token punctuation\">.</span>iloc<span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token comment\"># return the first and second record and only the 3rd field of those records</span>\ndf<span class=\"token punctuation\">[</span><span class=\"token string\">'email'</span><span class=\"token punctuation\">]</span>\ndf<span class=\"token punctuation\">.</span>Hobbyist<span class=\"token punctuation\">.</span>value_counts<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># # Video #3</span>\n<span class=\"token comment\"># ## Python Pandas Tutorial (Part 3): Indexes - How to Set, Reset, and Use Indexes</span>\n<span class=\"token comment\"># </span>\n<span class=\"token comment\">#[video3](https://youtu.be/W9XjRYFkkyw?list=PL-osiE80TeTsWmV9i9c58mdDCSskIFdDS)</span>\n<span class=\"token comment\"># </span>\npeople <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token string\">\"first\"</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"Corey\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Jane'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'John'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> \n  <span class=\"token string\">\"last\"</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"Schafer\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Doe'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Doe'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> \n  <span class=\"token string\">\"email\"</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"CoreyMSchafer@gmail.com\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'JaneDoe@email.com'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'JohnDoe@email.com'</span><span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">}</span>\ndf <span class=\"token operator\">=</span> pd<span class=\"token punctuation\">.</span>DataFrame<span class=\"token punctuation\">(</span>people<span class=\"token punctuation\">)</span>\ndf<span class=\"token punctuation\">.</span>set_index<span class=\"token punctuation\">(</span><span class=\"token string\">'email'</span><span class=\"token punctuation\">)</span>\ndf\ndf<span class=\"token punctuation\">.</span>set_index<span class=\"token punctuation\">(</span><span class=\"token string\">'email'</span><span class=\"token punctuation\">,</span> inplace<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># make it so changes overwrite the df</span>\ndf\ndf<span class=\"token punctuation\">.</span>loc<span class=\"token punctuation\">[</span><span class=\"token string\">'CoreyMSchafer@gmail.com'</span><span class=\"token punctuation\">]</span>\ndf<span class=\"token punctuation\">.</span>iloc<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span>\nget_ipython<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>run_line_magic<span class=\"token punctuation\">(</span><span class=\"token string\">'lsmagic'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">''</span><span class=\"token punctuation\">)</span>\nget_ipython<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>run_cell_magic<span class=\"token punctuation\">(</span><span class=\"token string\">'html'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">''</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'&#x3C;b>hello there&#x3C;/b>'</span><span class=\"token punctuation\">)</span>\nget_ipython<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>run_cell_magic<span class=\"token punctuation\">(</span><span class=\"token string\">'bash'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">''</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'ls -la'</span><span class=\"token punctuation\">)</span>\nget_ipython<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>run_line_magic<span class=\"token punctuation\">(</span><span class=\"token string\">'ls'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'-la'</span><span class=\"token punctuation\">)</span>\nget_ipython<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>run_line_magic<span class=\"token punctuation\">(</span><span class=\"token string\">'ls'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'-la'</span><span class=\"token punctuation\">)</span>\nget_ipython<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>run_line_magic<span class=\"token punctuation\">(</span><span class=\"token string\">'ls'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'-la'</span><span class=\"token punctuation\">)</span>\n\n</code></pre>\n<hr>","noteIndex":{"id":"root","title":"root","desc":"","updated":1641013093667,"created":1595961348801,"stub":false,"custom":{"stub":false,"nav_order":0,"permalink":"/"},"fname":"root","type":"note","vault":{"fsPath":"DevLog"},"contentHash":"b0b26527a2962dbb8bd5fb9a53ad702f","links":[],"anchors":{},"children":["rzqe5mjn3q2zfscw1roxr20","Bl9NeJmftBQJyJA3X4a6u","inm1S24v2GcN3Quf7gzDb","fmx7cfcdzale0ezna61yq5z","q6tr8q7gahfijix2ktlhcu3","yah6spesmpstech2ue2k3lq","6pxwlugphnw6vm4t8kn0j5p","i17wi8y2hgivywe08h6q6it","1st35wikvph2aew8aana21u","mijr0wvj3qz0mt9pv9xo1jv","qaf8v120h0ffvbowysjxw50","sh4851li2rsrhx47wwsirgv","fwqjigvqyfxiyl3pbpjvgdw","pxdvvln974xhe8w0alh0hoy","n6yddb1smrac5ll3l1y6wbd","g5dllyqoqkenoiz3opalzu6","kbwt8ucy0yh6bo8fl0kv9iw","beykavbe22agsufmm03hu0c","2uvuqa3c15o5r4j7sqadqvr","yr6gzhx0bhzyec6f52y66vf","4no90tcdswtuwmjm0bxnetx"],"parent":null,"data":{},"body":"\nThe hyperfixated rabbit hole diving knowledge base that is my brain looking at technology.\n"},"collectionChildren":null,"customHeadContent":null,"config":{"version":5,"dev":{"enablePreviewV2":true},"commands":{"lookup":{"note":{"selectionMode":"extract","confirmVaultOnCreate":true,"leaveTrace":false,"bubbleUpCreateNew":true,"fuzzThreshold":0.2,"vaultSelectionModeOnCreate":"smart"}},"randomNote":{},"insertNote":{"initialValue":"templates"},"insertNoteLink":{"aliasMode":"none","enableMultiSelect":false},"insertNoteIndex":{"enableMarker":false},"copyNoteLink":{},"templateHierarchy":"template"},"workspace":{"vaults":[{"fsPath":"sterkere","visibility":"private"},{"fsPath":"Norsk","visibility":"private"},{"fsPath":"DevLog"}],"journal":{"dailyDomain":"log","name":"daily","dateFormat":"yyyy.MM.dd","addBehavior":"childOfCurrent"},"scratch":{"name":"scratch","dateFormat":"yyyy.MM.dd.HHmmss","addBehavior":"asOwnDomain"},"task":{"todoIntegration":true,"name":"task","dateFormat":"yyyy.MM.dd","addBehavior":"asOwnDomain","statusSymbols":{"":" ","wip":"wip","done":"x","assigned":"a","moved":"m","blocked":"b","delegated":"l","dropped":"d","pending":"y"},"prioritySymbols":{"H":"high","M":"medium","L":"low"},"createTaskSelectionType":"selection2link","taskCompleteStatus":["done","x"]},"graph":{"zoomSpeed":1,"createStub":false},"enableAutoCreateOnDefinition":false,"enableXVaultWikiLink":false,"enableRemoteVaultInit":true,"enableUserTags":true,"enableHashTags":true,"workspaceVaultSyncMode":"noCommit","enableAutoFoldFrontmatter":false,"enableEditorDecorations":true,"maxPreviewsCached":10,"maxNoteLength":204800,"dendronVersion":"0.95.1","enableFullHierarchyNoteTitle":false,"enableHandlebarTemplates":false,"templateHierarchy":"template","enableSmartRefs":false},"preview":{"enableFMTitle":true,"enableNoteTitleForLink":true,"enableMermaid":true,"enablePrettyRefs":true,"enableKatex":true,"automaticallyShowPreview":false,"enableFrontmatterTags":true,"enableHashesForFMTags":false},"publishing":{"theme":"custom","enableFMTitle":true,"enableNoteTitleForLink":true,"enableMermaid":true,"enablePrettyRefs":true,"enableKatex":true,"assetsPrefix":"/DevLog","copyAssets":true,"siteHierarchies":["root"],"enableSiteLastModified":true,"siteRootDir":"docs","siteUrl":"https://{GITHUB_USERNAME}.github.io","enableFrontmatterTags":true,"enableHashesForFMTags":false,"enableRandomlyColoredTags":true,"duplicateNoteBehavior":{"action":"useVault","payload":["DevLog"]},"writeStubs":false,"seo":{"title":"Dendron","description":"Personal knowledge space"},"github":{"enableEditLink":true,"editLinkText":"Edit this page on GitHub","editBranch":"master","editViewMode":"tree"},"enablePrettyLinks":true,"enableTaskNotes":true,"siteFaviconPath":"favicon.ico","siteIndex":"root"}}},"__N_SSG":true}