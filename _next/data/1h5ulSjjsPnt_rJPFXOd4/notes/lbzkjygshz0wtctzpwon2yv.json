{"pageProps":{"note":{"id":"lbzkjygshz0wtctzpwon2yv","title":"How to Read Log File in Sql Server Using Tsql","desc":"","updated":1646347290300,"created":1646346780666,"custom":{},"fname":"r.(.2022.03.03.how-to-read-log-file-in-sql-server-using-tsql","type":"note","vault":{"fsPath":"DevLog"},"contentHash":"086638341dcd0627de12491c0c9b1c29","links":[{"from":{"fname":"log.daily.2022.03.03","vaultName":"DevLog"},"type":"backlink","position":{"start":{"line":6,"column":3,"offset":434},"end":{"line":6,"column":70,"offset":501},"indent":[]},"value":"r.(.2022.03.03.how-to-read-log-file-in-sql-server-using-tsql","alias":"r.(.2022.03.03.how-to-read-log-file-in-sql-server-using-tsql"},{"from":{"fname":"s.q.tsql.system-resources.extended-stored-procedure.master.xp_readerrorlog","vaultName":"DevLog"},"type":"backlink","position":{"start":{"line":2,"column":1,"offset":1},"end":{"line":2,"column":66,"offset":66},"indent":[]},"value":"r.(.2022.03.03.how-to-read-log-file-in-sql-server-using-tsql"}],"anchors":{"how-to-read-log-file-in-sql-server-using-tsql":{"type":"header","text":"How to Read Log File in SQL Server using TSQL","value":"how-to-read-log-file-in-sql-server-using-tsql","line":11,"column":0,"depth":2},"problem":{"type":"header","text":"Problem","value":"problem","line":13,"column":0,"depth":3},"solution":{"type":"header","text":"Solution","value":"solution","line":17,"column":0,"depth":3},"potential-pitfalls":{"type":"header","text":"Potential pitfalls","value":"potential-pitfalls","line":75,"column":0,"depth":2}},"children":[],"parent":"e8p0itqsswnx0gdx8hej0lz","data":{}},"body":"<h1 id=\"how-to-read-log-file-in-sql-server-using-tsql\"><a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#how-to-read-log-file-in-sql-server-using-tsql\"></a>How to Read Log File in Sql Server Using Tsql</h1>\n<p><a href=\"https://www.mssqltips.com/sqlservertip/1476/how-to-read-log-file-in-sql-server-using-tsql/\">https://www.mssqltips.com/sqlservertip/1476/how-to-read-log-file-in-sql-server-using-tsql/</a></p>\n<h2 id=\"how-to-read-log-file-in-sql-server-using-tsql-1\"><a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#how-to-read-log-file-in-sql-server-using-tsql-1\"></a>How to Read Log File in SQL Server using TSQL</h2>\n<h3 id=\"problem\"><a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#problem\"></a>Problem</h3>\n<blockquote>\n<p>One of the issues I have is that the SQL Server Error Log is quite large and it is not always easy to view the contents with the Log File Viewer. In a previous tip \"Simple way to find errors in SQL Server error log\" you discussed a method of searching the error log. Are there any other ways to search and find errors in the error log files?</p>\n</blockquote>\n<h3 id=\"solution\"><a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#solution\"></a>Solution</h3>\n<blockquote>\n<p>SQL Server offers an undocumented system stored procedure <code>sp_readerrorlog</code>. This SP allows you to read the contents of the SQL Server error log files directly from a query window and also allows you to search for certain keywords when reading the error file.</p>\n<p>This is a sample of the stored procedure that already exists in the master database. You will see that when this gets called it calls an extended stored procedure <code>xp_readerrorlog</code>.</p>\n</blockquote>\n<pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token comment\">/*\nThis procedure takes four parameters:\n\n1. Value of error log file you want to read: 0 = current, 1 = Archive #1, 2 = Archive #2, etc...\n2. Log file type: 1 or NULL = error log, 2 = SQL Agent log\n3. Search string 1: String one you want to search for\n4. Search string 2: String two you want to search for to further refine the results\n\nIf you do not pass any parameters this will return the contents of the current error log.\n*/</span>\n\n<span class=\"token keyword\">CREATE</span> <span class=\"token keyword\">PROC</span> <span class=\"token punctuation\">[</span>sys<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">[</span>sp_readerrorlog<span class=\"token punctuation\">]</span><span class=\"token punctuation\">(</span>\n   <span class=\"token variable\">@p1</span> <span class=\"token keyword\">INT</span> <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n   <span class=\"token variable\">@p2</span> <span class=\"token keyword\">INT</span> <span class=\"token operator\">=</span> <span class=\"token boolean\">NULL</span><span class=\"token punctuation\">,</span>\n   <span class=\"token variable\">@p3</span> <span class=\"token keyword\">VARCHAR</span><span class=\"token punctuation\">(</span><span class=\"token number\">255</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> <span class=\"token boolean\">NULL</span><span class=\"token punctuation\">,</span>\n   <span class=\"token variable\">@p4</span> <span class=\"token keyword\">VARCHAR</span><span class=\"token punctuation\">(</span><span class=\"token number\">255</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> <span class=\"token boolean\">NULL</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">AS</span>\n<span class=\"token keyword\">BEGIN</span>\n\n   <span class=\"token keyword\">IF</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">NOT</span> IS_SRVROLEMEMBER<span class=\"token punctuation\">(</span>N<span class=\"token string\">'securityadmin'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n   <span class=\"token keyword\">BEGIN</span>\n      <span class=\"token keyword\">RAISERROR</span><span class=\"token punctuation\">(</span><span class=\"token number\">15003</span><span class=\"token punctuation\">,</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> N<span class=\"token string\">'securityadmin'</span><span class=\"token punctuation\">)</span>\n      <span class=\"token keyword\">RETURN</span> <span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n   <span class=\"token keyword\">END</span>\n\n   <span class=\"token keyword\">IF</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">@p2</span> <span class=\"token operator\">IS</span> <span class=\"token boolean\">NULL</span><span class=\"token punctuation\">)</span>\n       <span class=\"token keyword\">EXEC</span> sys<span class=\"token punctuation\">.</span>xp_readerrorlog <span class=\"token variable\">@p1</span>\n   <span class=\"token keyword\">ELSE</span>\n       <span class=\"token keyword\">EXEC</span> sys<span class=\"token punctuation\">.</span>xp_readerrorlog <span class=\"token variable\">@p1</span><span class=\"token punctuation\">,</span><span class=\"token variable\">@p2</span><span class=\"token punctuation\">,</span><span class=\"token variable\">@p3</span><span class=\"token punctuation\">,</span><span class=\"token variable\">@p4</span>\n<span class=\"token keyword\">END</span>\n</code></pre>\n<p>The above is basically a copy of <code>xp_readerrorlog</code> but only using 4 of the parameters</p>\n<p>The actual extended procedure <code>xp_readerrorlog</code> can take up to 7 parameters</p>\n<ol>\n<li>Value of error log file you want to read: 0 = current, 1 = Archive #1, 2 = Archive #2, etc...</li>\n<li>Log file type: 1 or NULL = error log, 2 = SQL Agent log</li>\n<li>Search string 1: String one you want to search for</li>\n<li>Search string 2: String two you want to search for to further refine the results</li>\n<li>Search from start time</li>\n<li>Search to end time</li>\n<li>Sort order for results: N'asc' = ascending, N'desc' = descending</li>\n</ol>\n<p>Here is are some examples:</p>\n<pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token keyword\">EXEC</span> master<span class=\"token punctuation\">.</span>dbo<span class=\"token punctuation\">.</span>xp_readerrorlog <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'2005'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'exec'</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">NULL</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">NULL</span><span class=\"token punctuation\">,</span> N<span class=\"token string\">'desc'</span>\n<span class=\"token keyword\">EXEC</span> master<span class=\"token punctuation\">.</span>dbo<span class=\"token punctuation\">.</span>xp_readerrorlog <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'2005'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'exec'</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">NULL</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">NULL</span><span class=\"token punctuation\">,</span> N<span class=\"token string\">'asc'</span>\n</code></pre>\n<h2 id=\"potential-pitfalls\"><a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#potential-pitfalls\"></a>Potential pitfalls</h2>\n<blockquote>\n<p>for later versions of SQL Server you may need to use double quotes or you might get this error.</p>\n</blockquote>\n<p><code>Msg 22004, Level 12, State 1, Line 0 Error executing extended stored procedure: Invalid Parameter Type</code></p>\n<p>Try this instead.</p>\n<pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token keyword\">EXEC</span> master<span class=\"token punctuation\">.</span>dbo<span class=\"token punctuation\">.</span>xp_readerrorlog <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"backup\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"failed\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"2017-01-02\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"2017-02-02\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"desc\"</span>\n<span class=\"token keyword\">EXEC</span> master<span class=\"token punctuation\">.</span>dbo<span class=\"token punctuation\">.</span>xp_readerrorlog <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"2005\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"exec\"</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">NULL</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">NULL</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"asc\"</span>\n</code></pre>\n<p>Or try this, putting N before each parameter.</p>\n<pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token keyword\">EXEC</span> master<span class=\"token punctuation\">.</span>dbo<span class=\"token punctuation\">.</span>xp_readerrorlog <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> N<span class=\"token string\">'backup'</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">NULL</span><span class=\"token punctuation\">,</span> N<span class=\"token string\">'2017-01-02'</span><span class=\"token punctuation\">,</span> N<span class=\"token string\">'2017-02-02'</span><span class=\"token punctuation\">,</span> N<span class=\"token string\">'desc'</span>\n<span class=\"token keyword\">EXEC</span> master<span class=\"token punctuation\">.</span>dbo<span class=\"token punctuation\">.</span>xp_readerrorlog <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> N<span class=\"token string\">'backup'</span><span class=\"token punctuation\">,</span> N<span class=\"token string\">'failed'</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">NULL</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">NULL</span><span class=\"token punctuation\">,</span> N<span class=\"token string\">'asc'</span>\n</code></pre>\n<hr>\n<strong>Backlinks</strong>\n<ul>\n<li><a href=\"/DevLog/notes/09s1m81lxifmup1so6qi7u6\">2022-03-03 (DevLog)</a></li>\n<li><a href=\"/DevLog/notes/9qjw8tktkhqo5v7rb7r4om6\">Xp_readerrorlog (DevLog)</a></li>\n</ul>","noteIndex":{"id":"root","title":"root","desc":"","updated":1641013093667,"created":1595961348801,"stub":false,"custom":{"stub":false,"nav_order":0,"permalink":"/"},"fname":"root","type":"note","vault":{"fsPath":"DevLog"},"contentHash":"b0b26527a2962dbb8bd5fb9a53ad702f","links":[],"anchors":{},"children":["rzqe5mjn3q2zfscw1roxr20","Bl9NeJmftBQJyJA3X4a6u","inm1S24v2GcN3Quf7gzDb","fmx7cfcdzale0ezna61yq5z","q6tr8q7gahfijix2ktlhcu3","yah6spesmpstech2ue2k3lq","6pxwlugphnw6vm4t8kn0j5p","i17wi8y2hgivywe08h6q6it","1st35wikvph2aew8aana21u","mijr0wvj3qz0mt9pv9xo1jv","qaf8v120h0ffvbowysjxw50","sh4851li2rsrhx47wwsirgv","fwqjigvqyfxiyl3pbpjvgdw","pxdvvln974xhe8w0alh0hoy","n6yddb1smrac5ll3l1y6wbd","g5dllyqoqkenoiz3opalzu6","kbwt8ucy0yh6bo8fl0kv9iw","beykavbe22agsufmm03hu0c","2uvuqa3c15o5r4j7sqadqvr","yr6gzhx0bhzyec6f52y66vf","4no90tcdswtuwmjm0bxnetx"],"parent":null,"data":{},"body":"\nThe hyperfixated rabbit hole diving knowledge base that is my brain looking at technology.\n"},"collectionChildren":null,"customHeadContent":null,"config":{"version":5,"dev":{"enablePreviewV2":true},"commands":{"lookup":{"note":{"selectionMode":"extract","confirmVaultOnCreate":true,"leaveTrace":false,"bubbleUpCreateNew":true,"fuzzThreshold":0.2,"vaultSelectionModeOnCreate":"smart"}},"randomNote":{},"insertNote":{"initialValue":"templates"},"insertNoteLink":{"aliasMode":"none","enableMultiSelect":false},"insertNoteIndex":{"enableMarker":false},"copyNoteLink":{},"templateHierarchy":"template"},"workspace":{"vaults":[{"fsPath":"sterkere","visibility":"private"},{"fsPath":"Norsk","visibility":"private"},{"fsPath":"DevLog"}],"journal":{"dailyDomain":"log","name":"daily","dateFormat":"yyyy.MM.dd","addBehavior":"childOfCurrent"},"scratch":{"name":"scratch","dateFormat":"yyyy.MM.dd.HHmmss","addBehavior":"asOwnDomain"},"task":{"todoIntegration":true,"name":"task","dateFormat":"yyyy.MM.dd","addBehavior":"asOwnDomain","statusSymbols":{"":" ","wip":"wip","done":"x","assigned":"a","moved":"m","blocked":"b","delegated":"l","dropped":"d","pending":"y"},"prioritySymbols":{"H":"high","M":"medium","L":"low"},"createTaskSelectionType":"selection2link","taskCompleteStatus":["done","x"]},"graph":{"zoomSpeed":1,"createStub":false},"enableAutoCreateOnDefinition":false,"enableXVaultWikiLink":false,"enableRemoteVaultInit":true,"enableUserTags":true,"enableHashTags":true,"workspaceVaultSyncMode":"noCommit","enableAutoFoldFrontmatter":false,"enableEditorDecorations":true,"maxPreviewsCached":10,"maxNoteLength":204800,"dendronVersion":"0.95.1","enableFullHierarchyNoteTitle":false,"enableHandlebarTemplates":false,"templateHierarchy":"template","enableSmartRefs":false},"preview":{"enableFMTitle":true,"enableNoteTitleForLink":true,"enableMermaid":true,"enablePrettyRefs":true,"enableKatex":true,"automaticallyShowPreview":false,"enableFrontmatterTags":true,"enableHashesForFMTags":false},"publishing":{"theme":"custom","enableFMTitle":true,"enableNoteTitleForLink":true,"enableMermaid":true,"enablePrettyRefs":true,"enableKatex":true,"assetsPrefix":"/DevLog","copyAssets":true,"siteHierarchies":["root"],"enableSiteLastModified":true,"siteRootDir":"docs","siteUrl":"https://{GITHUB_USERNAME}.github.io","enableFrontmatterTags":true,"enableHashesForFMTags":false,"enableRandomlyColoredTags":true,"duplicateNoteBehavior":{"action":"useVault","payload":["DevLog"]},"writeStubs":false,"seo":{"title":"Dendron","description":"Personal knowledge space"},"github":{"enableEditLink":true,"editLinkText":"Edit this page on GitHub","editBranch":"master","editViewMode":"tree"},"enablePrettyLinks":true,"enableTaskNotes":true,"siteFaviconPath":"favicon.ico","siteIndex":"root"}}},"__N_SSG":true}