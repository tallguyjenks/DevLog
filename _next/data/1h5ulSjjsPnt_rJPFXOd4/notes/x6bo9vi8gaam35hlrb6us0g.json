{"pageProps":{"note":{"id":"x6bo9vi8gaam35hlrb6us0g","title":"If Statements","desc":"","updated":1641407134936,"created":1641105063911,"stub":false,"isDir":false,"custom":{"stub":false,"isDir":false},"fname":"s.l.javascript.if-statements","type":"note","vault":{"fsPath":"DevLog"},"contentHash":"75bd9341f19eed4d53b7c5e799ee09f4","links":[{"type":"wiki","from":{"fname":"s.l.javascript.if-statements","id":"x6bo9vi8gaam35hlrb6us0g","vaultName":"DevLog"},"value":"theory.guard-clauses","alias":"theory.guard-clauses","position":{"start":{"line":50,"column":1,"offset":840},"end":{"line":50,"column":25,"offset":864},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"theory.guard-clauses"}},{"type":"ref","from":{"fname":"s.l.javascript.if-statements","id":"x6bo9vi8gaam35hlrb6us0g","vaultName":"DevLog"},"value":"theory.guard-clauses","position":{"start":{"line":52,"column":1,"offset":899},"end":{"line":52,"column":26,"offset":924},"indent":[]},"xvault":false,"to":{"fname":"theory.guard-clauses"}},{"from":{"fname":"s.l.javascript.conditional-logic-and-control-flow","vaultName":"DevLog"},"type":"backlink","position":{"start":{"line":2,"column":3,"offset":3},"end":{"line":2,"column":35,"offset":35},"indent":[]},"value":"s.l.javascript.if-statements","alias":"s.l.javascript.if-statements"}],"anchors":{"efficient-usage":{"type":"header","text":"Efficient Usage","value":"efficient-usage","line":11,"column":0,"depth":2}},"children":[],"parent":"q3x4qpvhvtcy7h4efgbwh3n","data":{}},"body":"<h1 id=\"if-statements\"><a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#if-statements\"></a>If Statements</h1>\n<h2 id=\"efficient-usage\"><a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#efficient-usage\"></a>Efficient Usage</h2>\n<p>The most classic form of the if-else statement looks really simple.</p>\n<pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword control-flow\">if</span> <span class=\"token punctuation\">(</span>someCondition<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n   <span class=\"token comment\">// 10 lines of code</span>\n<span class=\"token punctuation\">}</span> <span class=\"token keyword control-flow\">else</span> <span class=\"token punctuation\">{</span>\n   <span class=\"token comment\">// More code..</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<p>This is how we could use a return in order to get rid of the else block:</p>\n<pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword control-flow\">if</span> <span class=\"token punctuation\">(</span>someCondition<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n   <span class=\"token comment\">// 10 lines of code</span>\n   <span class=\"token keyword control-flow\">return</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span> \n<span class=\"token comment\">// More code..</span>\n</code></pre>\n<p>If-else statements get used a lot to assign variables</p>\n<pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword control-flow\">if</span> <span class=\"token punctuation\">(</span>someCondition<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n   number <span class=\"token operator\">=</span> someNumber <span class=\"token operator\">*</span> <span class=\"token number\">2</span>\n<span class=\"token punctuation\">}</span> <span class=\"token keyword control-flow\">else</span> <span class=\"token punctuation\">{</span>\n   number <span class=\"token operator\">=</span> <span class=\"token number\">1</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<p>When you spot code like this, change it. The way to get rid of the else block is by assigning a default value.</p>\n<pre class=\"language-js\"><code class=\"language-js\">number <span class=\"token operator\">=</span> <span class=\"token number\">1</span>\n<span class=\"token keyword control-flow\">if</span> <span class=\"token punctuation\">(</span>someCondition<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n   number <span class=\"token operator\">=</span> someNumber <span class=\"token operator\">*</span> <span class=\"token number\">2</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<p>There’s a way to optimize this code even more. We could make this piece of code a one-liner by using the conditional operator:</p>\n<pre class=\"language-js\"><code class=\"language-js\">number <span class=\"token operator\">=</span> someCondition <span class=\"token operator\">?</span> someNumber <span class=\"token operator\">*</span> <span class=\"token number\">2</span> <span class=\"token operator\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<p><a href=\"/DevLog/notes/kb1lrmy6gyf9j7qkaoi4zfx\">Guard Clauses</a> are also known as early-returns.</p>\n<p></p><p></p><div class=\"portal-container\">\n<div class=\"portal-head\">\n<div class=\"portal-backlink\">\n<div class=\"portal-title\">From <span class=\"portal-text-title\">Guard Clauses</span></div>\n<a href=\"/DevLog/notes/kb1lrmy6gyf9j7qkaoi4zfx\" class=\"portal-arrow\">Go to text <span class=\"right-arrow\">→</span></a>\n</div>\n</div>\n<div id=\"portal-parent-anchor\" class=\"portal-parent\" markdown=\"1\">\n<div class=\"portal-parent-fader-top\"></div>\n<div class=\"portal-parent-fader-bottom\"></div><p>The idea behind returning early is that you write functions that return the expected positive result at the end of the function.</p>\n<p>The rest of the code, in the function, should trigger the termination as soon as possible in case of divergence with the function’s purpose.</p>\n<p>An early return does exactly as its name implies. This is what an early return looks like:</p>\n<pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">function</span> <span class=\"token function\">someFunction</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword control-flow\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>someCondition<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword control-flow\">return</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>    \n    <span class=\"token comment\">// Do something</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<ul>\n<li>Reference:\n<ul>\n<li><a href=\"https://levelup.gitconnected.com/how-you-can-avoid-using-else-in-your-code-871197a1adbc\">https://levelup.gitconnected.com/how-you-can-avoid-using-else-in-your-code-871197a1adbc</a></li>\n</ul>\n</li>\n</ul></div></div><p></p><p></p>\n<hr>\n<ul>\n<li>Reference:\n<ul>\n<li><a href=\"https://levelup.gitconnected.com/how-you-can-avoid-using-else-in-your-code-871197a1adbc\">https://levelup.gitconnected.com/how-you-can-avoid-using-else-in-your-code-871197a1adbc</a> </li>\n</ul>\n</li>\n</ul>\n<hr>\n<strong>Backlinks</strong>\n<ul>\n<li><a href=\"/DevLog/notes/lzfafv2nbukf10ylujzfrgt\">Conditional Logic and Control Flow (DevLog)</a></li>\n</ul>","noteIndex":{"id":"root","title":"root","desc":"","updated":1641013093667,"created":1595961348801,"stub":false,"custom":{"stub":false,"nav_order":0,"permalink":"/"},"fname":"root","type":"note","vault":{"fsPath":"DevLog"},"contentHash":"b0b26527a2962dbb8bd5fb9a53ad702f","links":[],"anchors":{},"children":["rzqe5mjn3q2zfscw1roxr20","Bl9NeJmftBQJyJA3X4a6u","inm1S24v2GcN3Quf7gzDb","fmx7cfcdzale0ezna61yq5z","q6tr8q7gahfijix2ktlhcu3","yah6spesmpstech2ue2k3lq","6pxwlugphnw6vm4t8kn0j5p","i17wi8y2hgivywe08h6q6it","1st35wikvph2aew8aana21u","mijr0wvj3qz0mt9pv9xo1jv","qaf8v120h0ffvbowysjxw50","sh4851li2rsrhx47wwsirgv","fwqjigvqyfxiyl3pbpjvgdw","pxdvvln974xhe8w0alh0hoy","n6yddb1smrac5ll3l1y6wbd","g5dllyqoqkenoiz3opalzu6","kbwt8ucy0yh6bo8fl0kv9iw","beykavbe22agsufmm03hu0c","2uvuqa3c15o5r4j7sqadqvr","yr6gzhx0bhzyec6f52y66vf","4no90tcdswtuwmjm0bxnetx"],"parent":null,"data":{},"body":"\nThe hyperfixated rabbit hole diving knowledge base that is my brain looking at technology.\n"},"collectionChildren":null,"customHeadContent":null,"config":{"version":5,"dev":{"enablePreviewV2":true},"commands":{"lookup":{"note":{"selectionMode":"extract","confirmVaultOnCreate":true,"leaveTrace":false,"bubbleUpCreateNew":true,"fuzzThreshold":0.2,"vaultSelectionModeOnCreate":"smart"}},"randomNote":{},"insertNote":{"initialValue":"templates"},"insertNoteLink":{"aliasMode":"none","enableMultiSelect":false},"insertNoteIndex":{"enableMarker":false},"copyNoteLink":{},"templateHierarchy":"template"},"workspace":{"vaults":[{"fsPath":"sterkere","visibility":"private"},{"fsPath":"Norsk","visibility":"private"},{"fsPath":"DevLog"}],"journal":{"dailyDomain":"log","name":"daily","dateFormat":"yyyy.MM.dd","addBehavior":"childOfCurrent"},"scratch":{"name":"scratch","dateFormat":"yyyy.MM.dd.HHmmss","addBehavior":"asOwnDomain"},"task":{"todoIntegration":true,"name":"task","dateFormat":"yyyy.MM.dd","addBehavior":"asOwnDomain","statusSymbols":{"":" ","wip":"wip","done":"x","assigned":"a","moved":"m","blocked":"b","delegated":"l","dropped":"d","pending":"y"},"prioritySymbols":{"H":"high","M":"medium","L":"low"},"createTaskSelectionType":"selection2link","taskCompleteStatus":["done","x"]},"graph":{"zoomSpeed":1,"createStub":false},"enableAutoCreateOnDefinition":false,"enableXVaultWikiLink":false,"enableRemoteVaultInit":true,"enableUserTags":true,"enableHashTags":true,"workspaceVaultSyncMode":"noCommit","enableAutoFoldFrontmatter":false,"enableEditorDecorations":true,"maxPreviewsCached":10,"maxNoteLength":204800,"dendronVersion":"0.95.1","enableFullHierarchyNoteTitle":false,"enableHandlebarTemplates":false,"templateHierarchy":"template","enableSmartRefs":false},"preview":{"enableFMTitle":true,"enableNoteTitleForLink":true,"enableMermaid":true,"enablePrettyRefs":true,"enableKatex":true,"automaticallyShowPreview":false,"enableFrontmatterTags":true,"enableHashesForFMTags":false},"publishing":{"theme":"custom","enableFMTitle":true,"enableNoteTitleForLink":true,"enableMermaid":true,"enablePrettyRefs":true,"enableKatex":true,"assetsPrefix":"/DevLog","copyAssets":true,"siteHierarchies":["root"],"enableSiteLastModified":true,"siteRootDir":"docs","siteUrl":"https://{GITHUB_USERNAME}.github.io","enableFrontmatterTags":true,"enableHashesForFMTags":false,"enableRandomlyColoredTags":true,"duplicateNoteBehavior":{"action":"useVault","payload":["DevLog"]},"writeStubs":false,"seo":{"title":"Dendron","description":"Personal knowledge space"},"github":{"enableEditLink":true,"editLinkText":"Edit this page on GitHub","editBranch":"master","editViewMode":"tree"},"enablePrettyLinks":true,"enableTaskNotes":true,"siteFaviconPath":"favicon.ico","siteIndex":"root"}}},"__N_SSG":true}