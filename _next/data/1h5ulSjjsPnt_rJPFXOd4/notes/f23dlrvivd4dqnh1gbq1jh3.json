{"pageProps":{"note":{"id":"f23dlrvivd4dqnh1gbq1jh3","title":"Worktree","desc":"","updated":1641185492616,"created":1641185345482,"custom":{},"fname":"cli.cmd.git.cmd.worktree","type":"note","vault":{"fsPath":"DevLog"},"contentHash":"79a0be62a45c4d2e19301c04bd9f5177","links":[{"type":"wiki","from":{"fname":"cli.cmd.git.cmd.worktree","id":"f23dlrvivd4dqnh1gbq1jh3","vaultName":"DevLog"},"value":"import.git","alias":"import.git","position":{"start":{"line":9,"column":53,"offset":109},"end":{"line":9,"column":75,"offset":131},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"import.git","anchorHeader":"^faf0c6"}}],"anchors":{"git-worktree":{"type":"header","text":"git worktree","value":"git-worktree","line":9,"column":0,"depth":3},"making-work-trees":{"type":"header","text":"Making work-trees","value":"making-work-trees","line":21,"column":0,"depth":2}},"children":[],"parent":"jjABlQbOcr8SdS4j4jhCq","data":{}},"body":"<h1 id=\"worktree\"><a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#worktree\"></a>Worktree</h1>\n<h3 id=\"git-worktree\"><a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#git-worktree\"></a>git worktree</h3>\n<pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">git</span> worktree <span class=\"token function\">add</span> master\n</code></pre>\n<ul>\n<li>Create a bare repo and start making new worktrees <a title=\"Private\" href=\"https://wiki.dendron.so/notes/hfyvYGJZQiUwQaaxQO27q.html\" target=\"_blank\" class=\"private\">import.git (Private)</a>\n<ul>\n<li>This means that a copy of the repo files is made for each worktree at the source commit that the bare repo was made from</li>\n<li>Worktrees make it easier to open multiple repo branches at once under a unified workspace for easy switching of work between multiple features</li>\n<li>Doesn't lend itself to easy updating.\n<ul>\n<li>The bare repo doesn't <code>git pull</code> itself but the worktrees after creation can use <code>git pull</code> but this is not ideal. The bare repo is basically frozen at a single commit for all new worktrees made.</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"making-work-trees\"><a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#making-work-trees\"></a>Making work-trees</h2>\n<ul>\n<li><a href=\"https://youtu.be/2uEqYw-N8uE\">ThePrimeagen</a></li>\n</ul>\n<pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">git</span> clone --bare <span class=\"token operator\">&#x3C;</span>repo url.git<span class=\"token operator\">></span> <span class=\"token operator\">&#x3C;</span>name of the folder to create<span class=\"token operator\">></span>\n<span class=\"token comment\"># ex:</span>\n<span class=\"token function\">git</span> clone --bare git@github.com:tallguyjenks/CV.git CV\n\n\n<span class=\"token comment\"># makes a bare repo of my resume</span>\n<span class=\"token comment\"># there's nothing in it, none of the files from the repo just git stuff</span>\n<span class=\"token comment\"># THEN</span>\n\n<span class=\"token function\">git</span> worktree <span class=\"token function\">add</span> master\n<span class=\"token function\">git</span> worktree <span class=\"token function\">add</span> <span class=\"token builtin class-name\">test</span>\n<span class=\"token function\">git</span> worktree <span class=\"token function\">add</span> feature\n\n<span class=\"token comment\"># it takes the current commit at the HEAD of the repo (git pull at you're at the most recent) and this way # you're working with 3 folders basically 3 branches of the same repo but simultaneously. NO SWITCHING BACK &#x26; AND FORTH ü§ØÔ∏èü§ØÔ∏èü§ØÔ∏è</span>\n</code></pre>","noteIndex":{"id":"root","title":"root","desc":"","updated":1641013093667,"created":1595961348801,"stub":false,"custom":{"stub":false,"nav_order":0,"permalink":"/"},"fname":"root","type":"note","vault":{"fsPath":"DevLog"},"contentHash":"b0b26527a2962dbb8bd5fb9a53ad702f","links":[],"anchors":{},"children":["rzqe5mjn3q2zfscw1roxr20","Bl9NeJmftBQJyJA3X4a6u","inm1S24v2GcN3Quf7gzDb","fmx7cfcdzale0ezna61yq5z","q6tr8q7gahfijix2ktlhcu3","yah6spesmpstech2ue2k3lq","6pxwlugphnw6vm4t8kn0j5p","i17wi8y2hgivywe08h6q6it","1st35wikvph2aew8aana21u","mijr0wvj3qz0mt9pv9xo1jv","qaf8v120h0ffvbowysjxw50","sh4851li2rsrhx47wwsirgv","fwqjigvqyfxiyl3pbpjvgdw","pxdvvln974xhe8w0alh0hoy","n6yddb1smrac5ll3l1y6wbd","g5dllyqoqkenoiz3opalzu6","kbwt8ucy0yh6bo8fl0kv9iw","beykavbe22agsufmm03hu0c","2uvuqa3c15o5r4j7sqadqvr","yr6gzhx0bhzyec6f52y66vf","4no90tcdswtuwmjm0bxnetx"],"parent":null,"data":{},"body":"\nThe hyperfixated rabbit hole diving knowledge base that is my brain looking at technology.\n"},"collectionChildren":null,"customHeadContent":null,"config":{"version":5,"dev":{"enablePreviewV2":true},"commands":{"lookup":{"note":{"selectionMode":"extract","confirmVaultOnCreate":true,"leaveTrace":false,"bubbleUpCreateNew":true,"fuzzThreshold":0.2,"vaultSelectionModeOnCreate":"smart"}},"randomNote":{},"insertNote":{"initialValue":"templates"},"insertNoteLink":{"aliasMode":"none","enableMultiSelect":false},"insertNoteIndex":{"enableMarker":false},"copyNoteLink":{},"templateHierarchy":"template"},"workspace":{"vaults":[{"fsPath":"sterkere","visibility":"private"},{"fsPath":"Norsk","visibility":"private"},{"fsPath":"DevLog"}],"journal":{"dailyDomain":"log","name":"daily","dateFormat":"yyyy.MM.dd","addBehavior":"childOfCurrent"},"scratch":{"name":"scratch","dateFormat":"yyyy.MM.dd.HHmmss","addBehavior":"asOwnDomain"},"task":{"todoIntegration":true,"name":"task","dateFormat":"yyyy.MM.dd","addBehavior":"asOwnDomain","statusSymbols":{"":" ","wip":"wip","done":"x","assigned":"a","moved":"m","blocked":"b","delegated":"l","dropped":"d","pending":"y"},"prioritySymbols":{"H":"high","M":"medium","L":"low"},"createTaskSelectionType":"selection2link","taskCompleteStatus":["done","x"]},"graph":{"zoomSpeed":1,"createStub":false},"enableAutoCreateOnDefinition":false,"enableXVaultWikiLink":false,"enableRemoteVaultInit":true,"enableUserTags":true,"enableHashTags":true,"workspaceVaultSyncMode":"noCommit","enableAutoFoldFrontmatter":false,"enableEditorDecorations":true,"maxPreviewsCached":10,"maxNoteLength":204800,"dendronVersion":"0.95.1","enableFullHierarchyNoteTitle":false,"enableHandlebarTemplates":false,"templateHierarchy":"template","enableSmartRefs":false},"preview":{"enableFMTitle":true,"enableNoteTitleForLink":true,"enableMermaid":true,"enablePrettyRefs":true,"enableKatex":true,"automaticallyShowPreview":false,"enableFrontmatterTags":true,"enableHashesForFMTags":false},"publishing":{"theme":"custom","enableFMTitle":true,"enableNoteTitleForLink":true,"enableMermaid":true,"enablePrettyRefs":true,"enableKatex":true,"assetsPrefix":"/DevLog","copyAssets":true,"siteHierarchies":["root"],"enableSiteLastModified":true,"siteRootDir":"docs","siteUrl":"https://{GITHUB_USERNAME}.github.io","enableFrontmatterTags":true,"enableHashesForFMTags":false,"enableRandomlyColoredTags":true,"duplicateNoteBehavior":{"action":"useVault","payload":["DevLog"]},"writeStubs":false,"seo":{"title":"Dendron","description":"Personal knowledge space"},"github":{"enableEditLink":true,"editLinkText":"Edit this page on GitHub","editBranch":"master","editViewMode":"tree"},"enablePrettyLinks":true,"enableTaskNotes":true,"siteFaviconPath":"favicon.ico","siteIndex":"root"}}},"__N_SSG":true}