{"pageProps":{"note":{"id":"xsyyvv6wmwtsjnsxk7cpsjl","title":"Pointers","desc":"","updated":1641377319367,"created":1641105063896,"stub":false,"isDir":false,"custom":{"stub":false,"isDir":false},"fname":"s.l.cpp.mem-mgmt.pointers","type":"note","vault":{"fsPath":"DevLog"},"contentHash":"4335b16329a81d4c4820cdfa2616bcf9","links":[],"anchors":{"pointers-in-c":{"type":"header","text":"Pointers in C++","value":"pointers-in-c","line":11,"column":0,"depth":2},"example":{"type":"header","text":"Example","value":"example","line":15,"column":0,"depth":2}},"children":["vuv0dtzu9tr3iyrnolz8t3i","cpcmnbirc53qw8wzpafofrp","ernsq96pcf7nx3eens6p870"],"parent":"her8adwj636p8kbm5vapzie","data":{}},"body":"<h1 id=\"pointers\"><a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#pointers\"></a>Pointers</h1>\n<h2 id=\"pointers-in-c\"><a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#pointers-in-c\"></a>Pointers in C++</h2>\n<blockquote>\n<p>A <strong>pointer</strong> is a variable that contains a memory address, rather than containing data like most variables</p>\n</blockquote>\n<h2 id=\"example\"><a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#example\"></a>Example</h2>\n<pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&#x3C;iostream></span></span>\n<span class=\"token keyword\">using</span> <span class=\"token keyword\">namespace</span> std<span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">int</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n   <span class=\"token keyword\">int</span> usrInt <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// User defined int value</span>\n   <span class=\"token keyword\">int</span><span class=\"token operator\">*</span> myPtr <span class=\"token operator\">=</span> <span class=\"token keyword\">nullptr</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// Pointer to the user defined int value</span>\n   \n   <span class=\"token comment\">// Prompt user for input</span>\n   cout <span class=\"token operator\">&#x3C;&#x3C;</span> <span class=\"token string\">\"Enter any number: \"</span><span class=\"token punctuation\">;</span>\n   cin <span class=\"token operator\">>></span> usrInt<span class=\"token punctuation\">;</span>\n   \n   <span class=\"token comment\">// Output int value and address</span>\n   cout <span class=\"token operator\">&#x3C;&#x3C;</span> <span class=\"token string\">\"We wrote your number into variable usrInt.\"</span> <span class=\"token operator\">&#x3C;&#x3C;</span> endl<span class=\"token punctuation\">;</span>\n   cout <span class=\"token operator\">&#x3C;&#x3C;</span> <span class=\"token string\">\"The content of usrInt is: \"</span> <span class=\"token operator\">&#x3C;&#x3C;</span> usrInt <span class=\"token operator\">&#x3C;&#x3C;</span> <span class=\"token string\">\".\"</span> <span class=\"token operator\">&#x3C;&#x3C;</span> endl<span class=\"token punctuation\">;</span>\n   cout <span class=\"token operator\">&#x3C;&#x3C;</span> <span class=\"token string\">\"usrInt's memory address is: \"</span> <span class=\"token operator\">&#x3C;&#x3C;</span> <span class=\"token operator\">&#x26;</span>usrInt <span class=\"token operator\">&#x3C;&#x3C;</span> <span class=\"token string\">\".\"</span> <span class=\"token operator\">&#x3C;&#x3C;</span> endl<span class=\"token punctuation\">;</span>\n   cout <span class=\"token operator\">&#x3C;&#x3C;</span> endl <span class=\"token operator\">&#x3C;&#x3C;</span> <span class=\"token string\">\"We can store that address into pointer variable myPtr.\"</span>\n        <span class=\"token operator\">&#x3C;&#x3C;</span> endl<span class=\"token punctuation\">;</span>\n   \n   <span class=\"token comment\">// Grab address storing user value</span>\n   myPtr <span class=\"token operator\">=</span> <span class=\"token operator\">&#x26;</span>usrInt<span class=\"token punctuation\">;</span>\n   \n   <span class=\"token comment\">// Output pointer value and value at pointer address</span>\n   cout <span class=\"token operator\">&#x3C;&#x3C;</span> <span class=\"token string\">\"The content of myPtr is: \"</span> <span class=\"token operator\">&#x3C;&#x3C;</span> myPtr <span class=\"token operator\">&#x3C;&#x3C;</span> <span class=\"token string\">\".\"</span> <span class=\"token operator\">&#x3C;&#x3C;</span> endl<span class=\"token punctuation\">;</span>\n   cout <span class=\"token operator\">&#x3C;&#x3C;</span> <span class=\"token string\">\"The content of what myPtr points to is: \"</span>\n        <span class=\"token operator\">&#x3C;&#x3C;</span> <span class=\"token operator\">*</span>myPtr <span class=\"token operator\">&#x3C;&#x3C;</span> <span class=\"token string\">\".\"</span> <span class=\"token operator\">&#x3C;&#x3C;</span> endl<span class=\"token punctuation\">;</span>\n   \n   <span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<hr>\n<strong>Children</strong>\n<ol>\n<li><a href=\"/DevLog/notes/vuv0dtzu9tr3iyrnolz8t3i\">Operators</a></li>\n<li><a href=\"/DevLog/notes/cpcmnbirc53qw8wzpafofrp\">Symbol Usage</a></li>\n<li><a href=\"/DevLog/notes/ernsq96pcf7nx3eens6p870\">Using Pointers</a></li>\n</ol>","noteIndex":{"id":"root","title":"root","desc":"","updated":1641013093667,"created":1595961348801,"stub":false,"custom":{"stub":false,"nav_order":0,"permalink":"/"},"fname":"root","type":"note","vault":{"fsPath":"DevLog"},"contentHash":"b0b26527a2962dbb8bd5fb9a53ad702f","links":[],"anchors":{},"children":["rzqe5mjn3q2zfscw1roxr20","Bl9NeJmftBQJyJA3X4a6u","inm1S24v2GcN3Quf7gzDb","fmx7cfcdzale0ezna61yq5z","q6tr8q7gahfijix2ktlhcu3","yah6spesmpstech2ue2k3lq","6pxwlugphnw6vm4t8kn0j5p","i17wi8y2hgivywe08h6q6it","1st35wikvph2aew8aana21u","mijr0wvj3qz0mt9pv9xo1jv","qaf8v120h0ffvbowysjxw50","sh4851li2rsrhx47wwsirgv","fwqjigvqyfxiyl3pbpjvgdw","pxdvvln974xhe8w0alh0hoy","n6yddb1smrac5ll3l1y6wbd","g5dllyqoqkenoiz3opalzu6","kbwt8ucy0yh6bo8fl0kv9iw","beykavbe22agsufmm03hu0c","2uvuqa3c15o5r4j7sqadqvr","yr6gzhx0bhzyec6f52y66vf","4no90tcdswtuwmjm0bxnetx"],"parent":null,"data":{},"body":"\nThe hyperfixated rabbit hole diving knowledge base that is my brain looking at technology.\n"},"collectionChildren":null,"customHeadContent":null,"config":{"version":5,"dev":{"enablePreviewV2":true},"commands":{"lookup":{"note":{"selectionMode":"extract","confirmVaultOnCreate":true,"leaveTrace":false,"bubbleUpCreateNew":true,"fuzzThreshold":0.2,"vaultSelectionModeOnCreate":"smart"}},"randomNote":{},"insertNote":{"initialValue":"templates"},"insertNoteLink":{"aliasMode":"none","enableMultiSelect":false},"insertNoteIndex":{"enableMarker":false},"copyNoteLink":{},"templateHierarchy":"template"},"workspace":{"vaults":[{"fsPath":"sterkere","visibility":"private"},{"fsPath":"Norsk","visibility":"private"},{"fsPath":"DevLog"}],"journal":{"dailyDomain":"log","name":"daily","dateFormat":"yyyy.MM.dd","addBehavior":"childOfCurrent"},"scratch":{"name":"scratch","dateFormat":"yyyy.MM.dd.HHmmss","addBehavior":"asOwnDomain"},"task":{"todoIntegration":true,"name":"task","dateFormat":"yyyy.MM.dd","addBehavior":"asOwnDomain","statusSymbols":{"":" ","wip":"wip","done":"x","assigned":"a","moved":"m","blocked":"b","delegated":"l","dropped":"d","pending":"y"},"prioritySymbols":{"H":"high","M":"medium","L":"low"},"createTaskSelectionType":"selection2link","taskCompleteStatus":["done","x"]},"graph":{"zoomSpeed":1,"createStub":false},"enableAutoCreateOnDefinition":false,"enableXVaultWikiLink":false,"enableRemoteVaultInit":true,"enableUserTags":true,"enableHashTags":true,"workspaceVaultSyncMode":"noCommit","enableAutoFoldFrontmatter":false,"enableEditorDecorations":true,"maxPreviewsCached":10,"maxNoteLength":204800,"dendronVersion":"0.95.1","enableFullHierarchyNoteTitle":false,"enableHandlebarTemplates":false,"templateHierarchy":"template","enableSmartRefs":false},"preview":{"enableFMTitle":true,"enableNoteTitleForLink":true,"enableMermaid":true,"enablePrettyRefs":true,"enableKatex":true,"automaticallyShowPreview":false,"enableFrontmatterTags":true,"enableHashesForFMTags":false},"publishing":{"theme":"custom","enableFMTitle":true,"enableNoteTitleForLink":true,"enableMermaid":true,"enablePrettyRefs":true,"enableKatex":true,"assetsPrefix":"/DevLog","copyAssets":true,"siteHierarchies":["root"],"enableSiteLastModified":true,"siteRootDir":"docs","siteUrl":"https://{GITHUB_USERNAME}.github.io","enableFrontmatterTags":true,"enableHashesForFMTags":false,"enableRandomlyColoredTags":true,"duplicateNoteBehavior":{"action":"useVault","payload":["DevLog"]},"writeStubs":false,"seo":{"title":"Dendron","description":"Personal knowledge space"},"github":{"enableEditLink":true,"editLinkText":"Edit this page on GitHub","editBranch":"master","editViewMode":"tree"},"enablePrettyLinks":true,"enableTaskNotes":true,"siteFaviconPath":"favicon.ico","siteIndex":"root"}}},"__N_SSG":true}