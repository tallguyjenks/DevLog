{"pageProps":{"note":{"id":"9voqqcm1pakwsgkcb3m65bp","title":"How to Use Rowcount in Sql Server","desc":"","updated":1646345349638,"created":1646344477751,"custom":{},"fname":"r.(.2022.03.03.how-to-use-rowcount-in-sql-server","type":"note","vault":{"fsPath":"DevLog"},"contentHash":"318210aabf51ee767b63a4e2650a6ff1","links":[{"from":{"fname":"log.daily.2022.03.03","vaultName":"DevLog"},"type":"backlink","position":{"start":{"line":7,"column":3,"offset":504},"end":{"line":7,"column":58,"offset":559},"indent":[]},"value":"r.(.2022.03.03.how-to-use-rowcount-in-sql-server","alias":"r.(.2022.03.03.how-to-use-rowcount-in-sql-server"}],"anchors":{"link":{"type":"header","text":"Link","value":"link","line":8,"column":0,"depth":2},"usage":{"type":"header","text":"Usage","value":"usage","line":14,"column":0,"depth":2},"error-handling-and-business-rules":{"type":"header","text":"Error Handling and Business Rules","value":"error-handling-and-business-rules","line":31,"column":0,"depth":2},"instances-of-large-rowcount":{"type":"header","text":"Instances of Large ROWCOUNT","value":"instances-of-large-rowcount","line":49,"column":0,"depth":2},"utilizing-rowcount-with-try-catch-statements":{"type":"header","text":"Utilizing ROWCOUNT with Try Catch Statements","value":"utilizing-rowcount-with-try-catch-statements","line":60,"column":0,"depth":2},"sql-server-set-nocount-and-set-rowcount":{"type":"header","text":"SQL Server SET NOCOUNT AND SET ROWCOUNT","value":"sql-server-set-nocount-and-set-rowcount","line":92,"column":0,"depth":2},"set-rowcount":{"type":"header","text":"SET ROWCOUNT","value":"set-rowcount","line":94,"column":0,"depth":3},"set-nocount":{"type":"header","text":"SET NOCOUNT","value":"set-nocount","line":102,"column":0,"depth":3}},"children":[],"parent":"e8p0itqsswnx0gdx8hej0lz","data":{}},"body":"<h1 id=\"how-to-use-rowcount-in-sql-server\"><a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#how-to-use-rowcount-in-sql-server\"></a>How to Use Rowcount in Sql Server</h1>\n<h2 id=\"link\"><a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#link\"></a>Link</h2>\n<p>How to use <code>@@ROWCOUNT</code> in SQL Server</p>\n<p><a href=\"https://www.mssqltips.com/sqlservertip/6091/how-to-use-rowcount-in-sql-server/\">https://www.mssqltips.com/sqlservertip/6091/how-to-use-rowcount-in-sql-server/</a></p>\n<h2 id=\"usage\"><a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#usage\"></a>Usage</h2>\n<p><code>SELECT @@ROWCOUNT</code> in the same execution block to get the result back</p>\n<pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token keyword\">SELECT</span> <span class=\"token keyword\">TOP</span> <span class=\"token number\">1000</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">FROM</span> dbo<span class=\"token punctuation\">.</span>Customer<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">SELECT</span> @<span class=\"token variable\">@ROWCOUNT</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<p>This returns the query results and the count of how many rows from that result set</p>\n<pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token keyword\">SELECT</span> @<span class=\"token variable\">@ROWCOUNT</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<p>executed by itself only returns a count of 1 record (itself).</p>\n<h2 id=\"error-handling-and-business-rules\"><a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#error-handling-and-business-rules\"></a>Error Handling and Business Rules</h2>\n<blockquote>\n<p>Using SQL Server <code>@@ROWCOUNT</code> for Error Handling and Checking a Business Rule</p>\n</blockquote>\n<pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token keyword\">BEGIN</span> <span class=\"token keyword\">TRAN</span>\n\n<span class=\"token keyword\">UPDATE</span> <span class=\"token punctuation\">[</span>Sales<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">[</span>SalesOrderHeader<span class=\"token punctuation\">]</span>\n<span class=\"token keyword\">SET</span> <span class=\"token punctuation\">[</span>SubTotal<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>SubTotal<span class=\"token punctuation\">]</span> <span class=\"token operator\">*</span> <span class=\"token number\">1.1</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">-- 10% increase</span>\n\n<span class=\"token keyword\">IF</span> @<span class=\"token variable\">@ROWCOUNT</span> <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n    <span class=\"token keyword\">PRINT</span> <span class=\"token string\">'Something went wrong!'</span>\n<span class=\"token keyword\">ELSE</span> <span class=\"token keyword\">PRINT</span> <span class=\"token string\">'Rows were updated...'</span>\n\n<span class=\"token comment\">--COMMIT</span>\n<span class=\"token keyword\">ROLLBACK</span>\n</code></pre>\n<h2 id=\"instances-of-large-rowcount\"><a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#instances-of-large-rowcount\"></a>Instances of Large ROWCOUNT</h2>\n<p>SQL Server <code>ROWCOUNT_BIG</code> function</p>\n<p>The data type of <code>@@ROWCOUNT</code> is integer. In the cases where a higher number of rows are affected than an integer can handle (meaning more than 2,147,483,647 rows!), you need to use the ROWCOUNT_BIG function. This function returns the data type <code>bigint</code>.</p>\n<pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token keyword\">SELECT</span> <span class=\"token keyword\">TOP</span> <span class=\"token number\">1000</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">FROM</span> dbo<span class=\"token punctuation\">.</span>Customer<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">SELECT</span> ROWCOUNT_BIG<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<h2 id=\"utilizing-rowcount-with-try-catch-statements\"><a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#utilizing-rowcount-with-try-catch-statements\"></a>Utilizing ROWCOUNT with Try Catch Statements</h2>\n<pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token keyword\">BEGIN</span> TRY\n    <span class=\"token keyword\">SELECT</span> <span class=\"token keyword\">TOP</span> <span class=\"token number\">100</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">FROM</span> <span class=\"token punctuation\">[</span>AdventureWorks2017<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">[</span>Person<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">[</span>Person<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">END</span> TRY\n<span class=\"token keyword\">BEGIN</span> CATCH\n    <span class=\"token keyword\">SELECT</span> <span class=\"token keyword\">TOP</span> <span class=\"token number\">50</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">FROM</span> <span class=\"token punctuation\">[</span>AdventureWorks2017<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">[</span>Person<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">[</span>Person<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">END</span> CATCH\n<span class=\"token keyword\">SELECT</span> @<span class=\"token variable\">@ROWCOUNT</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">/*\n\n@@ROWCOUNT returns zero! This is because the last statement is not the SELECT statement from the TRY block (which has been executed), it’s also not the one from the TRY block as it’s the last SELECT in the script. It’s the TRY/CATCH block itself! @@ROWCOUNT returns the affected rows from any statement, even if it’s not DML or a SELECT query.\n\nTo avoid this kind of scenario, you can store the row count in a local variable. The script would then look like this:\n\n*/</span>\n\n<span class=\"token keyword\">DECLARE</span> <span class=\"token variable\">@rowcount</span> <span class=\"token keyword\">INT</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">BEGIN</span> TRY\n    <span class=\"token keyword\">SELECT</span> <span class=\"token keyword\">TOP</span> <span class=\"token number\">100</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">FROM</span> <span class=\"token punctuation\">[</span>AdventureWorks2017<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">[</span>Person<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">[</span>Person<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">SET</span> <span class=\"token variable\">@rowcount</span> <span class=\"token operator\">=</span> @<span class=\"token variable\">@ROWCOUNT</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">END</span> TRY\n<span class=\"token keyword\">BEGIN</span> CATCH\n    <span class=\"token keyword\">SELECT</span> <span class=\"token keyword\">TOP</span> <span class=\"token number\">50</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">FROM</span> <span class=\"token punctuation\">[</span>AdventureWorks2017<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">[</span>Person<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">[</span>Person<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">SET</span> <span class=\"token variable\">@rowcount</span> <span class=\"token operator\">=</span> @<span class=\"token variable\">@ROWCOUNT</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">END</span> CATCH\n<span class=\"token keyword\">SELECT</span> <span class=\"token variable\">@rowcount</span><span class=\"token punctuation\">;</span>\n\n</code></pre>\n<h2 id=\"sql-server-set-nocount-and-set-rowcount\"><a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#sql-server-set-nocount-and-set-rowcount\"></a>SQL Server SET NOCOUNT AND SET ROWCOUNT</h2>\n<h3 id=\"set-rowcount\"><a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#set-rowcount\"></a>SET ROWCOUNT</h3>\n<p>Although the name, <code>SET ROWCOUNT</code> is very similar, it doesn’t impact <code>@@ROWCOUNT</code> directly. <code>SET ROWCOUNT</code> simply tells SQL Server to stop processing a query after the specified number of rows have been returned, which makes it kind of a “global TOP clause”.</p>\n<p>In the following example, we’re limiting the rows to 500. The SELECT query itself should return 1,000 rows, but as you can see <code>@@ROWCOUNT</code> tells us only 500 were returned.</p>\n<p><img src=\"/DevLog/assets/images/2022-03-03-14-02-14.png\" alt=\"SET ROWCOUNT\"></p>\n<h3 id=\"set-nocount\"><a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#set-nocount\"></a>SET NOCOUNT</h3>\n<p><code>SET NOCOUNT ON</code> also doesn’t affect <code>@@ROWCOUNT</code>. <code>SET NOCOUNT</code> tells SQL Server to stop displaying the message with the number of rows affected by a query. However, <code>@@ROWCOUNT</code> is still updated.</p>\n<p>Let’s illustrate with an example. First the default configuration where <code>NOCOUNT</code> is off.</p>\n<p><img src=\"/DevLog/assets/images/2022-03-03-14-03-56.png\" alt=\"NOCOUNT\"></p>\n<hr>\n<strong>Backlinks</strong>\n<ul>\n<li><a href=\"/DevLog/notes/09s1m81lxifmup1so6qi7u6\">2022-03-03 (DevLog)</a></li>\n</ul>","noteIndex":{"id":"root","title":"root","desc":"","updated":1641013093667,"created":1595961348801,"stub":false,"custom":{"stub":false,"nav_order":0,"permalink":"/"},"fname":"root","type":"note","vault":{"fsPath":"DevLog"},"contentHash":"b0b26527a2962dbb8bd5fb9a53ad702f","links":[],"anchors":{},"children":["rzqe5mjn3q2zfscw1roxr20","Bl9NeJmftBQJyJA3X4a6u","inm1S24v2GcN3Quf7gzDb","fmx7cfcdzale0ezna61yq5z","q6tr8q7gahfijix2ktlhcu3","yah6spesmpstech2ue2k3lq","6pxwlugphnw6vm4t8kn0j5p","i17wi8y2hgivywe08h6q6it","1st35wikvph2aew8aana21u","mijr0wvj3qz0mt9pv9xo1jv","qaf8v120h0ffvbowysjxw50","sh4851li2rsrhx47wwsirgv","fwqjigvqyfxiyl3pbpjvgdw","pxdvvln974xhe8w0alh0hoy","n6yddb1smrac5ll3l1y6wbd","g5dllyqoqkenoiz3opalzu6","kbwt8ucy0yh6bo8fl0kv9iw","beykavbe22agsufmm03hu0c","2uvuqa3c15o5r4j7sqadqvr","yr6gzhx0bhzyec6f52y66vf","4no90tcdswtuwmjm0bxnetx"],"parent":null,"data":{},"body":"\nThe hyperfixated rabbit hole diving knowledge base that is my brain looking at technology.\n"},"collectionChildren":null,"customHeadContent":null,"config":{"version":5,"dev":{"enablePreviewV2":true},"commands":{"lookup":{"note":{"selectionMode":"extract","confirmVaultOnCreate":true,"leaveTrace":false,"bubbleUpCreateNew":true,"fuzzThreshold":0.2,"vaultSelectionModeOnCreate":"smart"}},"randomNote":{},"insertNote":{"initialValue":"templates"},"insertNoteLink":{"aliasMode":"none","enableMultiSelect":false},"insertNoteIndex":{"enableMarker":false},"copyNoteLink":{},"templateHierarchy":"template"},"workspace":{"vaults":[{"fsPath":"sterkere","visibility":"private"},{"fsPath":"Norsk","visibility":"private"},{"fsPath":"DevLog"}],"journal":{"dailyDomain":"log","name":"daily","dateFormat":"yyyy.MM.dd","addBehavior":"childOfCurrent"},"scratch":{"name":"scratch","dateFormat":"yyyy.MM.dd.HHmmss","addBehavior":"asOwnDomain"},"task":{"todoIntegration":true,"name":"task","dateFormat":"yyyy.MM.dd","addBehavior":"asOwnDomain","statusSymbols":{"":" ","wip":"wip","done":"x","assigned":"a","moved":"m","blocked":"b","delegated":"l","dropped":"d","pending":"y"},"prioritySymbols":{"H":"high","M":"medium","L":"low"},"createTaskSelectionType":"selection2link","taskCompleteStatus":["done","x"]},"graph":{"zoomSpeed":1,"createStub":false},"enableAutoCreateOnDefinition":false,"enableXVaultWikiLink":false,"enableRemoteVaultInit":true,"enableUserTags":true,"enableHashTags":true,"workspaceVaultSyncMode":"noCommit","enableAutoFoldFrontmatter":false,"enableEditorDecorations":true,"maxPreviewsCached":10,"maxNoteLength":204800,"dendronVersion":"0.95.1","enableFullHierarchyNoteTitle":false,"enableHandlebarTemplates":false,"templateHierarchy":"template","enableSmartRefs":false},"preview":{"enableFMTitle":true,"enableNoteTitleForLink":true,"enableMermaid":true,"enablePrettyRefs":true,"enableKatex":true,"automaticallyShowPreview":false,"enableFrontmatterTags":true,"enableHashesForFMTags":false},"publishing":{"theme":"custom","enableFMTitle":true,"enableNoteTitleForLink":true,"enableMermaid":true,"enablePrettyRefs":true,"enableKatex":true,"assetsPrefix":"/DevLog","copyAssets":true,"siteHierarchies":["root"],"enableSiteLastModified":true,"siteRootDir":"docs","siteUrl":"https://{GITHUB_USERNAME}.github.io","enableFrontmatterTags":true,"enableHashesForFMTags":false,"enableRandomlyColoredTags":true,"duplicateNoteBehavior":{"action":"useVault","payload":["DevLog"]},"writeStubs":false,"seo":{"title":"Dendron","description":"Personal knowledge space"},"github":{"enableEditLink":true,"editLinkText":"Edit this page on GitHub","editBranch":"master","editViewMode":"tree"},"enablePrettyLinks":true,"enableTaskNotes":true,"siteFaviconPath":"favicon.ico","siteIndex":"root"}}},"__N_SSG":true}